Imports System.Drawing
Imports System.Collections.Generic
Imports System.Collections
Imports System.Text
Imports System.Web.UI.HtmlControls
Imports System.Web.UI.WebControls
Imports Winnovative
Imports Newtonsoft.Json
Imports System.Data.OleDb
Imports System.Data
Imports CrystalDecisions.CrystalReports
Imports CrystalDecisions.Shared
Imports CrystalDecisions.CrystalReports.Engine
Imports System.Runtime.Serialization
Imports BarCodeImageGenerator.BarCode
Imports Ionic.Zip
Imports System.Xml

Partial Class frmCRFPrint_New
    Inherits System.Web.UI.Page

#Region "Variable Declaration"

    Private objCommon As New clsCommon
    Private objHelp As WS_HelpDbTable.WS_HelpDbTable = objCommon.GetHelpDbTableRef()
    Dim eStr_Retu As String = String.Empty
    Private Const VS_dtMedEx_Fill As String = "dt_MedEx_Fill"
    Private Const VS_BlankCRF As String = "BlankCRF"
    Private Const VS_AuthenticatedBy As String = "AuthenticatedBy"
    Private Const VS_AuthenticatedOn As String = "AuthenticatedOn"
    Private Shared MainIdentifier As Integer = 0
    Private Const vs_reporttype As String = "Report_Type"
    Private Const VS_Report As String = "Dt_Report"
    Private Const VS_Activity As String = "Dt_Activity"
    Private Const vs_dsMsr As String = "ds_MSR"

    Private Const GVR_Edit As Integer = 0
    Private Const GVR_SRNo As Integer = 1
    Private Const GVR_ReportId As Integer = 2
    Private Const GVR_NodeID As Integer = 3
    Private Const GVR_DisplayName As Integer = 4
    Private Const GVR_Rearrange As Integer = 5

    Private Const GVA_Edit As Integer = 0
    Private Const GVA_SRNo As Integer = 1
    Private Const GVA_NodeID As Integer = 2
    Private Const GVA_DisplayName As Integer = 3
    Private Const GVA_Rearrange As Integer = 4

    Public Const IsProjectLock As String = "IsProjectLock"
    Public Const IsProjectCT As String = "IsProjectCT"
    Public Const vs_Workspaceprotocoldetail As String = "Workspaceprotocoldetail"
    Public Const vs_View_getWorkspaceDetailForHdr As String = "View_getWorkspaceDetailForHdr"
    Public Const vs_View_WorkspaceSubjectMst As String = "View_WorkspaceSubjectMst"
    Public Const vs_sponsorlogofilepath As String = "vs_sponsorlogofilepath"
    Dim vs_strReporttype As String = "ReportType"
    Private rDocument As New Engine.ReportDocument

#End Region

#Region "Page Load"

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Not IsPostBack() Then

            Me.AutoCompleteExtender1.ContextKey = "iUserId = " + Me.Request.QueryString("UserId").ToString()
            Me.ddlActivityType.Enabled = False
            Me.BtnGeneratePdf.Style.Add("display", "none")

            If (Not Session(S_ProjectId) Is Nothing) AndAlso (Not Session(S_ProjectName) Is Nothing) Then
                Me.txtproject.Text = Session(S_ProjectName)
                Me.HProjectId.Value = Session(S_ProjectId)
                btnSetProject_Click(sender, e)
            End If
            CType(Me.Master.FindControl("lblHeading"), Label).Text = "Dossier Compilation"
            Page.Title = " ::  Dossier Compilation ::  " + System.Configuration.ConfigurationManager.AppSettings("Client")
        End If

    End Sub

#End Region

#Region "GenCall"

    Private Function GenCall() As Boolean

        If Not GenCall_Data() Then
            Exit Function
        End If

        If Me.RBLselect.SelectedValue.Trim() = "1" Then
            If Not GenCall_ShowUI() Then
                Exit Function
            End If
        Else
            If Me.hdnSubSelection.Value.Trim() = "" Then
                If Not GenCall_ShowUI() Then
                    Exit Function
                End If
            ElseIf Me.ddlActivityType.SelectedIndex = 1 Then
                If Not GenCall_ShowUI() Then
                    Exit Function
                End If
            End If

        End If

        Return True

    End Function

#End Region

#Region "GenCall_Data "

    Private Function GenCall_Data() As Boolean
        Dim ds As New DataSet
        Dim estr_retu As String = String.Empty
        Dim strQuery As String = String.Empty
        Dim Wstr As String = String.Empty
        Dim Wstr_nodeid As String = String.Empty
        Dim Wstr_inodeid As String = String.Empty
        Dim ds_CRFHdrDtlSubDtl As New DataSet
        Dim AuthenticatedOn As String
        Dim ds_msr As New DataSet
        Try

            Me.Session(VS_AuthenticatedOn) = ""
            Me.Session(VS_AuthenticatedBy) = ""

            If Me.hdnSubSelection.Value.Trim() <> "" Then

                If Me.ddlActivityType.SelectedIndex = 1 Then
                    Wstr = "cActiveFlag <> 'N' and vWorkSpaceId='" & Me.HProjectId.Value.Trim() & "'"
                    Wstr += " And iNodeId in("

                    For Each row As GridViewRow In gvwActivity.Rows
                        If row.RowType = DataControlRowType.DataRow Then
                            If CType(row.FindControl("chkSelect"), HtmlInputCheckBox).Checked Then
                                Wstr_nodeid += row.Cells(GVA_NodeID).Text.ToString() + ","
                            End If
                        End If
                    Next

                    If Wstr_nodeid.Contains(",") Then
                        Wstr_nodeid = Wstr_nodeid.Substring(0, Wstr_nodeid.LastIndexOf(","))
                    End If
                    Wstr += Wstr_nodeid
                    Wstr += ") And vSubjectId in (" + Me.hdnSubSelection.Value.Trim() + ")"
                    Wstr += " Order by iPeriod,iNodeNo,iNodeId,vMedExGroupCode,vMedExSubGroupCode,iSeqNo,View_CRFHdrDtlSubDtl_Print.iRepeatNo"
                    Wstr += " OPTION (MAXDOP 1)"

                    objHelp.Timeout = -1
                    If Not Me.objHelp.View_CRFHdrDtlSubDtl_Print(Wstr, "*,DENSE_RANK() OVER(PARTITION BY nCRFHdrNo,vActivityId,vSubjectId ORDER BY nCRFHdrNo,vActivityId,vSubjectId,iRepeatNo) as [RepetitionNo] ", ds_CRFHdrDtlSubDtl, estr_retu) Then
                        Throw New Exception(estr_retu)
                    End If

                    If ds_CRFHdrDtlSubDtl.Tables(0).Rows.Count > 0 Then
                        Me.lblSubjectName.Text = ds_CRFHdrDtlSubDtl.Tables(0).Rows(0).Item("vSubjectName").ToString()
                        Me.Session(VS_dtMedEx_Fill) = ds_CRFHdrDtlSubDtl.Tables(0)
                        Me.Session(VS_BlankCRF) = "NO"
                        If ds_CRFHdrDtlSubDtl.Tables(0).Select("", "AuthenticatedOn DESC")(0).Item("AuthenticatedOn") <> "" Then
                            AuthenticatedOn = ds_CRFHdrDtlSubDtl.Tables(0).Select("", "AuthenticatedOn DESC")(0).Item("AuthenticatedOn")
                            Me.Session(VS_AuthenticatedOn) = CType(AuthenticatedOn, DateTime).ToString("dd-MMM-yyyy HH:mm") + strServerOffset 'for format like "16 July, 2011 09:03:00 PM"
                            Me.Session(VS_AuthenticatedBy) = ds_CRFHdrDtlSubDtl.Tables(0).Select("", "AuthenticatedOn DESC")(0).Item("AuthenticatedBy").ToString()
                        End If

                    Else
                        Me.HFHeaderLabel.Value = Nothing
                        Me.HFHeaderLabel.Value = ""
                        Me.BtnGeneratePdf.Style.Add("display", "none")

                        PlaceMedEx.Controls.Clear()
                        Me.Session(VS_dtMedEx_Fill) = ds_CRFHdrDtlSubDtl.Tables(0)
                        objCommon.ShowAlert("Selected Subject and Activities Have No Data.", Me.Page)

                    End If
                End If

                If Not Me.ViewState(vs_strReporttype) Is Nothing Then
                    If Me.ViewState(vs_strReporttype).ToString.IndexOf("CRF") > -1 Then

                        Wstr = "cActiveFlag <> 'N' and vWorkSpaceId='" & Me.HProjectId.Value.Trim() & "'"
                        Wstr += " And iNodeId in("

                        For Each row As GridViewRow In gvwActivity.Rows
                            If row.RowType = DataControlRowType.DataRow Then
                                If CType(row.FindControl("chkSelect"), HtmlInputCheckBox).Checked Then
                                    Wstr_nodeid += row.Cells(GVA_NodeID).Text.ToString() + ","
                                End If
                            End If
                        Next

                        If Wstr_nodeid.Contains(",") Then
                            Wstr_nodeid = Wstr_nodeid.Substring(0, Wstr_nodeid.LastIndexOf(","))
                        End If
                        Wstr += Wstr_nodeid
                        Wstr += ") And vSubjectId in (" + Me.hdnSubSelection.Value.Trim() + ")"
                        Wstr += " Order by iPeriod,iNodeNo,iNodeId,vMedExGroupCode,vMedExSubGroupCode,iSeqNo,View_CRFHdrDtlSubDtl_Print.iRepeatNo"
                        Wstr += " OPTION (MAXDOP 1)"

                        objHelp.Timeout = -1
                        If Not Me.objHelp.View_CRFHdrDtlSubDtl_Print(Wstr, "*,DENSE_RANK() OVER(PARTITION BY nCRFHdrNo,vActivityId,vSubjectId ORDER BY nCRFHdrNo,vActivityId,vSubjectId,iRepeatNo) as [RepetitionNo] ", ds_CRFHdrDtlSubDtl, estr_retu) Then
                            Throw New Exception(estr_retu)
                        End If

                        If ds_CRFHdrDtlSubDtl.Tables(0).Rows.Count > 1 Then
                            Me.lblSubjectName.Text = ds_CRFHdrDtlSubDtl.Tables(0).Rows(1).Item("vSubjectName").ToString()
                            Me.Session(VS_BlankCRF) = "NO"
                            If ds_CRFHdrDtlSubDtl.Tables(0).Select("", "AuthenticatedOn DESC")(0).Item("AuthenticatedOn") <> "" Then
                                AuthenticatedOn = ds_CRFHdrDtlSubDtl.Tables(0).Select("", "AuthenticatedOn DESC")(0).Item("AuthenticatedOn")
                                Me.Session(VS_AuthenticatedOn) = CType(AuthenticatedOn, DateTime).ToString("dd-MMM-yyyy HH:mm") + strServerOffset 'for format like "16 July, 2011 09:03:00 PM"
                                Me.Session(VS_AuthenticatedBy) = ds_CRFHdrDtlSubDtl.Tables(0).Select("", "AuthenticatedOn DESC")(0).Item("AuthenticatedBy").ToString()
                            End If

                        Else
                            Me.HFHeaderLabel.Value = Nothing
                            Me.HFHeaderLabel.Value = ""
                            Me.BtnGeneratePdf.Style.Add("display", "none")
                            PlaceMedEx.Controls.Clear()
                            objCommon.ShowAlert("Selected Subject and Activities Have No CRF Data.", Me.Page)
                        End If

                        Me.Session(VS_dtMedEx_Fill) = ds_CRFHdrDtlSubDtl.Tables(0)
                    End If
                    If Me.ViewState(vs_strReporttype).ToString.IndexOf("MSR") > -1 Then
                        Wstr = "vWorkSpaceId = '" + Me.HProjectId.Value.ToString() + "' and vSubjectId in (" + Me.hdnSubSelection.Value.Trim() + ")"
                        If Not objHelp.getViewMaxMedExScreeningHdrDtl_Rpt(Wstr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, _
                                                     ds_msr, estr_retu) Then

                            Throw New Exception("Error While getting data from getViewMaxMedExScreeningHdrDtl_Rpt" + estr_retu)
                        End If

                        If ds_msr.Tables(0).Rows.Count = 0 Then
                            objCommon.ShowAlert("Selected Subject Have No MSR Data.", Me.Page)
                        End If
                        Me.Session(vs_dsMsr) = ds_msr.Tables(0)
                    End If
                End If

            Else
                Wstr = "vWorkSpaceId = '" & Me.HProjectId.Value.Trim() & "' And vMedExType <> 'Import' "
                Wstr += "And iNodeId in("

                For Each row As GridViewRow In gvwActivity.Rows
                    If row.RowType = DataControlRowType.DataRow Then
                        If CType(row.FindControl("chkSelect"), HtmlInputCheckBox).Checked Then
                            Wstr_inodeid += row.Cells(GVA_NodeID).Text.ToString() + ","
                        End If
                    End If
                Next

                If Wstr_inodeid.Contains(",") Then
                    Wstr_inodeid = Wstr_inodeid.Substring(0, Wstr_inodeid.LastIndexOf(","))
                End If
                Wstr += Wstr_inodeid
                Wstr += ") order by iPeriod,iNodeNo,iNodeId,vMedExGroupCode,vMedExSubGroupCode,iSeqNo,RepetitionNo"   'For Lambda

                If Not Me.objHelp.View_BlankCRF(Wstr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, ds, estr_retu) Then
                    Throw New Exception(estr_retu)
                End If

                Me.Session(VS_dtMedEx_Fill) = ds.Tables(0)
                Me.Session(VS_BlankCRF) = "YES"
            End If
            Return True

        Catch ex As Exception
            ShowErrorMessage(ex.Message.ToString, estr_retu, ex)
        Finally
            ds.Dispose()
            ds_CRFHdrDtlSubDtl.Dispose()
        End Try
    End Function

#End Region

#Region "GenCall_ShowUI "

    Private Function GenCall_ShowUI() As Boolean
        Dim dt As New DataTable
        Dim dv As New DataView
        Dim dt_MedExMst As New DataTable
        Dim dr As DataRow
        Dim drGroup As DataRow
        Dim objelement As Object
        Dim dt_MedexGroup As New DataTable
        Dim CntSubGroup As Integer = 0
        Dim PrevSubGroupCodes As String = ""
        Dim Nodeid As Integer = 0
        Dim PreviousNodeID As Integer = 1
        Dim NodeDisplayName As String = String.Empty
        Dim dv_MedexGrp As New DataView
        Dim dtNodeID As New DataTable
        Dim Index As Integer = 0
        Dim SubjectIndex As Integer = 0
        Dim dt_Subject As New DataTable
        Dim dr_Subject As DataRow
        Dim SubjectId As String = ""
        Dim Prev_SubjectId As String = ""
        Dim SubjectName As String = ""
        Dim MedIndex As Integer = 0
        Dim Identifier As Integer = 0
        Dim ParentNodeId As Integer = 0
        Dim PreviousParentNodeId As Integer = 0
        Dim dtPeriod As New DataTable
        Dim dtParentActivity As New DataTable
        Dim Period As Integer = 0
        Dim PreviousPeriod As Integer = 0
        Dim dtMain As New DataTable
        Dim dvMain As New DataView
        Dim dvSort As New DataView
        Dim NodeIds As String = ""
        Dim dtData As New DataTable
        Dim dtsubjectcrf As New DataTable
        Try
            Page.Title = " ::  CRF Print ::  " + System.Configuration.ConfigurationManager.AppSettings("Client")
            PlaceMedEx.Controls.Clear()
            If Not Me.Session(VS_dtMedEx_Fill) Is Nothing Then
                If CType(Me.Session(VS_dtMedEx_Fill), DataTable).Rows.Count < 1 Then
                    If Not IsPostBack Then
                        Me.objCommon.ShowAlert("No Attribute is Attached with This Activity. So, please Attach Attribute to this Activity.", Me.Page)
                        Exit Function
                    End If

                End If
            End If
            If Me.Session(S_ScopeNo) = Scope_ClinicalTrial Then
                Me.SpnSubject.InnerHtml = "Subject No:"
                Me.SpnSubjectInit.InnerHtml = "Subject Initials:"
            End If
            PlaceMedEx.Controls.Add(New LiteralControl("<Table width=""100%"" style=""font-family: 'Times New Roman' !important; "">"))
            If Me.ddlActivityType.SelectedIndex = 1 Then
                If CType(Me.Session(VS_dtMedEx_Fill), DataTable).Rows.Count < 1 Then
                    Return True
                End If
                dt_Subject = CType(Me.Session(VS_dtMedEx_Fill), DataTable).Copy.DefaultView.ToTable(True, "vSubjectId,vSubjectName".Split(","))
                SubjectIndex += 1
                SubjectId = Convert.ToString(dt_Subject.Rows(0)("vSubjectId")).Trim()
                SubjectName = Convert.ToString(dt_Subject.Rows(0)("vSubjectName")).Trim()
                Dim ParentNodeIdNewPage As Integer = 0
                Dim RowCount As Integer = 0

                For Each row In gvwActivity.Rows
                    If row.RowType = DataControlRowType.DataRow Then
                        If CType(row.FindControl("chkSelect"), HtmlInputCheckBox).Checked Then
                            dvMain = CType(Me.Session(VS_dtMedEx_Fill), DataTable).Copy.DefaultView
                            Nodeid = Convert.ToInt32(row.Cells(GVA_NodeID).Text.ToString())
                            dvMain.RowFilter = " iNodeId = " + Nodeid.ToString()
                            If dvMain.ToTable().Rows.Count > 0 Then
                                dvSort = dvMain.ToTable.Copy.DefaultView.ToTable(True, "iParentNodeId,ParentActivityName,ParentNodeNo".Split(",")).DefaultView
                                dvSort.RowFilter = "isnull(iParentNodeId,0) <> 1"
                                dvSort.Sort = "ParentNodeNo asc"
                                dtParentActivity = dvSort.ToTable()

                                If dvSort.ToTable.Rows.Count = 0 Then
                                    Continue For
                                End If

                                For Each drParentActivity As DataRow In dtParentActivity.Rows
                                    ParentNodeIdNewPage = Convert.ToInt32(drParentActivity("iParentNodeID"))
                                    If chkSubactivityWise.Checked = True Then
                                        If RowCount = 0 AndAlso ParentNodeIdNewPage <> PreviousParentNodeId Then
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-inside:avoid; font-family:'Times New Roman'!important; font-size:12px; font-weight:bold;"" data-bookmark-enabled=""true"" data-bookmark-level=""1"" data-bookmark-text=""" + Convert.ToString(drParentActivity("ParentActivityName")) + """>")) '008ecd''redish orange for parent activity
                                        ElseIf RowCount <> 0 AndAlso ParentNodeIdNewPage = PreviousParentNodeId Then
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-before:always; font-family:'Times New Roman'!important; font-size:12px; font-weight:bold;"">")) '008ecd''redish orange for parent activity
                                        Else
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-before:always; font-family:'Times New Roman'!important; font-size:12px; font-weight:bold;"" data-bookmark-enabled=""true"" data-bookmark-level=""1"" data-bookmark-text=""" + Convert.ToString(drParentActivity("ParentActivityName")) + """>")) '008ecd''redish orange for parent activity
                                        End If
                                    Else
                                        If RowCount = 0 AndAlso ParentNodeIdNewPage <> PreviousParentNodeId Then
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-inside:avoid; font-family:'Times New Roman'!important; font-size:12px; font-weight:bold;"" data-bookmark-enabled=""true"" data-bookmark-level=""1"" data-bookmark-text=""" + Convert.ToString(drParentActivity("ParentActivityName")) + """>")) '008ecd''redish orange for parent activity
                                        ElseIf RowCount <> 0 AndAlso ParentNodeIdNewPage = PreviousParentNodeId Then
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-inside:avoid; font-family:'Times New Roman'!important; font-size:12px; font-weight:bold;"">")) '008ecd''redish orange for parent activity
                                        Else
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-inside:avoid; font-family:'Times New Roman'!important; font-size:12px; font-weight:bold;"" data-bookmark-enabled=""true"" data-bookmark-level=""1"" data-bookmark-text=""" + Convert.ToString(drParentActivity("ParentActivityName")) + """>")) '008ecd''redish orange for parent activity
                                        End If
                                    End If
                                    PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle; text-align: center; font-family:'Times New Roman'!important; font-size:12px; font-weight:bold;"">")) 'white-space: nowrap; 
                                    PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
                                    PlaceMedEx.Controls.Add(New LiteralControl(Convert.ToString(drParentActivity("ParentActivityName")).Trim()))
                                    PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                    PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                                    PreviousParentNodeId = drParentActivity("iParentNodeID")
                                Next

                                Period = dvMain.ToTable().Rows(0)("iPeriod")
                                NodeDisplayName = dvMain.ToTable().Rows(0)("vNodeDisplayName").ToString()
                                dtMain = CType(Me.Session(VS_dtMedEx_Fill), DataTable).Copy
                                dv_MedexGrp = dtMain.Copy.DefaultView
                                dv_MedexGrp.RowFilter = "iNodeID = " + Nodeid.ToString()

                                Dim dt_Repeatition As DataTable
                                dt_Repeatition = dv_MedexGrp.ToTable(True, "RepetitionNo".Split(","))
                                Dim PreviousRepeatition As Integer = 0

                                For Each drRepeatition As DataRow In dt_Repeatition.Rows
                                    dv_MedexGrp.RowFilter = "RepetitionNo = " + Convert.ToString(drRepeatition("RepetitionNo")).ToString()
                                    dt_MedexGroup = dv_MedexGrp.ToTable(True, "vMedExGroupCode".Split(","))
                                    PlaceMedEx.Controls.Add(New LiteralControl("<Tr ALIGN=LEFT style=""font-family:'Times New Roman'!important; font-size:12px; font-weight:bold;"" >"))
                                    PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:top;font-family:'Times New Roman'!important; font-size:12px; font-weight:bold;"">")) 'white-space: nowrap; 
                                    If PreviousRepeatition <> drRepeatition("RepetitionNo") Then
                                        If (PreviousNodeID <> Nodeid) Or (PreviousNodeID = Nodeid AndAlso PreviousRepeatition <> drRepeatition("RepetitionNo")) Then
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Table width=""100%"" cellspacing='0' style=""font-family:'Times New Roman'!important; font-size:12px; font-weight:bold; border-collapse: collapse !Important;"">")) ''blue line of activity
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" color:#FFFFFF; ALIGN=LEFT style=""BACKGROUND-COLOR: #008ecd; font-family:'Times New Roman'!important; font-size:12px; font-weight:bold; page-break-inside:avoid;"" data-bookmark-enabled=""true"" data-bookmark-level=""2"" data-bookmark-text=""" + IIf(drRepeatition("RepetitionNo") > 1, NodeDisplayName + " , Repetition-" + Convert.ToString(drRepeatition("RepetitionNo")), NodeDisplayName) + """>")) '008ecd
                                            If ParentNodeId = 1 Then
                                                PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle;color:#FFFFFF; font-family:'Times New Roman'!important; font-size:12px; font-weight:normal !important; width: 80%"">")) 'white-space: nowrap; 
                                            Else
                                                PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle;color:#FFFFFF; font-family:'Times New Roman'!important; font-size:12px; font-weight:normal !important; width: 80%"">")) 'white-space: nowrap; 
                                            End If
                                            dvMain.RowFilter = "iNodeId = " + Nodeid.ToString()
                                            dtData = dvMain.ToTable()
                                            PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
                                            If drRepeatition("RepetitionNo") > 1 Then
                                                PlaceMedEx.Controls.Add(New LiteralControl(NodeDisplayName + ", Repetition: " + Convert.ToString(drRepeatition("RepetitionNo"))))
                                            Else
                                                PlaceMedEx.Controls.Add(New LiteralControl(NodeDisplayName))
                                            End If
                                            If RBLProjecttype.SelectedIndex = 1 Then
                                                If dtData.Rows.Count > 0 Then
                                                    If dtData.Rows(0)("vMedExGroupCDISCValue").ToString() <> "" Then
                                                        PlaceMedEx.Controls.Add(GetMedExGroupCDISC(IIf(dtData.Rows(0)("vMedExGroupCDISCValue") Is System.DBNull.Value, " ", dtData.Rows(0)("vMedExGroupCDISCValue")), dtData.Rows(0)("vMedExGroupCode"), dtData.Rows(0)("vMedExSubGroupCode"), dtData.Rows(0)("vMedExGroupCode") + dtData.Rows(0)("vMedExSubGroupCode") + dtData.Rows(0)("vMedExGroupCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + Identifier.ToString()))
                                                    End If
                                                End If
                                            End If
                                            PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                            If Not Me.Session(S_ScopeNo) = Scope_ClinicalTrial Then
                                                PlaceMedEx.Controls.Add(New LiteralControl("<Td align=""right""  style=""color:#FFFFFF; font-family:'Times New Roman'!important; font-size:12px; font-weight:normal !important; width: 20%"">")) ''style=""vertical-align:right;""
                                                PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;Period: "))
                                                PlaceMedEx.Controls.Add(New LiteralControl(Period.ToString()))
                                                PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                            End If
                                            PlaceMedEx.Controls.Add(New LiteralControl("</Tr>")) ''activty row done
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" height=""1px"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFFFFF; font-family:'Times New Roman'!important; font-size:12px; font-weight:bold; page-break-inside:avoid;"">"))
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle;font-family:'Times New Roman'!important; font-size:12px; font-weight:bold;"" >")) 'white-space: nowrap; 
                                            PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                            PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                                            PlaceMedEx.Controls.Add(New LiteralControl("</Table>"))
                                        End If
                                    End If
                                    PreviousRepeatition = drRepeatition("RepetitionNo")
                                    PreviousNodeID = Nodeid
                                    Index = 0
                                    PlaceMedEx.Controls.Add(New LiteralControl("<Table width=""100%"" cellspacing='0' style=""border: solid 1px gray; font-family:'Times New Roman'!important; font-size:12px; font-weight:bold; border-collapse: collapse"">")) 'Added on 30-01-2010 to fix the size of display
                                    For Each drGroup In dt_MedexGroup.Rows
                                        Index += 1
                                        dt = New DataTable
                                        dt_MedExMst = New DataTable
                                        dt = dtMain.Copy()
                                        dv = New DataView
                                        dv = dt.DefaultView
                                        dv.RowFilter = "iNodeID = " + Nodeid.ToString() + " And vMedExGroupCode='" & drGroup("vMedExGroupCode").ToString.Trim() & "'" + " And vSubjectId = '" + SubjectId + "' And RepetitionNo = " + Convert.ToString(drRepeatition("RepetitionNo"))
                                        dv.Sort = "iSeqNo,nmedexworkspacedtlno asc"
                                        dt_MedExMst = dv.ToTable()
                                        MedIndex = 0
                                        For Each dr In dt_MedExMst.Rows
                                            MedIndex += 1
                                            If PrevSubGroupCodes = "" Or PrevSubGroupCodes <> dr("vMedExSubGroupCode") Then
                                                If Convert.ToString(dr("vMedExSubGroupCode")).Trim() <> "0000" Then 'Added for default SubGroup
                                                    PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #ffcc66; page-break-inside:avoid; font-family:'Times New Roman'!important; font-size:12px; "">")) 'ffcc66
                                                    PlaceMedEx.Controls.Add(New LiteralControl("<Td colspan=""2"" style=""vertical-align:middle; font-family:'Times New Roman'!important; font-size:12px; border: solid 1px gray !important; font-weight:normal !important;"">"))
                                                    PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
                                                    PlaceMedEx.Controls.Add(Getlable(dr("vMedExSubGroupDesc").ToString.Trim(), dr("vMedExSubGroupCode") + CntSubGroup.ToString.Trim() + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString()))
                                                    CntSubGroup += 1
                                                    PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                                    PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                                                End If
                                            End If
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Tr ALIGN=LEFT  style=""page-break-inside:avoid; font-family:'Times New Roman'!important; font-size:12px; font-weight:normal !important;"">"))
                                            PrevSubGroupCodes = dr("vMedExSubGroupCode")
                                            If Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "LABEL" Then
                                                Identifier += 1
                                                PlaceMedEx.Controls.Add(New LiteralControl("<Td width=""60%"" style=""vertical-align:middle; font-family:'Times New Roman'!important; font-size:12px; border: solid 1px gray !important;"" ALIGN=LEFT>")) 'border:1px solid gray;
                                                PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
                                                PlaceMedEx.Controls.Add(GetlableWithHistory(dr("vMedExDesc") & ": ", dr("vMedExGroupCode"), dr("vMedExSubGroupCode"), dr("vMedExGroupCode") + dr("vMedExSubGroupCode") + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + Identifier.ToString()))
                                                If RBLProjecttype.SelectedIndex = 1 Then
                                                    PlaceMedEx.Controls.Add(GetCDISC(IIf(dr("vCDISCValues") Is System.DBNull.Value, " ", dr("vCDISCValues")), dr("vMedExGroupCode"), dr("vMedExSubGroupCode"), dr("vMedExGroupCode") + dr("vMedExSubGroupCode") + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + Identifier.ToString()))
                                                End If

                                                If chkDataType.Checked = True Then
                                                    Dim str() As String
                                                    If Not dr("vValidationType") Is System.DBNull.Value AndAlso Convert.ToString(dr("vValidationType")).Trim() <> "" Then
                                                        If Convert.ToString(dr("vMedExType")).ToUpper() = "TEXTBOX" Or Convert.ToString(dr("vMedExType")).ToUpper() = "TEXTAREA" Then
                                                            PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;&nbsp;&nbsp;"))
                                                            str = Convert.ToString(dr("vValidationType")).Split(",")
                                                            If ((str.Length = 2 And str(1) <> "")) Then
                                                                If (Convert.ToString(str(0)).Contains("IN")) Then
                                                                    PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("IN", "I") + " (" + str(1) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                                ElseIf (Convert.ToString(str(0)).Contains("AL")) Then
                                                                    PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("AL", "A") + " (" + str(1) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                                Else
                                                                    PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("AL", "A") + " (" + str(1) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                                End If

                                                            ElseIf ((str(0) = "NU" And str.Length = 3)) Then
                                                                PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("NU", "N") + " (" + str(1) + "," + str(2) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                            Else
                                                                'PlaceMedEx.Controls.Add(GetlableForDatatype("[" + Convert.ToString(str(0)).Replace("IN", "I") + "]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                            End If

                                                        End If
                                                    End If
                                                End If

                                                PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                                PlaceMedEx.Controls.Add(New LiteralControl("<Td width=""40%"" style=""vertical-align:middle; border: solid 1px gray !important; font-family:'Times New Roman'!important; font-size:12px; "" ALIGN=LEFT>")) 'border:1px solid gray;'white-space: nowrap; 
                                            Else
                                                PlaceMedEx.Controls.Add(New LiteralControl("<Td colspan=""2"" style="" vertical-align:middle; font-family:'Times New Roman'!important; font-size:12px; border: solid 1px gray !important;"" ALIGN=LEFT>"))
                                            End If
                                            If Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "LABEL" And _
                                                        Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "FILE" And _
                                                        Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "RADIO" And _
                                                        Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "CHECKBOX" Then
                                                PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;&nbsp;"))
                                            End If
                                            MainIdentifier += 1
                                            objelement = GetObject(dr("vMedExType"), dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString(), dr("vMedExValues"), IIf(dr("vDefaultValue") Is System.DBNull.Value, "", dr("vDefaultValue")), _
                                                                        IIf(dr("vRefTable") Is System.DBNull.Value, "", dr("vRefTable")), _
                                                                        IIf(dr("vRefColumn") Is System.DBNull.Value, "", dr("vRefColumn")))
                                            PlaceMedEx.Controls.Add(objelement)
                                            If Not dr("vUOM") Is System.DBNull.Value AndAlso Convert.ToString(dr("vUOM")).Trim() <> "" Then
                                                PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;&nbsp;&nbsp;"))
                                                PlaceMedEx.Controls.Add(Getlable(dr("vUOM"), "UOM" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                            End If
                                            PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                        Next dr
                                    Next drGroup
                                    PlaceMedEx.Controls.Add(New LiteralControl("</Table>"))
                                    PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                    PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                                Next drRepeatition
                                RowCount = RowCount + 1
                            End If
                        End If
                    End If
                Next

                PlaceMedEx.Controls.Add(New LiteralControl("</Table>"))
                If Me.RBLselect.SelectedValue = "0" Then
                    HFHeaderLabel.Value = RenderControl(PlaceMedEx)
                End If
                Return True
            End If

            '===========================================
            If Not Me.ViewState(vs_strReporttype) Is Nothing Then
                If Me.hdnSubSelection.Value.Trim() <> "" Then

                    If Not Me.Session(VS_dtMedEx_Fill) Is Nothing AndAlso CType(Me.Session(VS_dtMedEx_Fill), DataTable).Rows.Count > 0 Then
                        dtsubjectcrf = CType(Me.Session(VS_dtMedEx_Fill), DataTable).Copy.DefaultView.ToTable(True, "vSubjectId,vSubjectName".Split(","))
                        dt_Subject = CType(Me.Session(VS_dtMedEx_Fill), DataTable).Copy.DefaultView.ToTable(True, "vSubjectId,vSubjectName".Split(",")).Clone()

                        Dim subjectlist = Me.hdnSubSelection.Value.ToString.Split(",")

                        For i As Integer = 0 To subjectlist.Length - 1
                            dtsubjectcrf = CType(Me.Session(VS_dtMedEx_Fill), DataTable).Copy.DefaultView.ToTable(True, "vSubjectId,vSubjectName".Split(","))
                            dtsubjectcrf.DefaultView.RowFilter = "vSubjectId = " + subjectlist(i)
                            dt_Subject.Merge(dtsubjectcrf.DefaultView.ToTable)
                            dt_Subject.AcceptChanges()
                        Next
                    Else
                        If Not Me.Session(vs_dsMsr) Is Nothing AndAlso CType(Me.Session(vs_dsMsr), DataTable).Rows.Count > 0 Then
                            CType(Me.Session(vs_dsMsr), DataTable).DefaultView.Sort = "vMysubjectNo asc"
                            dtsubjectcrf = CType(Me.Session(vs_dsMsr), DataTable).DefaultView.ToTable()
                            dt_Subject = dtsubjectcrf.Copy.DefaultView.ToTable(True, "vSubjectId,vInitials".Split(","))
                            dt_Subject.Columns(1).ColumnName = "vSubjectName"
                            dt_Subject.AcceptChanges()
                        End If

                    End If

                    For Each dr_Subject In dt_Subject.Rows
                        If Me.ViewState(vs_strReporttype).ToString.IndexOf("CRF") = 0 Then
                            If Not CRFPreview(dr_Subject, CntSubGroup, Nodeid, Index, SubjectIndex, MedIndex, Identifier, ParentNodeId, PreviousParentNodeId, Period, PreviousPeriod) Then
                                Exit Function
                            End If
                            If Me.ViewState(vs_strReporttype).ToString.IndexOf("MSR") > 0 Then
                                If Not MSRPreview(dr_Subject) Then
                                    Exit Function
                                End If
                            End If
                        Else
                            If Not MSRPreview(dr_Subject) Then
                                Exit Function
                            End If
                            If Me.ViewState(vs_strReporttype).ToString.IndexOf("CRF") > 0 Then
                                If Not CRFPreview(dr_Subject, CntSubGroup, Nodeid, Index, SubjectIndex, MedIndex, Identifier, ParentNodeId, PreviousParentNodeId, Period, PreviousPeriod) Then
                                    Exit Function
                                End If
                            End If
                        End If
                    Next
                Else
                    dt_Subject = CType(Me.Session(VS_dtMedEx_Fill), DataTable).Copy.DefaultView.ToTable(True, "vSubjectId,vSubjectName".Split(","))
                    For Each dr_Subject In dt_Subject.Rows
                        If Not CRFPreview(dr_Subject, CntSubGroup, Nodeid, Index, SubjectIndex, MedIndex, Identifier, ParentNodeId, PreviousParentNodeId, Period, PreviousPeriod) Then
                            Exit Function
                        End If
                    Next
                End If
            End If

            PlaceMedEx.Controls.Add(New LiteralControl("</Table>"))
            Return True
        Catch ex As Exception
            ShowErrorMessage(ex.Message.ToString, "", ex)
        Finally
            dt.Dispose()
            dv.Dispose()
            dt_MedExMst.Dispose()
            dt_MedexGroup.Dispose()
            dv_MedexGrp.Dispose()
            dtNodeID.Dispose()
            dt_Subject.Dispose()
            dtPeriod.Dispose()
            dtParentActivity.Dispose()
            dtMain.Dispose()
            dvMain.Dispose()
            dvSort.Dispose()
        End Try

    End Function

#End Region

#Region "DisplayHeader"

    Private Function DisplayHeader() As Boolean
        Dim Wstr As String = ""
        Dim ds_Heading As New DataSet
        Dim estr As String = ""

        Try

            Wstr = "vWorkspaceId='" & Me.HProjectId.Value.Trim() & "'"
            If Not Me.objHelp.View_MyProjects(Wstr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition _
                                              , ds_Heading, estr) Then
                Throw New Exception("Error while getting Header information. " + estr)
            End If

            If ds_Heading.Tables(0).Rows.Count > 0 Then
                Me.spnBaBe.InnerHtml = "Sponsor Name: " + ds_Heading.Tables(0).Rows(0).Item("vClientName").ToString.Trim()
                Me.lblProjectNo.Text = ds_Heading.Tables(0).Rows(0).Item("vProjectNo").ToString.Trim()
                Me.lblSubjectNo.Text = "_"
                Me.lblSubjectName.Text = "_"
                Me.tdSiteName.Style.Add("display", "none")
                Me.tdSiteId.Style.Add("display", "none")
                Me.trProtocol.Style.Add("display", "none")
                Me.trsubjectno.Style.Add("display", "")
                If Me.Session(S_ScopeNo) = Scope_ClinicalTrial Then
                    Dim strLen As Int32 = ds_Heading.Tables(0).Rows(0).Item("vProjectNo").ToString.Trim().LastIndexOf("-")
                    Me.lblProjectNo.Text = ds_Heading.Tables(0).Rows(0).Item("vProjectNo").ToString.Trim()

                    If strLen > 5 Then
                        Me.tdSiteName.Style.Add("display", "")
                        Me.tdSiteId.Style.Add("display", "")
                        Me.lblProjectNo.Text = ds_Heading.Tables(0).Rows(0).Item("vProjectNo").ToString.Trim().Substring(0, strLen)
                        strLen = strLen + 1
                        Me.lblSiteNo.Text = ds_Heading.Tables(0).Rows(0).Item("vProjectNo").ToString.Trim().Substring(strLen)
                    End If
                    Me.lblSubjectNo.Text = "_"
                    Me.lblSubjectName.Text = "_"

                End If

                If Me.chkprotocolno.Checked = False Then
                    If ds_Heading.Tables(0).Rows(0).Item("ProtocolNo").ToString.Length > 0 Then
                        Me.trProtocol.Style.Add("display", "")
                        Me.LblProtocol.Text = ds_Heading.Tables(0).Rows(0).Item("ProtocolNo").ToString.Trim()
                    Else
                        Me.trProtocol.Style.Add("display", "none")
                    End If
                Else
                    Me.trProtocol.Style.Add("display", "none")
                End If

                If ddlActivityType.SelectedIndex = 1 Then
                    If Me.ddlSubject.SelectedIndex > 0 Then
                        Me.lblSubjectNo.Text = "0000"
                        Me.lblSubjectName.Text = "-"
                        Me.SpnSubjectInit.Style.Add("display", "none")
                        Me.SpnSubject.Style.Add("display", "none")
                        Me.lblSubjectNo.Visible = False
                    End If
                    Me.trsubjectno.Style.Add("display", "none")
                Else
                    If Me.ddlSubject.SelectedIndex > 0 Then
                        Me.lblSubjectNo.Text = ddlSubject.SelectedItem.Text.Substring(0, ddlSubject.SelectedItem.Text.IndexOf(" "))
                        Me.lblSubjectName.Text = ddlSubject.SelectedItem.Text.Substring(ddlSubject.SelectedItem.Text.IndexOf(" "), CInt(ddlSubject.SelectedItem.Text.Length - ddlSubject.SelectedItem.Text.IndexOf(" "))) + "  "
                    End If
                End If

                If Me.chkinitial.Checked = True Then
                    Me.SpnSubjectInit.Style.Add("display", "none")
                    Me.lblSubjectName.Style.Add("display", "none")
                Else
                    If ddlActivityType.SelectedIndex = 2 Then
                        Me.SpnSubjectInit.Style.Add("display", "")
                        Me.lblSubjectName.Style.Add("display", "")
                    End If
                End If

                Me.HFHeaderPDF.Value = RenderControl(tbldivheader)
            End If
            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "", ex)
            Return False
        Finally
            ds_Heading.Dispose()
        End Try
    End Function

#End Region

#Region "Function for Preview"

    Private Function CRFPreview(ByVal dr_Subject As DataRow, ByRef CntSubGroup As Integer, ByRef Nodeid As Integer, ByRef Index As Integer, ByRef SubjectIndex As Integer, ByRef MedIndex As Integer, ByRef Identifier As Integer, ByRef ParentNodeId As Integer, ByRef PreviousParentNodeId As Integer, ByRef Period As Integer, ByRef PreviousPeriod As Integer) As Boolean
        Dim objelement As Object
        Dim dt, dt_MedExMst, dt_MedexGroup, dtNodeID, dtMain, dtData, dtParentActivity, dtPeriod, dtsubject As New DataTable
        Dim dv, dvMain, dvSort, dv_MedexGrp, dvsubject As New DataView
        Dim PrevSubGroupCodes = "", SubjectId = "", Prev_SubjectId = "", SubjectName = "", NodeIds As String = ""
        Dim PreviousNodeID As Integer = 1
        Dim NodeDisplayName As String = String.Empty

        Try
            SubjectIndex += 1
            SubjectId = Convert.ToString(dr_Subject("vSubjectId")).Trim()
            SubjectName = Convert.ToString(dr_Subject("vSubjectName")).Trim()

            dtsubject = CType(Me.Session(VS_dtMedEx_Fill), DataTable).Copy
            dtsubject.DefaultView.RowFilter = "vSubjectId='" + dr_Subject("vSubjectId").ToString.Trim() + "'"

            dvsubject = dtsubject.DefaultView.ToTable().Copy.DefaultView.ToTable(True, "iParentNodeId,ParentActivityName,ParentNodeNo".Split(",")).DefaultView
            dvsubject.Sort = " iParentNodeId asc"

            If dvsubject.ToTable.Rows.Count = 1 Then
                If dvsubject.ToTable.Rows(0)("iParentNodeId").ToString() <> "1" Then

                    If Me.hdnSubSelection.Value.ToString.Trim <> "" AndAlso Me.RBLselect.SelectedValue = "1" Then
                        PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFFC00; page-break-inside:avoid; "" >"))
                        PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle; text-align: center; font-family:'Times New Roman' !Important; font-size:12px; font-weight:bold;"">"))
                        PlaceMedEx.Controls.Add(New LiteralControl("Subject Id :" + SubjectId))
                        PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                        PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                    End If
                End If
            ElseIf dvsubject.ToTable.Rows.Count > 1 Then
                If Me.hdnSubSelection.Value.Trim <> "" AndAlso Me.RBLselect.SelectedValue = "1" Then
                    PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFFC00; page-break-inside:avoid; "" >"))
                    PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle; text-align: center; font-family:'Times New Roman' !Important; font-size:12px; font-weight:bold;"">"))
                    PlaceMedEx.Controls.Add(New LiteralControl("Subject Id :" + SubjectId))
                    PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                    PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                End If
            End If
            dtPeriod = dtsubject.DefaultView.ToTable().Copy.DefaultView.ToTable(True, "iPeriod".Split(","))
            Period = 0
            PreviousPeriod = 0
            Dim NoRowCount As Integer = 0
            For Each drPeriod As DataRow In dtPeriod.Rows
                Period = drPeriod("iPeriod")

                dvMain = dtsubject.DefaultView.ToTable().Copy().DefaultView
                dvMain.RowFilter = "iPeriod = " + Period.ToString()
                dvSort = dvMain.ToTable.Copy.DefaultView.ToTable(True, "iParentNodeId,ParentActivityName,ParentNodeNo".Split(",")).DefaultView
                dvSort.RowFilter = "isnull(iParentNodeId,0) <> 0"
                dvSort.Sort = "ParentNodeNo asc"
                dtParentActivity = dvSort.ToTable()
                ParentNodeId = 0
                PreviousParentNodeId = 0
                For Each drParentActivity As DataRow In dtParentActivity.Rows
                    ParentNodeId = drParentActivity("iParentNodeID")
                    If ParentNodeId = 1 Then
                        Continue For
                    End If
                    If ParentNodeId <> PreviousParentNodeId AndAlso ParentNodeId <> 0 Then
                        If ParentNodeId <> 1 Then
                            If chkSubactivityWise.Checked = True Then
                                If Period <> PreviousPeriod AndAlso NoRowCount = 0 Then
                                    PlaceMedEx.Controls.Add(New LiteralControl("<Tr data-toc-enable=""true"" data-toc-level=""1"" data-bookmark-enabled=""true"" data-bookmark-level=""1"" data-bookmark-text=""" + Convert.ToString(drParentActivity("ParentActivityName")).Trim() + """ width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-inside:avoid; "">")) '008ecd''redish orange for parent activity
                                ElseIf Period = PreviousPeriod AndAlso NoRowCount <> 0 Then
                                    PlaceMedEx.Controls.Add(New LiteralControl("<Tr data-toc-enable=""true"" data-toc-level=""1"" data-bookmark-enabled=""true"" data-bookmark-level=""1"" data-bookmark-text=""" + Convert.ToString(drParentActivity("ParentActivityName")).Trim() + """ width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-before:always; "">")) '008ecd''redish orange for parent activity
                                ElseIf Period <> PreviousPeriod AndAlso NoRowCount <> 0 Then
                                    PlaceMedEx.Controls.Add(New LiteralControl("<Tr data-toc-enable=""true"" data-toc-level=""1"" data-bookmark-enabled=""true"" data-bookmark-level=""1"" data-bookmark-text=""" + Convert.ToString(drParentActivity("ParentActivityName")).Trim() + """ width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-before:always; "">")) '008ecd''redish orange for parent activity
                                End If
                            Else
                                PlaceMedEx.Controls.Add(New LiteralControl("<Tr data-toc-enable=""true"" data-toc-level=""1"" data-bookmark-enabled=""true"" data-bookmark-level=""1"" data-bookmark-text=""" + Convert.ToString(drParentActivity("ParentActivityName")).Trim() + """ width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-inside:avoid; "">")) '008ecd''redish orange for parent activity
                            End If
                            If PreviousParentNodeId = 0 Then
                                PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle; text-align: center; font-family:'Times New Roman' !Important; font-size:12px;  font-weight:bold;"">")) 'white-space: nowrap; 
                            Else
                                PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle; text-align: center; font-family:'Times New Roman' !Important; font-size:12px;  font-weight:bold;"">")) 'white-space: nowrap; 
                            End If
                            PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
                            PlaceMedEx.Controls.Add(New LiteralControl(Convert.ToString(drParentActivity("ParentActivityName")).Trim()))
                            PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                            PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                        End If
                    End If
                    PreviousPeriod = drPeriod("iPeriod")
                    PreviousParentNodeId = drParentActivity("iParentNodeID")
                    dvMain.RowFilter = "(iPeriod = " + Period.ToString() + " And iNodeId = " + ParentNodeId.ToString() + ") Or (iPeriod = " + Period.ToString() + " And iParentNodeId = " + ParentNodeId.ToString() + ")"
                    dtMain = dvMain.ToTable().Copy()
                    dvSort = Nothing
                    dvSort = dtMain.Copy.DefaultView.ToTable(True, "iNodeID,vNodeDisplayName,iNodeNo,ParentNodeNo".Split(",")).DefaultView
                    dvSort.Sort = "ParentNodeNo,iNodeNo asc"
                    dtNodeID = dvSort.ToTable()
                    Nodeid = 0
                    PreviousNodeID = 0
                    For Each drNode In dtNodeID.Rows
                        If chkSubactivityWise.Checked = True Then
                            If PreviousNodeID <> 0 Then
                                PlaceMedEx.Controls.Add(New LiteralControl("<Tr data-toc-enable=""true"" data-toc-level=""1"" width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-before:always; "">")) '008ecd''redish orange for parent activity
                                PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle; text-align: center; font-family:'Times New Roman' !Important; font-size:12px;  font-weight:bold;"">")) 'white-space: nowrap; 
                                PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
                                PlaceMedEx.Controls.Add(New LiteralControl(Convert.ToString(drParentActivity("ParentActivityName")).Trim()))
                                PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                            End If
                            Dim strPlaceValu As String = RenderControl(PlaceMedEx)
                        End If

                        NodeIds += Convert.ToString(drNode("iNodeID")).Trim() + ","
                        Nodeid = drNode("iNodeID")
                        NodeDisplayName = Convert.ToString(drNode("vNodeDisplayName")).Trim()
                        dv_MedexGrp = dtMain.Copy.DefaultView
                        dv_MedexGrp.RowFilter = "iNodeID = " + Nodeid.ToString() ' + " And vSubjectId = '" + SubjectId + "'"
                        Dim dt_Repeatition As DataTable
                        dt_Repeatition = dv_MedexGrp.ToTable(True, "RepetitionNo".Split(","))
                        Dim PreviousRepeatition As Integer = 0
                        For Each drRepeatition As DataRow In dt_Repeatition.Rows
                            dv_MedexGrp.RowFilter = "RepetitionNo = " + Convert.ToString(drRepeatition("RepetitionNo")).ToString()
                            dt_MedexGroup = dv_MedexGrp.ToTable(True, "vMedExGroupCode".Split(","))
                            PlaceMedEx.Controls.Add(New LiteralControl("<Tr ALIGN=LEFT>"))
                            PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:top""page-break-inside:avoid;"">")) 'white-space: nowrap; 
                            If PreviousRepeatition <> drRepeatition("RepetitionNo") Then
                                If (PreviousNodeID <> Nodeid) Or (PreviousNodeID = Nodeid AndAlso PreviousRepeatition <> drRepeatition("RepetitionNo")) Then
                                    PlaceMedEx.Controls.Add(New LiteralControl("<Table width=""100%"" cellspacing='0' style=""font-family:'Times New Roman' !Important; font-size:12px; border-collapse: collapse !Important;"">")) ''blue line of activity
                                    PlaceMedEx.Controls.Add(New LiteralControl("<Tr data-toc-enable=""true"" data-toc-level=""2"" data-bookmark-enabled=""true"" data-bookmark-text=""" + IIf(drRepeatition("RepetitionNo") > 1, NodeDisplayName + ", Repetition: " + Convert.ToString(drRepeatition("RepetitionNo")), NodeDisplayName) + """ data-bookmark-level=""2"" width=""100%"" color:#FFFFFF; ALIGN=LEFT style=""BACKGROUND-COLOR: #008ecd; page-break-inside:avoid; font-family:'Times New Roman' !Important; font-size:12px; !important;"" >")) '008ecd
                                    If ParentNodeId = 1 Then
                                        PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle;color:#FFFFFF;  width: 80%;font-family:'Times New Roman' !Important; font-size:12px; "">")) 'white-space: nowrap; 
                                    Else
                                        PlaceMedEx.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle;color:#FFFFFF;  width: 80%;font-family:'Times New Roman' !Important; font-size:12px; "">")) 'white-space: nowrap; 
                                    End If
                                    dvMain.RowFilter = "iNodeId = " + Nodeid.ToString()
                                    dtData = dvMain.ToTable()
                                    PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
                                    If drRepeatition("RepetitionNo") > 1 Then
                                        PlaceMedEx.Controls.Add(New LiteralControl(NodeDisplayName + ", Repetition: " + Convert.ToString(drRepeatition("RepetitionNo"))))
                                    Else
                                        PlaceMedEx.Controls.Add(New LiteralControl(NodeDisplayName))
                                    End If
                                    If RBLProjecttype.SelectedIndex = 1 Then
                                        If dtData.Rows.Count > 0 Then
                                            If dtData.Rows(0)("vMedExGroupCDISCValue").ToString() <> "" Then
                                                PlaceMedEx.Controls.Add(GetMedExGroupCDISC(IIf(dtData.Rows(0)("vMedExGroupCDISCValue") Is System.DBNull.Value, " ", dtData.Rows(0)("vMedExGroupCDISCValue")), dtData.Rows(0)("vMedExGroupCode"), dtData.Rows(0)("vMedExSubGroupCode"), dtData.Rows(0)("vMedExGroupCode") + dtData.Rows(0)("vMedExSubGroupCode") + dtData.Rows(0)("vMedExGroupCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + Identifier.ToString()))
                                            End If
                                        End If
                                    End If
                                    PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                    If Not Me.Session(S_ScopeNo) = Scope_ClinicalTrial Then
                                        PlaceMedEx.Controls.Add(New LiteralControl("<Td align=""right""  style=""color:#FFFFFF ;width: 20%;font-family:'Times New Roman' !Important; font-size:12px; "">")) ''style=""vertical-align:right;""
                                        PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;Period: "))
                                        PlaceMedEx.Controls.Add(New LiteralControl(Period.ToString()))
                                        PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                    End If
                                    PlaceMedEx.Controls.Add(New LiteralControl("</Tr>")) ''activty row done
                                    PlaceMedEx.Controls.Add(New LiteralControl("</Table>"))
                                End If
                            End If
                            PreviousRepeatition = drRepeatition("RepetitionNo")
                            PreviousNodeID = drNode("iNodeID")
                            Index = 0
                            PlaceMedEx.Controls.Add(New LiteralControl("<Table width=""100%"" cellspacing='0' style=""font-family:'Times New Roman' !Important; font-size:12px; border-collapse: collapse !Important;"">")) 'Added on 30-01-2010 to fix the size of display
                            For Each drGroup In dt_MedexGroup.Rows
                                Index += 1
                                dt = New DataTable
                                dt_MedExMst = New DataTable
                                dt = dtMain.Copy()
                                dv = New DataView
                                dv = dt.DefaultView
                                dv.RowFilter = "iNodeID = " + Nodeid.ToString() + " And vMedExGroupCode='" & drGroup("vMedExGroupCode").ToString.Trim() & "'" + " And vSubjectId = '" + SubjectId + "' And RepetitionNo = " + Convert.ToString(drRepeatition("RepetitionNo"))
                                dv.Sort = "iSeqNo,nmedexworkspacedtlno asc"
                                dt_MedExMst = dv.ToTable()
                                MedIndex = 0
                                For Each dr In dt_MedExMst.Rows
                                    MedIndex += 1
                                    If PrevSubGroupCodes = "" Or PrevSubGroupCodes <> dr("vMedExSubGroupCode") Then
                                        If Convert.ToString(dr("vMedExSubGroupCode")).Trim() <> "0000" Then 'Added for default SubGroup
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #ffcc66; page-break-inside:avoid;font-family:'Times New Roman' !Important; font-size:12px;"">")) 'ffcc66
                                            PlaceMedEx.Controls.Add(New LiteralControl("<Td colspan=""2"" style=""vertical-align:middle;font-family:'Times New Roman' !Important; border: solid 1px gray !important;  font-size:12px; "">"))
                                            PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
                                            PlaceMedEx.Controls.Add(Getlable(dr("vMedExSubGroupDesc").ToString.Trim(), dr("vMedExSubGroupCode") + CntSubGroup.ToString.Trim() + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString()))
                                            CntSubGroup += 1
                                            PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                            PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                                        End If
                                    End If
                                    PlaceMedEx.Controls.Add(New LiteralControl("<Tr ALIGN=LEFT  style=""page-break-inside:avoid;font-family:'Times New Roman' !Important; font-size:12px; "">"))
                                    PrevSubGroupCodes = dr("vMedExSubGroupCode")
                                    If Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "LABEL" Then
                                        Identifier += 1
                                        PlaceMedEx.Controls.Add(New LiteralControl("<Td width=""60%"" style=""font-family:'Times New Roman' !Important; font-size:12px;  vertical-align:middle; border: solid 1px gray !important;"" ALIGN=LEFT>")) 'border:1px solid gray;
                                        PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
                                        PlaceMedEx.Controls.Add(GetlableWithHistory(dr("vMedExDesc") & ": ", dr("vMedExGroupCode"), dr("vMedExSubGroupCode"), dr("vMedExGroupCode") + dr("vMedExSubGroupCode") + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + Identifier.ToString()))
                                        If RBLProjecttype.SelectedIndex = 1 Then
                                            PlaceMedEx.Controls.Add(GetCDISC(IIf(dr("vCDISCValues") Is System.DBNull.Value, " ", dr("vCDISCValues")), dr("vMedExGroupCode"), dr("vMedExSubGroupCode"), dr("vMedExGroupCode") + dr("vMedExSubGroupCode") + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + Identifier.ToString()))
                                        End If
                                        If chkDataType.Checked = True Then
                                            Dim str() As String
                                            If Not dr("vValidationType") Is System.DBNull.Value AndAlso Convert.ToString(dr("vValidationType")).Trim() <> "" Then
                                                If Convert.ToString(dr("vMedExType")).ToUpper() = "TEXTBOX" Or Convert.ToString(dr("vMedExType")).ToUpper() = "TEXTAREA" Then
                                                    PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;&nbsp;&nbsp;"))
                                                    str = Convert.ToString(dr("vValidationType")).Split(",")
                                                    If ((str.Length = 2 And str(1) <> "")) Then
                                                        If (Convert.ToString(str(0)).Contains("IN")) Then
                                                            PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("IN", "I") + " (" + str(1) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                        ElseIf (Convert.ToString(str(0)).Contains("AL")) Then
                                                            PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("AL", "A") + " (" + str(1) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                        Else
                                                            PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("AL", "A") + " (" + str(1) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                        End If

                                                    ElseIf ((str(0) = "NU" And str.Length = 3)) Then
                                                        PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("NU", "N") + " (" + str(1) + "," + str(2) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                    Else
                                                        'PlaceMedEx.Controls.Add(GetlableForDatatype("[" + Convert.ToString(str(0)).Replace("IN", "I") + "]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                    End If

                                                End If
                                            End If
                                        End If

                                        PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                        PlaceMedEx.Controls.Add(New LiteralControl("<Td width=""40%"" style=""vertical-align:middle; font-family:'Times New Roman' !Important; font-size:12px; border: solid 1px gray !important;"" ALIGN=LEFT>")) 'border:1px solid gray;'white-space: nowrap; 
                                    Else
                                        PlaceMedEx.Controls.Add(New LiteralControl("<Td colspan=""2"" style="" font-family:'Times New Roman' !Important; font-size:12px; vertical-align:middle; border:1px solid gray !Important;"" ALIGN=LEFT>"))
                                    End If
                                    If Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "LABEL" And _
                                                Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "FILE" And _
                                                Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "RADIO" And _
                                                Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "CHECKBOX" And _
                                                Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "COMBOBOX" Then
                                        PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;&nbsp;"))
                                    End If
                                    MainIdentifier += 1

                                    objelement = GetObject(dr("vMedExType"), dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString(), dr("vMedExValues"), IIf(dr("vDefaultValue") Is System.DBNull.Value, "", dr("vDefaultValue")), _
                                                                IIf(dr("vRefTable") Is System.DBNull.Value, "", dr("vRefTable")), _
                                                                IIf(dr("vRefColumn") Is System.DBNull.Value, "", dr("vRefColumn")))
                                    PlaceMedEx.Controls.Add(objelement)

                                    If Not dr("vUOM") Is System.DBNull.Value AndAlso Convert.ToString(dr("vUOM")).Trim() <> "" Then
                                        PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;&nbsp;&nbsp;"))
                                        PlaceMedEx.Controls.Add(Getlable(dr("vUOM"), "UOM" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                    End If
                                    PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                    PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                                Next dr
                            Next drGroup
                            PlaceMedEx.Controls.Add(New LiteralControl("</Table>"))
                            PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                            PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))

                        Next drRepeatition
                    Next drNode
                    NoRowCount = NoRowCount + 1
                Next drParentActivity
            Next drPeriod
            Prev_SubjectId = Convert.ToString(dr_Subject("vSubjectId")).Trim()
            If Me.RBLselect.SelectedValue = "0" Then
                PlaceMedEx.Controls.Add(New LiteralControl("</Table>"))
                HFHeaderLabel.Value = RenderControl(PlaceMedEx)
            End If
            Return True
        Catch ex As Exception
            Return False
        End Try
    End Function

    Private Function MSRPreview(ByVal dr_subject As DataRow) As Boolean
        Dim dtSubject, dt_group, dt_subgroup, dt_medex, dt_group1 As New DataTable
        Dim dt_MedexScreeningHdrDtl As DataTable
        Dim SubjId = "", SubNo = "", Initials = "", Gender = "", ScreeningHdrNo = "", wstr = "", estr As String = ""
        Dim dvmsr, dvmsrgroup, dvmedex, dvmsrsubgroup As DataView
        Dim objelement As Object

        Try

            dtSubject = CType(Me.ViewState(vs_View_WorkspaceSubjectMst), DataTable)

            If dtSubject Is Nothing Then
                Return True
            End If

            If dtSubject.Rows.Count = 0 Then
                Return True
            End If

            dtSubject.DefaultView.RowFilter = "vSubjectId='" + dr_subject("vSubjectId").ToString + "'"

            For Each dr As DataRow In dtSubject.DefaultView.ToTable().Rows

                If Me.ViewState(IsProjectCT) Then
                    SubjId = dr("vPatientId").ToString()
                Else
                    SubjId = dr("vSubjectId").ToString()
                End If
                SubNo = dr("vMySubjectNo").ToString()
                Initials = dr("vInitials").ToString()
                If Not dr("nMedexScreeningHdrNo") Is System.DBNull.Value Then
                    ScreeningHdrNo = dr("nMedexScreeningHdrNo").ToString()
                End If
                If Not dr("cSex") Is System.DBNull.Value Then
                    Gender = dr("cSex").ToString()
                End If
                If ScreeningHdrNo = Nothing Then
                    Me.objCommon.ShowAlert("No Screening Assingment has been done for Subject " + SubjId, Me.Page)
                    Return True
                End If
                dt_MedexScreeningHdrDtl = CType(Me.Session(vs_dsMsr), DataTable)
                dvmsr = dt_MedexScreeningHdrDtl.Copy().DefaultView
                dvmsr.Sort = "ScreeningType,iSeqNo asc"
                If Gender.ToUpper.Trim() = "M" Then
                    dvmsr.RowFilter = "vWorkSpaceId = '" + Me.HProjectId.Value.ToString() + "' and vSubjectId = '" + SubjId + "' and nMedexScreeningHdrNo = " + ScreeningHdrNo + " and vMedexGroupcode not in ('00037','00009')"
                Else
                    dvmsr.RowFilter = "vWorkSpaceId = '" + Me.HProjectId.Value.ToString() + "' and vSubjectId = '" + SubjId + "' and nMedexScreeningHdrNo = " + ScreeningHdrNo + " and vMedexGroupcode  <> '00009'"
                End If

                If dvmsr.ToTable.Rows.Count > 0 Then

                    PlaceMedEx.Controls.Add(New LiteralControl("<tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFFC66; page-break-inside:avoid; font-family:'Times New Roman' !important;  font-size:12px; font-weight:bold;"">"))
                    PlaceMedEx.Controls.Add(New LiteralControl("<td style=""vertical-align:middle; text-align: center; font-family:'Times New Roman' !important;  font-size:12px; font-weight:bold;"" colspan=""2"" >Medical Screening Record Form : " + SubjId + " </td>"))
                    PlaceMedEx.Controls.Add(New LiteralControl("</tr>"))
                    PlaceMedEx.Controls.Add(New LiteralControl("<tr>"))
                    PlaceMedEx.Controls.Add(New LiteralControl("<td>"))
                    PlaceMedEx.Controls.Add(New LiteralControl("<Table width=""100%"" cellspacing='0' style=""font-family:'Times New Roman' !Important;  font-size:12px; border-collapse: collapse !Important;"">"))
                    dt_group = dvmsr.ToTable().Copy.DefaultView.ToTable(True, "vMedExGroupDesc,vMedExGroupCode".Split(","))
                    For Each dr_group As DataRow In dt_group.Rows

                        dvmsrgroup = dvmsr.ToTable().Copy().DefaultView
                        dvmsrgroup.RowFilter = "vMedExGroupCode = '" + dr_group("vMedExGroupCode") + "'"

                        If dvmsrgroup.ToTable.Rows.Count > 0 Then
                            dt_group1 = dvmsrgroup.ToTable
                            PlaceMedEx.Controls.Add(New LiteralControl("<tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-inside:avoid;font-family:'Times New Roman' !Important;  font-size:12px; font-weight:bold;"" data-bookmark-enabled=""true"" data-bookmark-level=""3"" data-bookmark-text=""Screening Review"">"))
                            PlaceMedEx.Controls.Add(New LiteralControl("<td style=""vertical-align:middle; text-align: center; font-family:'Times New Roman' !Important; font-size:12px; font-weight:bold;"" colspan=""2"" >" + dr_group("vMedExGroupDesc").ToString + "</td>"))
                            PlaceMedEx.Controls.Add(New LiteralControl("</tr>"))
                            dvmsrsubgroup = dt_group1.DefaultView
                            dt_subgroup = dvmsrsubgroup.ToTable(True, "vMedExSubGroupDesc,vMedExSubGroupCode".Split(","))
                            For Each drsubgroup As DataRow In dt_subgroup.Rows
                                PlaceMedEx.Controls.Add(New LiteralControl("<tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #008ecd; page-break-inside:avoid;font-family:'Times New Roman' !Important;  font-size:12px; font-weight:bold;"" data-bookmark-enabled=""true"" data-bookmark-level=""3"" data-bookmark-text=""Screening Review"">"))
                                PlaceMedEx.Controls.Add(New LiteralControl("<td style=""vertical-align:middle; color:#FFFFFF; font-family:'Times New Roman' !Important; font-size:12px; font-weight:normal !important;"" colspan=""2"" >" + drsubgroup("vMedExSubGroupDesc").ToString + "</td>"))
                                PlaceMedEx.Controls.Add(New LiteralControl("</tr>"))
                                dvmedex = dvmsr.ToTable().Copy().DefaultView
                                dvmedex.RowFilter = "vMedExGroupCode = '" + dr_group("vMedExGroupCode") + "' AND vMedExSubGroupCode='" + drsubgroup("vMedExSubGroupCode") + "'"
                                If dvmedex.ToTable.Rows.Count > 0 Then

                                    For Each drmedex As DataRow In dvmedex.ToTable.Rows
                                        PlaceMedEx.Controls.Add(New LiteralControl("<tr ALIGN=LEFT style=""page-break-inside:avoid;font-family:'Times New Roman' !Important; font-size:12px;"">"))
                                        PlaceMedEx.Controls.Add(New LiteralControl("<Td width=""60%"" style="" font-family:'Times New Roman' !Important; font-size:12px; font-weight:bold; vertical-align:middle; border: solid 1px gray !important;"" ALIGN=LEFT>")) 'border:1px solid gray;
                                        PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
                                        PlaceMedEx.Controls.Add(GetlableWithHistory(drmedex("vMedExDesc") & ": ", drmedex("vMedExGroupCode"), drmedex("vMedExSubGroupCode"), drmedex("vMedExGroupCode").ToString + drmedex("vMedExSubGroupCode").ToString + drmedex("vMedExCode").ToString + "R" + SubjId.ToString + "SubId" + drmedex("iSeqNo").ToString + drmedex("vMedExCode")))
                                        PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                        PlaceMedEx.Controls.Add(New LiteralControl("<Td width=""40%"" style=""vertical-align:middle; border: solid 1px gray !important; font-family:'Times New Roman' !Important;  font-size:12px; "" ALIGN=LEFT>")) 'border:1px solid gray;'white-space: nowrap; 
                                        PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;&nbsp;"))
                                        objelement = GetObject(drmedex("vMedExType"), drmedex("vMedExCode") + "R" + SubjId + "MSRPRINT", IIf(drmedex("vDefaultValue") Is System.DBNull.Value, "", drmedex("vDefaultValue")), IIf(drmedex("vMedExValues") Is System.DBNull.Value, "", drmedex("vMedExValues")), _
                                                                                    IIf(drmedex("vRefTable") Is System.DBNull.Value, "", drmedex("vRefTable")), _
                                                                                    IIf(drmedex("vRefColumn") Is System.DBNull.Value, "", drmedex("vRefColumn")))
                                        PlaceMedEx.Controls.Add(objelement)
                                        PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                                        PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                                    Next
                                End If
                            Next
                        End If
                    Next
                    PlaceMedEx.Controls.Add(New LiteralControl("</Table>"))
                    PlaceMedEx.Controls.Add(New LiteralControl("</Td>"))
                    PlaceMedEx.Controls.Add(New LiteralControl("</Tr>"))
                End If
            Next
            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "Error While MSRPreview.", ex)
            Return False
        End Try
    End Function

#End Region

#Region "Getlable"

    Private Function Getlable(ByVal vlabelName As String, ByVal Id As String, Optional ByVal vFieldType As String = "") As Label
        Dim lab As Label

        Try
            lab = New Label
            lab.ID = "Lab" & Id
            lab.Text = vlabelName.Trim()
            lab.ForeColor = System.Drawing.Color.FromName("Navy")
            'lab.Font.Size = 9
            'lab.Font.Bold = True
            'lab.Font.Name = "Georgia"
            lab.Style.Add("font-family", "'Times New Roman' !Important")
            lab.Style.Add("font-size", "12px !Important")
            lab.Style.Add("font-weight", "bold !Important")
            If vFieldType.ToUpper.Trim() = "IMPORT" Then
                lab.Visible = False
            End If
            lab.EnableViewState = False
            Getlable = lab
            lab.Dispose()
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "Error while calling Getlable..", ex)
        End Try
    End Function

    Private Function GetlableForDatatype(ByVal vlabelName As String, ByVal Id As String, Optional ByVal vFieldType As String = "") As Label
        Dim lab As Label

        Try
            lab = New Label
            lab.ID = "Lab" & Id
            lab.Text = vlabelName.Trim()
            lab.ForeColor = System.Drawing.Color.FromName("Black")
            lab.Font.Size = 9
            lab.Font.Bold = False
            lab.Font.Name = "Times New Roman"
            'lab.Style.Add("font-family", "'Times New Roman' !Important")
            'lab.Style.Add("font-size", "10px !Important")
            If vFieldType.ToUpper.Trim() = "IMPORT" Then
                lab.Visible = False
            End If
            lab.EnableViewState = False
            GetlableForDatatype = lab
            lab.Dispose()
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "Error while calling Getlable..", ex)
        End Try
    End Function


    Private Function GetlableForSubGroup(ByVal vlabelName As String, ByVal Id As String, Optional ByVal vFieldType As String = "") As Label
        Dim lab As Label
        lab = New Label
        lab.ID = "Lab" & Id
        lab.Text = vlabelName.Trim()
        lab.SkinID = "lblDisplay"
        lab.ForeColor = System.Drawing.Color.FromName("Navy")
        lab.Style.Add("font-family", "'Times New Roman' !Important")
        lab.Style.Add("font-size", "12px !Important")
        lab.Style.Add("font-weight", "bold !Important")
        If vFieldType.ToUpper.Trim() = "IMPORT" Then
            lab.Visible = False
        End If
        lab.Width = "800px"
        lab.Style.Add("word-wrap", "break-word")
        lab.Style.Add("white-space", "")
        lab.EnableViewState = False
        GetlableForSubGroup = lab
        lab.Dispose()
    End Function

    Private Function GetlableWithHistory(ByVal vlabelName As String, ByVal MedExGroupCode As String, ByVal MedExSubGroupCode As String, ByVal MedExCode As String) As Label
        Dim lnk As Label
        lnk = New Label
        lnk.ID = "Lnk" + MedExCode
        lnk.Text = vlabelName.Trim()
        lnk.SkinID = "LabelDisplay"
        lnk.Style.Add("word-wrap", "break-word")
        lnk.Style.Add("white-space", "")
        lnk.Style.Add("font-family", "'Times New Roman' !Important")
        lnk.Style.Add("font-size", "12px !Important")
        'lnk.Style.Add("font-weight", "bold !Important")
        lnk.EnableViewState = False
        GetlableWithHistory = lnk
        lnk.Dispose()
    End Function

    Private Function GetCDISC(ByVal vCDISCValues As String, ByVal MedExGroupCode As String, ByVal MedExSubGroupCode As String, ByVal MedExCode As String) As Label
        Dim lnk As Label
        lnk = New Label
        lnk.ID = "Lnkcdisc" + MedExCode

        lnk.Text = " [" + vCDISCValues.Trim() + "]"
        If lnk.Text <> " []" Then
            lnk.SkinID = "LabelDisplay"
            ''lnk.BackColor = Color.Yellow
            lnk.BorderColor = Color.Black
            ''lnk.BorderWidth = 2
            ''lnk.BorderStyle = BorderStyle.Solid
            lnk.ForeColor = Color.Black
        End If
        lnk.Style.Add("word-wrap", "break-word")
        lnk.Style.Add("white-space", "")
        lnk.Style.Add("font-family", "'Times New Roman' !Important")
        lnk.Style.Add("font-size", "12px !Important")
        ''lnk.Style.Add("font-weight", "bold !Important")
        lnk.EnableViewState = False
        GetCDISC = lnk
        lnk.Dispose()
    End Function

    Private Function GetMedExGroupCDISC(ByVal vCDISCValues As String, _
                                        ByVal MedExGroupCode As String, _
                                        ByVal MedExSubGroupCode As String, _
                                        ByVal MedExCode As String) As Label
        Dim lnk As Label
        lnk = New Label
        lnk.ID = "Lnkcdisc" + MedExGroupCode + MedExSubGroupCode + MedExCode

        lnk.Text = "  [DOMAIN:" + vCDISCValues.Trim() + "]"
        If lnk.Text <> " []" Then
            lnk.SkinID = "LabelDisplay"
            ''lnk.BackColor = Color.Yellow
            lnk.BorderColor = Color.Black
            ''lnk.BorderWidth = 2
            ''lnk.BorderStyle = BorderStyle.Solid
            lnk.ForeColor = Color.Black
        End If
        lnk.Style.Add("word-wrap", "break-word")
        lnk.Style.Add("white-space", "")
        lnk.Style.Add("font-family", "'Times New Roman' !Important")
        lnk.Style.Add("font-size", "12px !Important")
        ''lnk.Style.Add("font-weight", "bold !Important")
        lnk.EnableViewState = False
        GetMedExGroupCDISC = lnk
        lnk.Dispose()
    End Function

#End Region

#Region "GetButtons"

    Private Function GetButtons(ByVal BtnName As String, ByVal Id As String) As Boolean
        Dim Btn As Button
        Dim index As Integer
        Dim StrGroupCode_arry() As String
        Dim StrGroupDesc_arry() As String
        Try
            StrGroupCode_arry = Id.Split(",")
            StrGroupDesc_arry = BtnName.Split(",")
            For index = 0 To StrGroupCode_arry.Length - 1
                Btn = New Button
                Btn.ID = "Btn" & StrGroupCode_arry(index)
                Btn.Text = " " & StrGroupDesc_arry(index).Trim() & " "

                If StrGroupDesc_arry(index).Trim().Length > 30 Then
                    Btn.Text = " " & StrGroupDesc_arry(index).Substring(0, 30).Trim() & "... "
                End If

                Btn.ToolTip = StrGroupDesc_arry(index).Trim()
                Btn.CssClass = "buttonForTabActive"

                If index = 0 Then
                    Btn.CssClass = "buttonForTabInActive"
                End If

                Btn.OnClientClick = "return DisplayDiv('" & StrGroupCode_arry(index) & "','" & Id & "');"
                PlaceMedEx.Controls.Add(Btn)
                PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
                PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;"))
            Next
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "", ex)
        End Try
    End Function



#End Region

#Region "GetObject"

    Private Function GetObject(ByVal vFieldType As String, ByVal Id As String, ByVal vMedExValues As String, _
                                ByVal dtValues As String, Optional ByVal RefTable As String = "", _
                                Optional ByVal RefColumn As String = "") As Object
        Dim txt As TextBox
        Dim ddl As DropDownList
        Dim FileBro As FileUpload
        Dim RBL As RadioButtonList
        Dim CBL As CheckBoxList
        Dim lbl As Label

        Select Case vFieldType.ToUpper.Trim()
            Case "TEXTBOX"

                If Me.Session(VS_BlankCRF) = "YES" Then

                    lbl = New Label
                    lbl.ID = "txt" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                Else
                    lbl = New Label
                    lbl.ID = "txt" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")

                    lbl.Text = WrapString(dtValues.Trim(), 45)
                End If
                lbl.Enabled = False
                lbl.EnableViewState = False
                GetObject = lbl
            Case "COMBOBOX"

                If Me.Session(VS_BlankCRF) = "YES" Then
                    Dim Arrvalue() As String = Nothing
                    Dim i As Integer
                    Dim ds_ddl As New DataSet
                    Dim estr As String = ""
                    ddl = New DropDownList
                    ddl.ID = Id
                    ddl.Style.Add("font-size", "12px !Important")
                    ddl.Attributes.Add("size", Convert.ToString(Split(vMedExValues, ",").Length - 1))
                    'ddl.CssClass = "dropDownList"
                    ddl.EnableViewState = False
                    If RefTable.Trim() <> "" Then
                        If Not Me.objHelp.GetFieldsOfTable(RefTable.Trim(), RefColumn.Trim(), "", ds_ddl, estr) Then
                            Me.objCommon.ShowAlert(estr, Me.Page())
                            Return Nothing
                        End If
                        ds_ddl.Tables(0).DefaultView.Sort = RefColumn
                        ddl.DataSource = ds_ddl.Tables(0).DefaultView.ToTable()
                        ddl.DataTextField = RefColumn
                        ddl.DataValueField = RefColumn
                        ddl.DataBind()
                    Else
                        Arrvalue = Split(vMedExValues, ",")
                        For i = 1 To Arrvalue.Length - 1
                            If i = Arrvalue.Length - 1 Then
                                ddl.Items.Add(New System.Web.UI.WebControls.ListItem(Arrvalue(i).Trim(), Arrvalue(i).Trim()))
                            Else
                                ddl.Items.Add(New System.Web.UI.WebControls.ListItem(Arrvalue(i).Trim() + ",", Arrvalue(i).Trim() + ","))
                            End If
                            ddl.Items(i - 1).Attributes.Add("title", Arrvalue(i).Trim())
                        Next
                        If Not dtValues = "" Then
                            ddl.SelectedValue = dtValues.Trim()
                            ddl.Attributes.Add("title", dtValues)
                        End If
                    End If

                    If Me.RBLselect.SelectedValue.Trim() = "0" Then
                        ddl.Enabled = True
                    Else
                        ddl.Style.Add("background-image", "")
                        ddl.Enabled = False
                    End If

                    GetObject = ddl

                    'Comment by nipun khant for populated dropdownlist
                    'lbl = New Label
                    'lbl.ID = "ddl" + Id
                    'lbl.Style.Add("word-wrap", "break-word")
                    'lbl.Style.Add("white-space", "none")
                    'lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    'lbl.Style.Add("font-size", "16px !Important")
                    ''lbl.Style.Add("font-weight", "bold !Important")
                    'lbl.Text = dtValues.Trim()
                    'lbl.EnableViewState = False
                    'GetObject = lbl
                Else
                    lbl = New Label
                    lbl.ID = "ddl" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                End If

            Case "RADIO"
                Dim Arrvalue() As String = Nothing
                Dim i As Integer
                Dim ds_Radio As New DataSet
                Dim estr As String = ""
                RBL = New RadioButtonList
                RBL.ID = "rdo" + Id

                RBL.Style.Add("font-family", "'Times New Roman' !Important")
                RBL.Style.Add("font-size", "12px !Important")
                'RBL.Style.Add("font-weight", "bold !Important")
                RBL.EnableViewState = False
                If RefTable.Trim() <> "" Then
                    If Not Me.objHelp.GetFieldsOfTable(RefTable.Trim(), RefColumn.Trim(), "", ds_Radio, estr) Then
                        Me.objCommon.ShowAlert(estr, Me.Page())
                        Return Nothing
                    End If
                    ds_Radio.Tables(0).DefaultView.Sort = RefColumn
                    RBL.DataSource = ds_Radio.Tables(0).DefaultView.ToTable()
                    RBL.DataTextField = RefColumn
                    RBL.DataValueField = RefColumn
                    RBL.DataBind()
                Else
                    Arrvalue = Split(vMedExValues, ",")
                    For i = 0 To Arrvalue.Length - 1
                        RBL.Items.Add(New System.Web.UI.WebControls.ListItem(Arrvalue(i).Trim(), Arrvalue(i).Trim().ToUpper()))
                    Next
                    If Not dtValues = "" Then
                        RBL.SelectedValue = dtValues.Trim().ToUpper()
                    End If
                End If
                RBL.RepeatDirection = RepeatDirection.Horizontal
                RBL.RepeatColumns = 3
                If Me.RBLselect.SelectedValue.Trim() = "0" Then
                    RBL.Enabled = True
                Else
                    RBL.Enabled = False
                End If

                GetObject = RBL

            Case "CHECKBOX"
                Dim Arrvalue() As String = Nothing
                Dim Defvalue() As String = Nothing
                Dim i As Integer
                Dim ds_Check As New DataSet
                Dim estr As String = ""
                CBL = New CheckBoxList
                CBL.ID = "chk" + Id
                CBL.Style.Add("font-family", "'Times New Roman' !Important")
                CBL.Style.Add("font-size", "12px !Important")
                'CBL.Style.Add("font-weight", "bold !Important")
                CBL.EnableViewState = False
                If RefTable.Trim() <> "" Then
                    If Not Me.objHelp.GetFieldsOfTable(RefTable.Trim(), RefColumn.Trim(), "", ds_Check, estr) Then
                        Me.objCommon.ShowAlert(estr, Me.Page())
                        Return Nothing
                    End If
                    ds_Check.Tables(0).DefaultView.Sort = RefColumn
                    CBL.DataSource = ds_Check.Tables(0).DefaultView.ToTable()
                    CBL.DataTextField = RefColumn
                    CBL.DataValueField = RefColumn
                    CBL.DataBind()
                Else
                    Arrvalue = Split(vMedExValues, ",")
                    For i = 0 To Arrvalue.Length - 1
                        CBL.Items.Add(New System.Web.UI.WebControls.ListItem(Arrvalue(i).Trim(), Arrvalue(i).Trim()))
                    Next
                End If
                CBL.ClearSelection()
                If Not dtValues = "" Then
                    Defvalue = Split(dtValues, ",")
                    For i = 0 To Defvalue.Length - 1
                        For Each item As System.Web.UI.WebControls.ListItem In CBL.Items
                            If item.Value.Trim().ToUpper() = Defvalue(i).Trim().ToUpper() Then
                                item.Selected = True
                                Exit For
                            End If
                        Next item
                    Next i
                End If
                CBL.RepeatDirection = RepeatDirection.Horizontal
                CBL.RepeatColumns = 3
                If Me.RBLselect.SelectedValue.Trim() = "0" Then
                    CBL.Enabled = True
                Else
                    CBL.Enabled = False
                End If
                GetObject = CBL

            Case "FILE"
                FileBro = New FileUpload
                FileBro.ID = "FU" + Id
                'FileBro.CssClass = "textBox"
                FileBro.Style.Add("font-family", "'Times New Roman' !Important")
                FileBro.Style.Add("font-size", "12px !Important")
                'FileBro.Style.Add("font-weight", "bold !Important")
                FileBro.EnableViewState = False
                If Id <> "fusponsorlogo" Then
                    FileBro.Enabled = False
                End If
                FileBro.Attributes.Add("class", "textboxFileUpload")
                GetObject = FileBro

            Case "TEXTAREA"

                If Me.Session(VS_BlankCRF) = "YES" Then
                    lbl = New Label
                    lbl.ID = "txta" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                Else
                    lbl = New Label
                    lbl.ID = "txta" + Id
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Text = WrapString(dtValues.Trim(), 45)
                    lbl.EnableViewState = False
                    GetObject = lbl
                End If

            Case "DATETIME", "STANDARDDATE"

                If Me.Session(VS_BlankCRF) = "YES" Then
                    lbl = New Label
                    lbl.ID = "txtd" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                Else
                    lbl = New Label
                    lbl.ID = "txtd" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                End If

            Case "TIME"

                If Me.Session(VS_BlankCRF) = "YES" Then
                    lbl = New Label
                    lbl.ID = "txtt" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                Else
                    lbl = New Label
                    lbl.ID = "txtt" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                End If


            Case "ASYNCDATETIME"

                If Me.Session(VS_BlankCRF) = "YES" Then
                    lbl = New Label
                    lbl.ID = "txtd" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                Else
                    lbl = New Label
                    lbl.ID = "txtd" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                End If

            Case "ASYNCTIME"

                If Me.Session(VS_BlankCRF) = "YES" Then
                    lbl = New Label
                    lbl.ID = "txtt" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                Else
                    lbl = New Label
                    lbl.ID = "txtt" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                End If

            Case "IMPORT"

                If Me.Session(VS_BlankCRF) = "YES" Then
                    lbl = New Label
                    lbl.ID = "txti" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                Else
                    lbl = New Label
                    lbl.ID = "txti" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                End If

            Case "COMBOGLOBALDICTIONARY"

                If Me.Session(VS_BlankCRF) = "YES" Then
                    txt = New TextBox
                    txt.ID = Id
                    'txt.CssClass = "textBox"
                    txt.Style.Add("font-family", "'Times New Roman' !Important")
                    txt.Style.Add("font-size", "12px !Important")
                    'txt.Style.Add("font-weight", "bold !Important")
                    txt.Text = dtValues
                    txt.Enabled = False
                    txt.Attributes.Add("title", dtValues)
                    txt.EnableViewState = False
                    GetObject = txt
                Else
                    lbl = New Label
                    lbl.ID = "txtc" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    Dim str As String = String.Empty
                    Dim Count As Integer = dtValues.Trim().Length
                    Dim strsplit As Array = dtValues.Trim().Split("##")
                    If strsplit.Length = 0 Then
                        str = dtValues.Trim()
                    Else
                        For i As Integer = 0 To strsplit.Length - 1
                            If strsplit(i) <> "" Then
                                If i = strsplit.Length - 1 Then
                                    str += strsplit(i) + " "
                                Else
                                    str += strsplit(i) + "## "
                                End If
                            End If
                        Next
                    End If

                    lbl.Text = str
                    lbl.EnableViewState = False
                    GetObject = lbl
                End If

            Case "FORMULA"

                If Me.Session(VS_BlankCRF) = "YES" Then
                    txt = New TextBox
                    txt.ID = Id
                    'txt.CssClass = "textBox"
                    txt.Style.Add("font-family", "'Times New Roman' !Important")
                    txt.Style.Add("font-size", "12px !Important")
                    'txt.Style.Add("font-weight", "bold !Important")
                    txt.Text = dtValues
                    txt.Attributes.Add("title", dtValues)
                    txt.Enabled = False
                    txt.EnableViewState = False
                    GetObject = txt
                Else
                    lbl = New Label
                    lbl.ID = "txtf" + Id
                    lbl.Style.Add("word-wrap", "break-word")
                    lbl.Style.Add("white-space", "none")
                    lbl.Style.Add("font-family", "'Times New Roman' !Important")
                    lbl.Style.Add("font-size", "12px !Important")
                    'lbl.Style.Add("font-weight", "bold !Important")
                    lbl.Text = dtValues.Trim()
                    lbl.EnableViewState = False
                    GetObject = lbl
                End If

            Case "LABEL"
                lbl = New Label
                lbl.ID = "lbl" + Id
                lbl.CssClass = "Label"
                lbl.Style.Add("word-wrap", "break-word")
                lbl.Style.Add("white-space", "none")
                lbl.Style.Add("font-family", "'Times New Roman' !Important")
                lbl.Style.Add("font-size", "12px !Important")
                'lbl.Style.Add("font-weight", "bold !Important")
                lbl.Text = vMedExValues.Trim()
                lbl.EnableViewState = False
                GetObject = lbl
            Case "CRFTERM"
                lbl = New Label
                lbl.ID = "txtc" + Id
                lbl.Style.Add("word-wrap", "break-word")
                lbl.Style.Add("word-break", "break-all")
                lbl.Style.Add("white-space", "none")
                lbl.Style.Add("font-family", "'Times New Roman' !Important")
                lbl.Style.Add("font-size", "12px !Important")
                'lbl.Style.Add("font-weight", "bold !Important")
                lbl.Style.Add("Width", "95%")
                lbl.Text = dtValues
                lbl.EnableViewState = False
                GetObject = lbl
                'lbl = New Label
                'lbl.ID = Id
                'lbl.CssClass = "Label"
                'lbl.Style.Add("font-family", "'Times New Roman' !Important")
                'lbl.Style.Add("white-space", "none")
                'lbl.Style.Add("font-size", "16px !Important")
                'lbl.Style.Add("font-weight", "bold !Important")
                'lbl.Style.Add("word-wrap", "break-word")
                'lbl.Style.Add("border", "Solid 1px")
                'lbl.Text = dtValues
                'lbl.EnableViewState = False
                'GetObject = lbl

                'txt = New TextBox
                'txt.ID = Id
                'txt.TextMode = TextBoxMode.MultiLine
                'txt.CssClass = "textBox"
                'txt.Style.Add("font-family", "'Times New Roman' !Important")
                'txt.Style.Add("font-size", "16px !Important")
                'txt.Style.Add("font-weight", "bold !Important")
                'txt.Style.Add("Width", "95%")
                ''txt.Style.Add("word-wrap", "break-word")
                'txt.Text = dtValues
                'txt.EnableViewState = False
                'GetObject = txt

            Case Else
                Return Nothing
        End Select
    End Function

#End Region

#Region "Button Events"

    Protected Sub BtnGeneratePdf_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles BtnGeneratePdf.Click
        Dim htmlcontent As String = String.Empty
        Dim headercontent As String = String.Empty
        Dim d1 As Document
        Dim data As String = String.Empty
        Dim stylesheetarraylist As New ArrayList
        Dim watermarkTextFont As System.Drawing.Font
        Dim watermarkTextElement As TextElement
        Dim strProfileStatus As String = String.Empty
        Dim wStr As String = String.Empty
        Dim eStr As String = String.Empty
        Dim pdfFont As System.Drawing.Font
        Dim ds_subject, ds_header As New DataSet
        Dim ds_SubSample As New DataSet
        Dim dt_subjectMain As New DataTable
        Dim dv_subjectmain As DataView
        Dim ScreeningHdrNo As String = String.Empty
        Dim SubjId As String = ""
        Dim SubNo As String = ""
        Dim Initials As String = ""
        Dim NodeID As Integer
        Dim Gender As String = String.Empty
        Dim indexrpt As Integer = 0
        Dim StrRptNo, project, ProjectNo, SiteId, projects(), SubjectNo, SubjectInitial As String
        StrRptNo = ""
        SiteId = ""
        SubjectNo = "_"
        SubjectInitial = "_"
        Dim dt_subjectcopy = New DataTable
        Dim strMappingRequired As String = ""
        Dim strdatetime As String = ""
        Dim DocumentsArray() As String
        Dim DocumentsArray1() As String
        Dim fInfo As FileInfo = Nothing
        Dim fInfo1 As FileInfo = Nothing
        Dim ilabreport As Integer = 1
        Dim strfilelogopath As String = ""
        Dim strsavelogopath As String = ""
        'Dim d2 As Document
        Dim SubIDForLab As String = String.Empty
        Dim DocumentsArrayForMissingSubject() As String

        Try

            strdatetime = DateTime.Now.Ticks.ToString()
            Me.ViewState(vs_sponsorlogofilepath) = ""
            If fusponsorlogo.HasFile = True Then
                strfilelogopath = System.IO.Path.GetFileName(fusponsorlogo.PostedFile.FileName)
                strfilelogopath = DateTime.Now.Ticks.ToString() + "." + strfilelogopath.Split(".")(strfilelogopath.Split(".").Length - 1)
                strsavelogopath = Server.MapPath(ConfigurationManager.AppSettings.Item("LogoFilePath").ToString()) + "\" + strfilelogopath
                fusponsorlogo.PostedFile.SaveAs(strsavelogopath)
                Me.ViewState(vs_sponsorlogofilepath) = Request.Url.AbsoluteUri.Substring(0, Request.Url.AbsoluteUri.ToString.LastIndexOf("/")) + "/" + ConfigurationManager.AppSettings.Item("LogoFilePath").ToString() + "/" + strfilelogopath
            End If
            If Me.ddlActivityType.SelectedIndex = 2 And Me.hdnSubSelection.Value.Trim() <> "" Then
                wStr = " vWorkspaceid = '" + Me.HProjectId.Value.ToString() + "' And iMySubjectNo <> 0 And iPeriod = 1 and cstatusindi <> 'D' order by vMySubjectNo"
                If Not objHelp.GetViewWorkspaceSubjectMst(wStr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, _
                       ds_subject, eStr) Then
                    Throw New Exception("Error While Getting Data From View_WorkspaceSubjectMst")
                End If
                dt_subjectMain = ds_subject.Tables(0).DefaultView.ToTable(True, "vSubjectId,vSubjectIdForLab,vInitials,iMySubjectNO,vMySubjectNo,vWorkSpaceSubjectID,nMedexScreeningHdrNo,cSex,vProjectNo,vWorkSpaceDesc,cRejectionFlag,vPatientID".Split(","))
                dt_subjectcopy = dt_subjectMain.Copy()
                dv_subjectmain = dt_subjectMain.DefaultView
                dv_subjectmain.RowFilter = "vSubjectId in (" + Me.hdnSubSelection.Value.ToString() + ")"

                For Each dr As DataRow In dv_subjectmain.ToTable().Rows
                    Try
                        SubjId = dr("vSubjectId").ToString()

                        SubNo = dr("vMySubjectNo").ToString()
                        Initials = dr("vInitials").ToString()
                        If Not dr("nMedexScreeningHdrNo") Is System.DBNull.Value Then
                            ScreeningHdrNo = dr("nMedexScreeningHdrNo").ToString()
                        End If
                        If Not dr("cSex") Is System.DBNull.Value Then
                            Gender = dr("cSex").ToString()
                        End If
                        For Each row As GridViewRow In gvwReportType.Rows
                            If row.RowType = DataControlRowType.DataRow Then
                                If CType(row.FindControl("chkSelect"), HtmlInputCheckBox).Checked Then
                                    indexrpt += 1
                                    If (indexrpt + 1) < 10 Then
                                        StrRptNo = "0" + Convert.ToString(indexrpt + 1)
                                    End If
                                    If row.Cells(GVR_ReportId).Text.ToString().Split("#")(0) = "1" Then
                                        If Not MsrReport(SubjId, ScreeningHdrNo, Gender, StrRptNo, strdatetime, SubNo, Initials) Then
                                            Throw New Exception("MsrReport")
                                        End If
                                    ElseIf row.Cells(GVR_ReportId).Text.ToString().Split("#")(0) = "2" Then
                                        SubjId = dr("vSubjectId").ToString()
                                        SubIDForLab = dr("vSubjectIdForLab").ToString()
                                        wStr = "vworkspaceID ='" + Me.HProjectId.Value.Trim() + "' and vSubjectID = '" + SubjId + "' and iperiod =1 "
                                        If Not objHelp.view_WorkspaceSubjectMstDetail(wStr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, ds_SubSample, eStr) Then
                                            Throw New Exception("Error While Getting Data From View_WorkspaceSubjectMst")
                                        End If
                                        If ds_SubSample.Tables(0).Rows.Count > 0 Then
                                            For IndexSample As Integer = 0 To ds_SubSample.Tables(0).Rows.Count - 1
                                                If (indexrpt + 1) < 10 Then
                                                    StrRptNo = "0" + Convert.ToString(indexrpt + 1)
                                                Else
                                                    StrRptNo = Convert.ToString(indexrpt + 1)
                                                End If

                                                If Not LabReport(ds_SubSample.Tables(0).Rows(IndexSample)("nSampleID"), StrRptNo + "." + Convert.ToString(IndexSample + ilabreport), strdatetime, SubIDForLab) Then
                                                    Throw New Exception("LabReport")
                                                End If
                                                ilabreport = ilabreport + 1
                                            Next
                                        End If
                                        SubjId = dr("vSubjectId").ToString()
                                    ElseIf row.Cells(GVR_ReportId).Text.ToString().Split("#")(0) = "3" Then
                                        If (indexrpt + 1) < 10 Then
                                            StrRptNo = "0" + Convert.ToString(indexrpt + 1)
                                        Else
                                            StrRptNo = Convert.ToString(indexrpt + 1)
                                        End If
                                        If Not CRFReport(StrRptNo, SubjId, strdatetime, SubNo, Initials) Then
                                            Throw New Exception("CRFReport")
                                        End If
                                    ElseIf row.Cells(GVR_ReportId).Text.ToString().Split("#")(1).ToString() <> "0" Then
                                        If (indexrpt + 1) < 10 Then
                                            StrRptNo = "0" + Convert.ToString(indexrpt + 1)
                                        Else
                                            StrRptNo = Convert.ToString(indexrpt + 1)
                                        End If
                                        NodeID = row.Cells(GVR_ReportId).Text.ToString().Split("#")(1)
                                        SubIDForLab = dr("vSubjectIdForLab").ToString()
                                        If Not ProjectSpecificLabRpt(SubIDForLab, NodeID, StrRptNo, strdatetime) Then
                                            Throw New Exception("ProjectSpecificLabRpt")
                                        End If
                                    End If
                                End If
                            End If
                        Next
                        If Not MergePdf(SubNo, strdatetime, Initials) Then
                            Exit Sub
                        End If
                    Catch ex As Exception
                        If Directory.Exists(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strdatetime + "\RptMerge") Then
                            DocumentsArrayForMissingSubject = System.IO.Directory.GetFiles(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strdatetime + "\RptMerge")
                            If DocumentsArrayForMissingSubject.Length > 0 Then
                                For i = 0 To DocumentsArrayForMissingSubject.Length - 1
                                    fInfo = New FileInfo(DocumentsArrayForMissingSubject(i))
                                    If fInfo.Exists Then
                                        fInfo.Delete()
                                    End If
                                Next i
                            End If
                        End If
                        Me.ShowErrorMessage(ex.Message.ToString(), "Dossier File Not Generated For '" + SubNo + "'", ex)
                    End Try
                Next
                If Not DownloadZip(strdatetime) Then
                    Exit Sub
                End If

            ElseIf Me.ddlActivityType.SelectedIndex = 1 Or Me.ddlActivityType.SelectedIndex = 2 Or Me.hdnSubSelection.Value.Trim() = "" Then

                If Me.HFHeaderLabel.Value.ToString().Trim() = "" Then
                    Exit Sub
                End If

                Dim pdfconverter As HtmlToPdfConverter = New HtmlToPdfConverter()
                pdfconverter.LicenseKey = "dfvo+uv66OPj6vrr6PTq+unr9Ovo9OPj4+P66g=="
                pdfconverter.PdfDocumentOptions.AvoidImageBreak = True
                pdfconverter.PdfDocumentOptions.AvoidTextBreak = False
                pdfconverter.PdfDocumentOptions.PdfPageSize = PdfPageSize.A4
                pdfconverter.PdfDocumentOptions.EmbedFonts = True
                pdfconverter.PdfDocumentOptions.JpegCompressionEnabled = True
                pdfconverter.PdfDocumentOptions.JpegCompressionLevel = 0
                pdfconverter.PdfDocumentOptions.PdfCompressionLevel = PdfCompressionLevel.Best
                pdfconverter.PdfDocumentOptions.LeftMargin = 72
                pdfconverter.PdfDocumentOptions.RightMargin = 27
                pdfconverter.PdfDocumentOptions.TopMargin = 27
                pdfconverter.PdfDocumentOptions.BottomMargin = 5
                pdfconverter.HtmlViewerWidth = 662     ''Previous 750,647
                pdfconverter.PdfDocumentOptions.FitWidth = False
                pdfconverter.PdfDocumentOptions.StretchToFit = True
                pdfconverter.PdfBookmarkOptions.AllowDefaultTitle = True
                pdfconverter.PdfBookmarkOptions.AutoBookmarksEnabled = True
                pdfFont = New System.Drawing.Font("Times New Roman", 12, FontStyle.Bold, GraphicsUnit.Point)

                pdfconverter.PdfDocumentOptions.ShowHeader = True

                Dim Path As String = Request.Url.AbsoluteUri.Substring(0, Request.Url.AbsoluteUri.ToString.LastIndexOf("/"))
                Path = Path + "/images/lambda_logo.jpg"

                '=======================Header
                ds_header = CType(Me.ViewState(vs_View_getWorkspaceDetailForHdr), DataSet)
                projects = ds_header.Tables(0).Rows(0)("vProjectNo").ToString().Split(":")
                Dim strLen As Int32 = projects(0).ToString.LastIndexOf("-")
                ProjectNo = projects(0).ToString

                If Me.ViewState(IsProjectCT) AndAlso strLen > 5 Then
                    ProjectNo = projects(0).Substring(0, strLen)
                    strLen = strLen + 1
                    SiteId = projects(0).Substring(strLen)
                End If
                headercontent += "<html><head></head><body>"
                headercontent += "<table style=""margin-top: 2px; margin: auto; border: solid 1px black; width: 100%; font-family:'Times New Roman'; font-size:12px; ""align=""left"">"
                headercontent += "<tr style="" "">"
                headercontent += "<td valign=""top"">"
                headercontent += "<table style=""font-family: 'Times New Roman'; font-size:12px; "">"
                headercontent += "<tr style="" "">"
                headercontent += "<td colspan=""4"">"
                headercontent += "<Label  for """ + ConfigurationManager.AppSettings.Item("Client").ToString() + """>" + ConfigurationManager.AppSettings.Item("Client").ToString() + "</asp:Label>"
                headercontent += "</td>"
                headercontent += "</tr>"
                headercontent += "<tr style="" "">"
                headercontent += "<td colspan=""4"">"
                headercontent += "Sponsor Name:<Label  for """ + ds_header.Tables(0).Rows(0)("vClientName").ToString() + """>" + ds_header.Tables(0).Rows(0)("vClientName").ToString() + "</asp:Label>"
                headercontent += "</td>"
                headercontent += "</tr >"
                headercontent += "<tr style="" "">"
                headercontent += "<td align=""right"" colspan=""4"" >"
                headercontent += "<h4>"
                headercontent += "CASE REPORT FORM</h4>"
                headercontent += "</td>"
                headercontent += "</tr>"
                headercontent += "<tr style="" "">"
                headercontent += "<td align=""right"">Project No:</td>"
                headercontent += "<td style=""border: thin solid #000000;"">"
                headercontent += "<Label  for """ + ProjectNo + """>" + ProjectNo + "</asp:Label>"
                headercontent += "</td>"
                If Me.ViewState(IsProjectCT) = True Then
                    If SiteId.Trim() <> "" Then
                        headercontent += "<td align=""right"">Site Id:</td>"
                        headercontent += "<td  style=""border: thin solid #000000;"">"
                        headercontent += "<Label  for """ + SiteId + """>" + SiteId + "</asp:Label>"
                        headercontent += "</td>"
                    End If
                End If
                If Me.chkprotocolno.Checked = False Then
                    If ds_header.Tables(0).Rows(0).Item("ProtocolNo").ToString.Trim().Length > 0 Then
                        headercontent += "<td align=""right"">Protocol No:</td>"
                        headercontent += "<td  style=""border: thin solid #000000;"">"
                        headercontent += "<Label  for """ + ds_header.Tables(0).Rows(0).Item("ProtocolNo").ToString.Trim() + """>" + ds_header.Tables(0).Rows(0).Item("ProtocolNo").ToString.Trim() + "</asp:Label>"
                        headercontent += "</td>"
                    End If
                End If
                headercontent += "</tr>"
                headercontent += "<tr style="" "">"
                If Me.ViewState(IsProjectCT) Then
                    If Me.ddlActivityType.SelectedIndex = 2 Then
                        headercontent += "<td align=""right"">Subject No:</td>"
                        headercontent += "<td style=""border: thin solid #000000;"">"
                        headercontent += "<Label  for """ + SubjectNo + """>" + SubjectNo + "</asp:Label>"
                        headercontent += "</td>"
                        If Me.chkinitial.Checked = False Then
                            headercontent += "<td align=""right"">Subject Initials:</td>"
                            headercontent += "<td  style=""border: thin solid #000000;"">"
                            headercontent += "<Label  for """ + SubjectInitial + """>" + SubjectInitial + "</asp:Label>"
                            headercontent += "</td>"
                        End If
                    End If
                Else
                    If Me.ddlActivityType.SelectedIndex = 2 Then
                        headercontent += "<td align=""right"">Subject No:</td>"
                        headercontent += "<td style=""border: thin solid #000000;"">"
                        headercontent += "<Label  for """ + SubjectNo + """>" + SubjectNo + "</asp:Label>"
                        headercontent += "</td>"
                        If Me.chkinitial.Checked = False Then
                            headercontent += "<td align=""right"">Subject Initials:</td>"
                            headercontent += "<td  style=""border: thin solid #000000;"">"
                            headercontent += "<Label  for """ + SubjectInitial + """>" + SubjectInitial + "</asp:Label>"
                            headercontent += "</td>"
                        End If
                    End If
                End If
                headercontent += "</tr>"
                headercontent += "</table>"
                headercontent += "</td>"
                If Me.ViewState(vs_sponsorlogofilepath).ToString.Trim() <> "" Then
                    headercontent += "<td valign=""middle"">"
                    headercontent += "<img id=ctl00_CPHLAMBDA_ImgsponsorLogo alt=""" + Me.ViewState(vs_sponsorlogofilepath) + """ src=""" + Me.ViewState(vs_sponsorlogofilepath).ToString() + """right"" alt=""lambda"" style=""width:120px; height:120px;""/>"
                    headercontent += "</td>"
                End If
                headercontent += "<td valign=""middle"">"
                headercontent += "<img id=ctl00_CPHLAMBDA_ImgLogo alt=""" + Path.ToString() + """ src=""" + Path.ToString() + """right"" alt=""lambda"" style=""width:120px; height:120px;""/>"
                headercontent += "</td>"
                headercontent += "</tr>"
                headercontent += "</table>"
                headercontent += "</body></html>"
                '=============================

                pdfconverter.PdfHeaderOptions.HeaderHeight = 125
                pdfconverter.PdfDocumentOptions.ShowFooter = True
                pdfconverter.PdfFooterOptions.FooterHeight = 42   'Previous 50

                '------Commented By Hiren Rami----
                'd2 = pdfconverter.ConvertHtmlToPdfDocumentObject(Me.HFHeaderLabel.Value.ToString(), String.Empty) ' added by prayag for blank page

                Dim Header1 As New HtmlToPdfElement(headercontent, String.Empty)
                Header1.HtmlViewerWidth = 662     ''Previous 750,647
                Header1.FitWidth = False
                pdfconverter.PdfHeaderOptions.AddElement(Header1)

                pdfconverter.TableOfContentsOptions.AutoTocItemsEnabled = True
                Dim level1TextStyle As String = "font-family:'Times New Roman'; font-size:16px; text-decoration: underline;"
                pdfconverter.TableOfContentsOptions.SetItemStyle(1, level1TextStyle)

                Dim level1PageNumberStyle As String = "padding-right:3px; font-family:'Times New Roman'; font-size:16px; text-decoration: underline; font-weight:bold"
                pdfconverter.TableOfContentsOptions.SetPageNumberStyle(1, level1PageNumberStyle)

                If hdnSubSelection.Value.Trim() <> "" Then
                    pdfconverter.PdfFooterOptions.AddElement(New TextElement(0, 15, "[Authenticated By:" + CType(Session(VS_AuthenticatedBy), String) + "]", pdfFont))
                    pdfconverter.PdfFooterOptions.AddElement(New TextElement(0, 28, "[Authenticated On:" + CType(Session(VS_AuthenticatedOn), String) + "]", pdfFont))
                End If
                
                pdfconverter.PdfFooterOptions.PageNumberingStartIndex = 0
                pdfconverter.PdfFooterOptions.AddElement(New LineElement(0, 0, pdfconverter.PdfDocumentOptions.PdfPageSize.Width - pdfconverter.PdfDocumentOptions.LeftMargin - pdfconverter.PdfDocumentOptions.RightMargin, 0))
                Dim footerText As New TextElement(0, 1, "*This is an electronically authenticated report.                                            Page &p; of &P;                       ", New Font(New FontFamily("Times New Roman"), 12, GraphicsUnit.Point))
                footerText.TextAlign = HorizontalTextAlign.Right
                footerText.ForeColor = Color.Navy
                footerText.EmbedSysFont = True
                pdfconverter.PdfFooterOptions.AddElement(footerText)

                htmlcontent = Me.HFHeaderLabel.Value.ToString()
                BtnGeneratePdf.Enabled = False

                d1 = pdfconverter.ConvertHtmlToPdfDocumentObject(htmlcontent, String.Empty)
                If Me.ddlPrinttype.SelectedValue.ToUpper() = "DRAFT" Then
                    watermarkTextFont = New System.Drawing.Font("Times New Roman", 75, FontStyle.Bold, GraphicsUnit.Point)
                    watermarkTextElement = New TextElement(50, 250, strProfileStatus + " Draft Copy", watermarkTextFont)
                    watermarkTextElement.ForeColor = System.Drawing.Color.Blue
                    watermarkTextElement.Opacity = 20
                    watermarkTextElement.TextAngle = 45
                    For Each PdfPage As Winnovative.PdfPage In d1.Pages
                        PdfPage.AddElement(watermarkTextElement)
                    Next
                End If

                ''Remove Blank Page Logic "Commented By Hiren Rami"
                'If Not GetBlankpage(d1, d2) Then
                '    objCommon.ShowAlert("Error While Removing Blank Page.Please Generate Report Again! ", Me.Page)
                '    Exit Try
                'End If
                ''Completed

                project = ds_header.Tables(0).Rows(0)("vProjectNo").ToString()
                d1.Save(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strdatetime + "\Report\02.pdf")
                d1.AutoCloseAppendedDocs = True
                d1.Close()
                If Not Me.CreateTOC(project, strdatetime, "") Then
                    Exit Sub
                End If

                Dim file As New System.IO.FileInfo(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strdatetime + "\FinalReportLinear\" + project + ".pdf")
                Dim response As System.Web.HttpResponse = System.Web.HttpContext.Current.Response
                response.Clear()
                response.ContentType = "application/pdf"
                response.AddHeader("content-disposition", "attachment; filename=" + file.Name + "; size=" & file.Length.ToString())
                response.Flush()
                response.TransmitFile(file.FullName)
                response.Flush()
                response.End()

            End If

        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message.ToString(), "............BtnGeneratePdf_Click", ex)
        Finally
            If Me.ViewState(vs_sponsorlogofilepath).ToString.Trim() <> "" Then
                fInfo = New FileInfo(strsavelogopath)
                If fInfo.Exists Then
                    fInfo.Delete()
                End If
            End If

            If Directory.Exists(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strdatetime) Then
                If Directory.Exists(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strdatetime + "\FinalReport") Then
                    DocumentsArray = System.IO.Directory.GetFiles(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strdatetime + "\FinalReport")
                    If DocumentsArray.Length > 0 Then
                        For i = 0 To DocumentsArray.Length - 1
                            fInfo = New FileInfo(DocumentsArray(i))
                            If fInfo.Exists Then
                                fInfo.Delete()
                            End If
                        Next i
                    End If
                End If

                If Directory.Exists(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strdatetime + "\FinalReportLinear") Then
                    DocumentsArray = System.IO.Directory.GetFiles(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strdatetime + "\FinalReportLinear")
                    If DocumentsArray.Length > 0 Then
                        For i = 0 To DocumentsArray.Length - 1
                            fInfo = New FileInfo(DocumentsArray(i))
                            If fInfo.Exists Then
                                fInfo.Delete()
                            End If
                        Next i
                    End If
                End If

                If Directory.Exists(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strdatetime + "\Report") Then
                    DocumentsArray1 = System.IO.Directory.GetFiles(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strdatetime + "\Report")
                    If DocumentsArray1.Length > 0 Then
                        For j = 0 To DocumentsArray1.Length - 1
                            fInfo1 = New FileInfo(DocumentsArray1(j))
                            If fInfo1.Exists Then
                                fInfo1.Delete()
                            End If
                        Next j
                    End If
                End If
            End If
            Me.ViewState(vs_sponsorlogofilepath) = ""
        End Try
    End Sub

    Protected Sub btnGo_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnGo.Click
        Dim ds_Activity As New DataSet
        Dim ds_Report As New DataSet
        Dim wstr As String = ""
        Dim estr As String = ""
        Dim ds_subject As New DataSet
        Dim dt_subjectMain As New DataTable
        Dim SubjId As String = ""
        Dim strMappingRequired As String = ""
        Dim strReport As String = ""

        Try

            Me.Session(VS_dtMedEx_Fill) = Nothing
            Me.Session(VS_BlankCRF) = ""
            Me.Session(vs_dsMsr) = Nothing
            Me.ViewState(vs_strReporttype) = ""
            If Me.ddlActivityType.SelectedIndex = 2 Then
                If Me.hdnSubSelection.Value.ToString() <> "" Then

                    wstr = " vWorkspaceid = '" + Me.HProjectId.Value.ToString() + "' And iMySubjectNo <> 0 And iPeriod = 1 and cstatusindi <> 'D' order by vMySubjectNo"
                    If Not objHelp.GetViewWorkspaceSubjectMst(wstr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, _
                           ds_subject, estr) Then
                        Throw New Exception("Error While Getting Data From View_WorkspaceSubjectMst")
                    End If
                    dt_subjectMain = ds_subject.Tables(0).DefaultView.ToTable(True, "vSubjectId,vInitials,iMySubjectNO,vMySubjectNo,vWorkSpaceSubjectID,nMedexScreeningHdrNo,cSex,vProjectNo,vWorkSpaceDesc,cRejectionFlag,vPatientID".Split(","))
                    If Me.ViewState(IsProjectCT) Then
                        For Each dr In dt_subjectMain.Rows
                            If Me.ViewState(IsProjectCT) Then
                                SubjId = dt_subjectMain.Rows(0)("vPatientId").ToString()
                                If SubjId.Trim = "" Or SubjId.Trim.Length < 6 Then
                                    strMappingRequired += dr("vSubjectId").ToString() & vbCrLf
                                End If
                            End If
                        Next
                        If strMappingRequired <> "" AndAlso Me.ViewState(IsProjectCT) Then
                            strMappingRequired = "Mapping of These Subject-Id required for Lab Data!" & vbCrLf & strMappingRequired & vbCrLf
                            ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "show", "ShowConfirmation (" + strMappingRequired + ");", True)
                        End If
                    End If

                End If
                Me.ViewState(vs_View_WorkspaceSubjectMst) = dt_subjectMain.Copy()
                For Each row As GridViewRow In gvwReportType.Rows
                    If row.RowType = DataControlRowType.DataRow Then
                        If CType(row.FindControl("chkSelect"), HtmlInputCheckBox).Checked Then
                            If row.Cells(GVR_ReportId).Text.ToString().Split("#")(0) = "3" Then
                                strReport += "CRF" + ","
                            ElseIf row.Cells(GVR_ReportId).Text.ToString().Split("#")(0) = "1" Then
                                strReport += "MSR" + ","
                            End If
                        End If
                    End If
                Next
                If strReport.Contains(",") Then
                    strReport = strReport.Substring(0, strReport.LastIndexOf(","))
                    Me.ViewState(vs_strReporttype) = strReport
                End If

            End If
            If Not Me.GenCall() Then
                Exit Sub
            End If

            Me.ddlSubject.Enabled = False

            If Me.RBLselect.SelectedValue.Trim() = "1" Then
                Me.BtnGeneratePdf.Style.Add("display", "none")
                Me.BtnGeneratePdf.Enabled = True
                Me.HeaderLabel.Style.Add("display", "block")
            Else
                Me.HeaderLabel.Style.Add("display", "none")
                Me.BtnGeneratePdf.Style.Add("display", "none")
                Me.BtnGeneratePdf_Click(sender, e)
            End If
        Catch ex As Exception
            ShowErrorMessage(ex.Message, "Error While btnGo_Click. ", ex)
        End Try
    End Sub

    Protected Sub btnSetProject_Click(ByVal sender As Object, ByVal e As System.EventArgs)
        Dim Wstr As String = String.Empty
        Dim ActivityparamArry(1) As String
        Dim dt_WorkSpaceActivity As New DataTable
        Dim dt_WorkSpaceNodes As New DataTable
        Dim dt_WorkSpaceNodeDetail As New DataTable
        Dim ds_CRFVersionDetail As DataSet = Nothing
        Dim ds_ParentWorkspace As DataSet = Nothing
        Dim ds_Editchecks As DataSet = Nothing
        Dim ds_CrfHdr As DataSet = Nothing
        Dim ds_project As DataSet = Nothing
        Dim ds_Check As DataSet = Nothing
        Dim ds_WorkspaceNodeDetail As DataSet = Nothing
        Dim dv_ParentGrid As New DataView

        Try
            Me.divActivity.Style.Add("Display", "none")
            Me.divReport.Style.Add("Display", "none")
            Me.lockdtl.Style.Add("Display", "")
            Me.dvheadershow.Style.Add("Display", "none")
            ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ActivityLocked", "fnSubjectSelection();", True)
            Me.ViewState(IsProjectLock) = False
            Me.hdnLock.Value = False
            Me.ViewState(IsProjectCT) = False
            Me.chkDataType.Checked = False
            Me.chkSubactivityWise.Checked = False
            Wstr = "vWorkspaceId = '" + Me.HProjectId.Value.Trim() + "' And cStatusIndi <> 'D' Order by iTranNo desc"
            If Not Me.objHelp.GetCRFLockDtl(Wstr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, _
                           ds_Check, eStr_Retu) Then
                Throw New Exception(eStr_Retu)
            End If

            Wstr = "vWorkspaceId = '" + Me.HProjectId.Value.Trim() + "' And cStatusIndi <> 'D'"
            If Not objHelp.GetFieldsOfTable("View_getWorkspaceDetailForHdr", "*", Wstr, ds_project, eStr_Retu) Then
                Throw New Exception("Error while getting Header information. " + eStr_Retu)
            End If

            If ds_project Is Nothing Or ds_project.Tables.Count = 0 Or ds_project.Tables(0) Is Nothing Or ds_project.Tables(0).Rows.Count = 0 Then
                Exit Sub
            End If

            Me.ViewState(vs_View_getWorkspaceDetailForHdr) = ds_project.Copy()
            Me.ViewState(IsProjectCT) = IIf(ds_project.Tables(0).Rows(0)("vProjectTypeCode") = "0014", True, False)
            Me.lockdtl.Style.Add("display", "")
            If ds_Check.Tables(0).Rows.Count > 0 Then

                If Convert.ToString(ds_Check.Tables(0).Rows(0)("cLockFlag")).Trim.ToUpper() = "L" Then
                    ScriptManager.RegisterStartupScript(Me.Page, Me.GetType(), "ActivityLocked", "$(document).ready(function(){pageLoad(); alert('Project Is Locked')});", True)
                    ImageLockUnlock.Attributes.Add("src", "images/Freeze.jpg")
                    Me.ViewState(IsProjectLock) = True
                    Me.hdnLock.Value = True
                    Me.ddlPrinttype.Enabled = True
                    Me.ddlPrinttype.SelectedIndex = 0
                Else
                    ImageLockUnlock.Attributes.Add("src", "images/UnFreeze.jpg")
                    Me.ViewState(IsProjectLock) = False
                    Me.hdnLock.Value = False
                    Me.ddlPrinttype.Enabled = True
                    Me.ddlPrinttype.SelectedIndex = 0
                End If
            Else
                ImageLockUnlock.Attributes.Add("src", "images/UnFreeze.jpg")

                Me.ViewState(IsProjectLock) = False
                Me.hdnLock.Value = False
                Me.ddlPrinttype.Enabled = True
                Me.ddlPrinttype.SelectedIndex = 0
            End If

            If Not FillPeriod(Me.HProjectId.Value, Me.ddlPeriod) Then
                Me.ShowErrorMessage("Problem While getting periods for this project", "")
            End If

            Me.ddlActivityType.Enabled = True
            Me.ddlActivityType.SelectedIndex = 0
            Me.ddlSubject.Items.Clear()
            Me.BtnGeneratePdf.Style.Add("display", "none")

            If Not FillReportType() Then
                Exit Sub
            End If

        Catch ex As Exception
            ShowErrorMessage(ex.Message, "Error While btnSetProject_Click. ", ex)
        End Try
    End Sub

    Protected Sub btnCancel_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnCancel.Click
        Me.ResetPage()
    End Sub

    Protected Sub btnExit_Click(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnExit.Click
        Me.Response.Redirect(System.Configuration.ConfigurationManager.AppSettings("MainPage") + "frmMainPage.aspx")
    End Sub

#End Region

#Region "Fill Functions"

    Private Function FillSubjects() As Boolean
        Dim eStr As String = String.Empty
        Dim ds_Subjects As New DataSet
        Dim wStr As String = String.Empty
        Dim dvData As DataView

        Try
            If ddlActivityType.SelectedIndex = 1 Then
                Me.ddlSubject.Items.Insert(0, "0000")
            Else
                wStr = "iPeriod=1 and vWorkspaceId = '" + Me.HProjectId.Value.Trim() + "' And cStatusIndi <> 'D' order by iMysubjectNo"
                If Not Me.objHelp.GetViewWorkspaceSubjectMst(wStr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, _
                                        ds_Subjects, eStr) Then
                    Throw New Exception(eStr)
                End If
                If Not ds_Subjects.Tables(0) Is Nothing Then

                    For Each dr As DataRow In ds_Subjects.Tables(0).Rows
                        dr("FieldToDisplay") = Convert.ToString(dr("vMySubjectNo")).Trim() + " (" + Convert.ToString(dr("vInitials")).Trim() + ")"
                    Next dr
                    ds_Subjects.AcceptChanges()

                    dvData = ds_Subjects.Tables(0).DefaultView
                    dvData.Sort = "iMysubjectNo"

                    Me.ddlSubject.DataSource = dvData
                    Me.ddlSubject.DataTextField = "FieldToDisplay"
                    Me.ddlSubject.DataValueField = "vSubjectId"
                    Me.ddlSubject.DataBind()

                End If
                For count As Integer = 0 To ddlSubject.Items.Count - 1
                    ddlSubject.Items(count).Attributes.Add("title", ddlSubject.Items(count).Text)
                Next

            End If
            Return True
        Catch ex As Exception
            ShowErrorMessage(ex.Message, "Error While Filling Subjects. ", ex)
            Return False
        Finally
            ds_Subjects.Dispose()
        End Try

    End Function

    Private Function FillPeriod(ByVal VWorkspaceId As String, ByVal dropToFill As DropDownList) As Boolean
        Dim wStr As String = ""
        Dim dsPeriod As New DataSet
        Dim iPeriodNumbers As Integer = 0
        Try
            If VWorkspaceId = "" Then
                Me.ShowErrorMessage("Problem While Getting vWorkspaceId", "")
                FillPeriod = False
                Exit Function
            End If

            wStr = "vWorkspaceId = '" + Me.HProjectId.Value.Trim() + "'"
            If Not objHelp.GetWorkspaceProtocolDetail(wStr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, _
                            dsPeriod, eStr_Retu) Then
                Me.ShowErrorMessage(eStr_Retu, "")
                Exit Function
            End If

            dropToFill.Items.Clear()
            If dsPeriod.Tables(0).Rows.Count > 0 AndAlso dsPeriod.Tables(0).Rows(0).Item("iNoOfPeriods").ToString() <> System.DBNull.Value.ToString() Then
                iPeriodNumbers = dsPeriod.Tables(0).Rows(0).Item("iNoOfPeriods")
            End If

            If iPeriodNumbers > 0 Then
                For count As Integer = 1 To dsPeriod.Tables(0).Rows(0).Item("iNoOfPeriods")
                    dropToFill.Items.Add(count.ToString())
                Next
            End If

            If dropToFill.Items.Count <= 0 Then
                dropToFill.Items.Add(0)
            End If

            If Me.ddlPeriod.Items.Count > 0 Then
                Me.ddlPeriod.Items.Insert(0, "All")
            End If
            FillPeriod = True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "...FillPeriod()", ex)
        End Try
    End Function

    Private Function FillReportType() As Boolean
        Dim dt_Reports As New DataTable
        Dim dt_report As New DataTable
        Try
            If Not GetReportType(dt_Reports) Then
                Return False
            End If
            dt_Reports.DefaultView.Sort = "iSeqNo asc"
            dt_Reports.DefaultView.ToTable()
            Me.gvwReportType.DataSource = dt_Reports.DefaultView.ToTable()
            Me.gvwReportType.DataBind()
            Me.ViewState(vs_reporttype) = dt_Reports.DefaultView.ToTable()
            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.ToString(), "....FillReportType()", ex)
            Return False
        End Try
    End Function

    Public Function fillcheckboxlist() As Boolean
        Dim wstr_AllActivities As String = String.Empty
        Dim estr As String = String.Empty
        Dim ds_AllActivities As New DataSet
        Dim dv_AllActivities As New DataView
        Dim iPeriod As String = " AND iPeriod in("

        Try
            If Me.ViewState(IsProjectLock) = True AndAlso ddlActivityType.Items.Item(2).Selected Then
                Me.ddlPeriod.SelectedIndex = 0
                Me.ddlPeriod.Enabled = False
                For i As Integer = 1 To Me.ddlPeriod.Items.Count - 1
                    iPeriod += i.ToString() + ","
                Next
                iPeriod = iPeriod.Substring(0, iPeriod.LastIndexOf(",")) + ")"
            Else
                If Me.ddlPeriod.SelectedIndex = 0 Then
                    For i As Integer = 1 To Me.ddlPeriod.Items.Count
                        iPeriod += i.ToString() + ","
                    Next
                    iPeriod = iPeriod.Substring(0, iPeriod.LastIndexOf(",")) + ")"
                Else
                    iPeriod += Me.ddlPeriod.Text.ToString + ")"
                End If
            End If
            '*************added for subject specific or generic Activities
            If ddlActivityType.Items.Item(1).Selected Then
                wstr_AllActivities = "vWorkSpaceId='" & Me.HProjectId.Value.Trim() & "'" + iPeriod + "And cSubjectWiseFlag<>'Y' And cstatusIndi <> 'D' And IsNull(vTemplateId,'') <> '0001'   Order by iPeriod ,iNodeid" 'And ccloneFlag='H'" OR  vActivityId in ('1100','1037','1088')"
            ElseIf ddlActivityType.Items.Item(2).Selected Then
                wstr_AllActivities = "vWorkSpaceId='" & Me.HProjectId.Value.Trim() & "'" + iPeriod + "And cSubjectWiseFlag='Y' And cstatusIndi <> 'D' And IsNull(vTemplateId,'') <> '0001' Order by iPeriod ,iNodeid" 'And ccloneFlag='H'" OR  vActivityId in ('1100','1037','1088')"
            ElseIf ddlActivityType.Items.Item(0).Selected Then
                Return False
            End If

            If Not objHelp.GetViewWorkSpaceNodeDetail(wstr_AllActivities, ds_AllActivities, estr) Then
                Me.objCommon.ShowAlert("Error while getting data from workspacenodedetail", Me.Page)
                Exit Function
            End If

            ds_AllActivities.Tables(0).Columns.Add("ChildActivityWithParent&Period")
            ds_AllActivities.AcceptChanges()

            For Each dr As DataRow In ds_AllActivities.Tables(0).Rows
                dr("ChildActivityWithParent&Period") = dr("vNodeDisplayName") + " (Period - " + Convert.ToString(dr("iPeriod")) + ")"
                If dr("iParentNodeId") > 1 Then
                    dr("ChildActivityWithParent&Period") = dr("vNodeDisplayName") + " (" + dr("ParentActivityName") + ") (Period - " + Convert.ToString(dr("iPeriod")) + ")"
                End If
            Next dr
            ds_AllActivities.AcceptChanges()

            dv_AllActivities = ds_AllActivities.Tables(0).DefaultView()
            dv_AllActivities.ToTable().AcceptChanges()
            dv_AllActivities.Sort = "iNodeId"

            Me.gvwActivity.DataSource = dv_AllActivities
            Me.gvwActivity.DataBind()

            Return True

        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "Error While Filling Activities. ", ex)
            Return False
        Finally
            ds_AllActivities.Dispose()
            dv_AllActivities.Dispose()
        End Try

    End Function

    Public Function fillActivityGrid() As Boolean
        Dim wstr_AllActivities As String = String.Empty
        Dim estr As String = String.Empty
        Dim ds_AllActivities As New DataSet
        Dim dv_AllActivities As New DataView
        Dim iPeriod As String = " AND iPeriod in("

        Try
            If Me.ddlPeriod.SelectedIndex = 0 Then
                For i As Integer = 1 To Me.ddlPeriod.Items.Count
                    iPeriod += i.ToString() + ","
                Next
                iPeriod = iPeriod.Substring(0, iPeriod.LastIndexOf(",")) + ")"
            Else
                iPeriod += Me.ddlPeriod.Text.ToString + ")"
            End If
            'End If
            '*************added for subject specific or generic Activities
            If ddlActivityType.Items.Item(1).Selected Then
                wstr_AllActivities = "vWorkSpaceId='" & Me.HProjectId.Value.Trim() & "'" + iPeriod + "And cSubjectWiseFlag<>'Y' And cstatusIndi <> 'D' And IsNull(vTemplateId,'') <> '0001'   Order by iPeriod ,iNodeid" 'And ccloneFlag='H'" OR  vActivityId in ('1100','1037','1088')"
            ElseIf ddlActivityType.Items.Item(2).Selected Then
                wstr_AllActivities = "vWorkSpaceId='" & Me.HProjectId.Value.Trim() & "'" + iPeriod + "And cSubjectWiseFlag='Y' And cstatusIndi <> 'D' And IsNull(vTemplateId,'') <> '0001' Order by iPeriod ,iNodeid" 'And ccloneFlag='H'" OR  vActivityId in ('1100','1037','1088')"
            End If

            If Not objHelp.GetViewWorkSpaceNodeDetail(wstr_AllActivities, ds_AllActivities, estr) Then
                Me.objCommon.ShowAlert("Error while getting data from workspacenodedetail", Me.Page)
                Exit Function
            End If

            ds_AllActivities.Tables(0).Columns.Add("ChildActivityWithParent&Period")
            ds_AllActivities.AcceptChanges()

            For Each dr As DataRow In ds_AllActivities.Tables(0).Rows
                dr("ChildActivityWithParent&Period") = dr("vNodeDisplayName") + " (Period - " + Convert.ToString(dr("iPeriod")) + ")"
                If dr("iParentNodeId") > 1 Then
                    dr("ChildActivityWithParent&Period") = dr("vNodeDisplayName") + " (" + dr("ParentActivityName") + ") (Period - " + Convert.ToString(dr("iPeriod")) + ")"
                End If
            Next dr
            ds_AllActivities.AcceptChanges()

            dv_AllActivities = ds_AllActivities.Tables(0).DefaultView()
            dv_AllActivities.ToTable().AcceptChanges()
            dv_AllActivities.Sort = "iNodeId"
            Me.ViewState(VS_Activity) = dv_AllActivities.ToTable
            Me.gvwActivity.DataSource = dv_AllActivities
            Me.gvwActivity.DataBind()

            Return True

        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "Error While Filling Activities. ", ex)
            Return False
        Finally
            ds_AllActivities.Dispose()
            dv_AllActivities.Dispose()
        End Try
    End Function

    Public Function GetBlankpage(ByRef d1 As Document, ByVal d2 As Document) As Boolean
        Dim bytes As Byte()
        Dim DocRemove As String = String.Empty
        Dim DocRemove_arry() As String
        Try
            bytes = d2.Save()
            Dim oreader As New iTextSharp.text.pdf.PdfReader(bytes)

            Using stream As New MemoryStream()
                Dim reader As New iTextSharp.text.pdf.PdfReader(bytes)
                bytes = Nothing
                Using stamper As New iTextSharp.text.pdf.PdfStamper(reader, stream)
                    For i As Integer = 1 To reader.NumberOfPages
                        Dim sOut = ""
                        Dim its As New iTextSharp.text.pdf.parser.LocationTextExtractionStrategy
                        sOut = iTextSharp.text.pdf.parser.PdfTextExtractor.GetTextFromPage(oreader, i, its)
                        If (sOut = "") Then
                            DocRemove += (i - 1).ToString() + ","
                        End If
                    Next
                End Using
            End Using

            If DocRemove.Length > 0 Then
                DocRemove_arry = DocRemove.Substring(0, DocRemove.Length - 1).Split(",")
                For i As Integer = DocRemove_arry.Length - 1 To 0 Step -1
                    d1.Pages.Remove(DocRemove_arry(i))
                Next
            End If
            Return True

        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "Error While Get Blank Page! ", ex)
            Return False
        Finally
        End Try
    End Function


    Public Function GetBlankpageNew(ByVal d2 As Document) As Boolean
        Dim flag As Boolean = False
        Dim bytes As Byte()
        Dim DocRemove As String = String.Empty
        Dim DocRemove_arry() As String
        Try
            bytes = d2.Save()
            Dim oreader As New iTextSharp.text.pdf.PdfReader(bytes)

            Using stream As New MemoryStream()
                Dim reader As New iTextSharp.text.pdf.PdfReader(bytes)
                bytes = Nothing
                Using stamper As New iTextSharp.text.pdf.PdfStamper(reader, stream)
                    For i As Integer = 1 To reader.NumberOfPages
                        Dim sOut = ""
                        Dim its As New iTextSharp.text.pdf.parser.LocationTextExtractionStrategy
                        sOut = iTextSharp.text.pdf.parser.PdfTextExtractor.GetTextFromPage(oreader, i, its)
                        If (sOut = "") Then
                            DocRemove += (i - 1).ToString() + ","
                        End If
                    Next
                End Using
            End Using

            If DocRemove.Length > 0 Then
                DocRemove_arry = DocRemove.Substring(0, DocRemove.Length - 1).Split(",")
                For i As Integer = DocRemove_arry.Length - 1 To 0 Step -1
                    flag = True
                    'd1.Pages.Remove(DocRemove_arry(i))
                Next
            End If
            d2.Close()
            Return flag
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "Error While Get Blank Page! ", ex)
            Return False
        Finally
        End Try
    End Function

#End Region

#Region "DropDown Selected Index Changed"

    Protected Sub ddlActivityType_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles ddlActivityType.SelectedIndexChanged
        Try
            Me.ddlPeriod.Enabled = True
            Me.ddlSubject.Enabled = True
            Me.ddlSubject.Items.Clear()
            If Not ddlActivityType.SelectedIndex = 0 Then
                Me.dvheadershow.Style.Add("display", "")
                If Not Me.fillActivityGrid() Then
                    Exit Sub
                End If

                If Not Me.FillSubjects() Then
                    Exit Sub
                End If

                If ddlActivityType.SelectedIndex = 2 Then
                    Me.divActivity.Style.Add("Display", "")
                    Me.gvwActivity.Columns(GVA_Rearrange).Visible = False
                    Me.divReport.Style.Add("Display", "")
                Else
                    Me.divActivity.Style.Add("Display", "")
                    Me.gvwActivity.Columns(GVA_Rearrange).Visible = True
                    Me.divReport.Style.Add("Display", "none")
                End If
                Me.dvheadershow.Style.Add("Display", "nonoe")
                If Me.RBLselect.SelectedValue.Trim() = "0" Then
                    If Me.ddlActivityType.SelectedIndex = 2 Then
                        Me.dvheadershow.Style.Add("Display", "")
                    End If
                End If
            Else
                Me.divActivity.Style.Add("Display", "none")
                Me.divReport.Style.Add("Display", "none")
                Me.dvheadershow.Style.Add("display", "none")
            End If

            Me.BtnGeneratePdf.Style.Add("display", "none")
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "Error while ddlActivityType_SelectedIndexChanged", ex)
        End Try
    End Sub

    Protected Sub ddlPeriod_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ddlPeriod.SelectedIndexChanged
        Try
            Me.BtnGeneratePdf.Style.Add("Display", "none")

            If Me.ddlActivityType.SelectedIndex <> 0 Then
                fillActivityGrid()
            End If
        Catch ex As Exception
            ShowErrorMessage(ex.Message, ".....ddlPeriod_SelectedIndexChanged", ex)
        End Try
    End Sub

#End Region

#Region "Grid Events"

    Protected Sub gvwReportType_RowCommand(sender As Object, e As GridViewCommandEventArgs) Handles gvwReportType.RowCommand
    End Sub

    Protected Sub gvwReportType_RowCreated(sender As Object, e As GridViewRowEventArgs) Handles gvwReportType.RowCreated
        e.Row.Cells(GVR_NodeID).Style.Add("Display", "none")
        e.Row.Cells(GVR_ReportId).Style.Add("Display", "none")
    End Sub

    Protected Sub gvwReportType_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles gvwReportType.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.CssClass = "SaveReport"
            e.Row.Cells(GVR_SRNo).Text = e.Row.RowIndex + 1
        End If
    End Sub

    Protected Sub gvwActivity_RowCommand(sender As Object, e As GridViewCommandEventArgs) Handles gvwActivity.RowCommand
    End Sub

    Protected Sub gvwActivity_RowCreated(sender As Object, e As GridViewRowEventArgs) Handles gvwActivity.RowCreated

        e.Row.Cells(GVA_NodeID).Style.Add("Display", "none")

    End Sub

    Protected Sub gvwActivity_RowDataBound(sender As Object, e As GridViewRowEventArgs) Handles gvwActivity.RowDataBound
        If e.Row.RowType = DataControlRowType.DataRow Then
            e.Row.CssClass = "SaveActivity"
            e.Row.Cells(GVA_SRNo).Text = e.Row.RowIndex + 1
        End If
    End Sub

#End Region

#Region "Report for PDF"

    Private Function MsrReport(ByVal SubjectId As String, ByVal ScreeningHdrNo As String, ByVal Sex As String, ByVal RptNo As String, ByVal foldername As String, ByVal SubjectNo As String, ByVal SubjectInitial As String) As Boolean
        Dim wStr = "", ProjectNo = "", SiteId = "", strProfileStatus = "", headercontent As String = String.Empty
        Dim eStr As String = String.Empty
        Dim ds_header As New DataSet
        Dim objelement As Object
        Dim PlaceHolder_msrPrint As New PlaceHolder
        Dim watermarkTextFont As System.Drawing.Font
        Dim watermarkTextElement As TextElement
        Dim Project() As String
        Dim pdfFont As System.Drawing.Font
        Dim d1 As Document
        Dim dvmsr, dvmsrgroup, dvmedex, dvmsrsubgroup As DataView
        Dim dt_group, dt_MedexScreeningHdrDtl, dt_screening, dt_group1, dt_subgroup As New DataTable

        'Dim d2 As Document


        Try
            If ScreeningHdrNo = Nothing Then
                Me.objCommon.ShowAlert("No Screening Assingment has been done for Subject " + SubjectId, Me.Page)
                Return True
            End If

            dt_MedexScreeningHdrDtl = CType(Me.Session(vs_dsMsr), DataTable)
            dvmsr = dt_MedexScreeningHdrDtl.Copy().DefaultView
            dvmsr.Sort = "ScreeningType,iSeqNo asc"
            If Sex.ToUpper.Trim() = "M" Then
                dvmsr.RowFilter = "vWorkSpaceId = '" + Me.HProjectId.Value.ToString() + "' and vSubjectId = '" + SubjectId + "' and nMedexScreeningHdrNo = " + ScreeningHdrNo + " and vMedexGroupcode not in ('00037','00009')"
            Else
                dvmsr.RowFilter = "vWorkSpaceId = '" + Me.HProjectId.Value.ToString() + "' and vSubjectId = '" + SubjectId + "' and nMedexScreeningHdrNo = " + ScreeningHdrNo + " and vMedexGroupcode  <> '00009'"
            End If
            dt_screening = dvmsr.ToTable().Copy()
            If dt_screening.Rows.Count > 0 Then
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<Table width=""100%"" style=""Font -family :'Times New Roman' !important; font-size:12px !important;"" >"))
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<tr ALIGN=LEFT width=""100%"" data-bookmark-enabled=""true"" data-bookmark-level=""1"" data-bookmark-text=""MSR"">"))
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<td style=""display:none;font-family:'Times New Roman'; font-size:12px;"">MSR"))
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("</td>"))
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("</tr>"))
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<tr>"))
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<td>"))
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<Table width=""100%"" cellspacing='0' style=""font-family:'Times New Roman' !Important; font-size:12px; border-collapse: collapse !Important;"">"))
                dt_group = dt_screening.Copy.DefaultView.ToTable(True, "vMedExGroupDesc,vMedExGroupCode".Split(","))
                For Each dr_group As DataRow In dt_group.Rows

                    dvmsrgroup = dvmsr.ToTable().Copy().DefaultView
                    dvmsrgroup.RowFilter = "vMedExGroupCode = '" + dr_group("vMedExGroupCode") + "'"

                    If dvmsrgroup.ToTable.Rows.Count > 0 Then
                        dt_group1 = dvmsrgroup.ToTable
                        PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-inside:avoid;font-family:'Times New Roman' !Important;  font-size:12px; font-weight:bold;"" data-bookmark-enabled=""true"" data-bookmark-level=""2"" data-bookmark-text=""" + dr_group("vMedExGroupDesc").ToString + """>"))
                        PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<td style=""vertical-align:middle; text-align: center; font-family:'Times New Roman' !Important; font-size:12px; font-weight:bold;"" colspan=""2"" >" + dr_group("vMedExGroupDesc").ToString + "</td>"))
                        PlaceHolder_msrPrint.Controls.Add(New LiteralControl("</tr>"))
                        dvmsrsubgroup = dt_group1.DefaultView
                        dt_subgroup = dvmsrsubgroup.ToTable(True, "vMedExSubGroupDesc,vMedExSubGroupCode".Split(","))
                        For Each drsubgroup As DataRow In dt_subgroup.Rows
                            PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #008ecd; page-break-inside:avoid;font-family:'Times New Roman' !Important;  font-size:12px; "" data-bookmark-enabled=""true"" data-bookmark-level=""3"" data-bookmark-text=""" + drsubgroup("vMedExSubGroupDesc").ToString + """>"))
                            PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<td style=""vertical-align:middle; color:#FFFFFF; font-family:'Times New Roman' !Important; font-size:12px; "" colspan=""2"" >" + drsubgroup("vMedExSubGroupDesc").ToString + "</td>"))
                            PlaceHolder_msrPrint.Controls.Add(New LiteralControl("</tr>"))
                            dvmedex = dvmsr.ToTable().Copy().DefaultView
                            dvmedex.RowFilter = "vMedExGroupCode = '" + dr_group("vMedExGroupCode") + "' AND vMedExSubGroupCode='" + drsubgroup("vMedExSubGroupCode") + "'"
                            If dvmedex.ToTable.Rows.Count > 0 Then

                                For Each drmedex As DataRow In dvmedex.ToTable.Rows
                                    PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<tr ALIGN=LEFT style=""page-break-inside:avoid;font-family:'Times New Roman' !Important;  font-size:12px; "">"))
                                    PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<Td width=""60%"" style="" font-family:'Times New Roman' !Important; font-size:12px; vertical-align:middle; border: solid 1px gray !important;"" ALIGN=LEFT>")) 'border:1px solid gray;
                                    PlaceHolder_msrPrint.Controls.Add(New LiteralControl("&nbsp;"))
                                    PlaceHolder_msrPrint.Controls.Add(GetlableWithHistory(drmedex("vMedExDesc") & ": ", drmedex("vMedExGroupCode"), drmedex("vMedExSubGroupCode"), drmedex("vMedExGroupCode").ToString + drmedex("vMedExSubGroupCode").ToString + drmedex("vMedExCode").ToString + "R" + SubjectId.ToString + "SubId" + drmedex("iSeqNo").ToString + drmedex("vMedExCode")))
                                    PlaceHolder_msrPrint.Controls.Add(New LiteralControl("</Td>"))
                                    PlaceHolder_msrPrint.Controls.Add(New LiteralControl("<Td width=""40%"" style=""vertical-align:middle; font-family:'Times New Roman' !Important;  font-size:12px; border: solid 1px gray !important;"" ALIGN=LEFT>")) 'border:1px solid gray;'white-space: nowrap; 
                                    PlaceHolder_msrPrint.Controls.Add(New LiteralControl("&nbsp;&nbsp;"))
                                    objelement = GetObject(drmedex("vMedExType"), drmedex("vMedExCode") + "R" + SubjectId + "MSRPRINT", IIf(drmedex("vDefaultValue") Is System.DBNull.Value, "", drmedex("vDefaultValue")), IIf(drmedex("vMedExValues") Is System.DBNull.Value, "", drmedex("vMedExValues")), _
                                                                                IIf(drmedex("vRefTable") Is System.DBNull.Value, "", drmedex("vRefTable")), _
                                                                                IIf(drmedex("vRefColumn") Is System.DBNull.Value, "", drmedex("vRefColumn")))
                                    PlaceHolder_msrPrint.Controls.Add(objelement)
                                    PlaceHolder_msrPrint.Controls.Add(New LiteralControl("</Td>"))
                                    PlaceHolder_msrPrint.Controls.Add(New LiteralControl("</Tr>"))
                                Next
                            End If
                        Next
                    End If
                Next
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("</Table>"))
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("</Td>"))
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("</Tr>"))
                PlaceHolder_msrPrint.Controls.Add(New LiteralControl("</Table>"))

                Dim html1 As String = RenderControl(PlaceHolder_msrPrint)
                ds_header = CType(Me.ViewState(vs_View_getWorkspaceDetailForHdr), DataSet)

                Dim Path As String = Request.Url.AbsoluteUri.Substring(0, Request.Url.AbsoluteUri.ToString.LastIndexOf("/"))
                Path = Path + "/images/lambda_logo.jpg"

                Project = ds_header.Tables(0).Rows(0)("vProjectNo").ToString().Split(":")
                Dim strLen As Int32 = Project(0).ToString.LastIndexOf("-")
                ProjectNo = Project(0).ToString

                If Me.ViewState(IsProjectCT) AndAlso strLen > 5 Then
                    ProjectNo = Project(0).Substring(0, strLen)
                    strLen = strLen + 1
                    SiteId = Project(0).Substring(strLen)
                End If
                headercontent += "<html><head></head><body>"
                headercontent += "<table style=""margin-top: 2px; margin: auto; border: solid 1px black; width: 100%; font-family: 'Times New Roman'; font-size:12px; ""align=""left"">"
                headercontent += "<tr style="" "">"
                headercontent += "<td valign=""top"">"
                headercontent += "<table style=""font-family: 'Times New Roman'; font-size:12px; "">"
                headercontent += "<tr style="" "">"
                headercontent += "<td colspan=""4"">"
                headercontent += "<Label  for """ + ConfigurationManager.AppSettings.Item("Client").ToString() + """>" + ConfigurationManager.AppSettings.Item("Client").ToString() + "</asp:Label>"
                headercontent += "</td>"
                headercontent += "</tr>"
                headercontent += "<tr style="" "">"
                headercontent += "<td colspan=""4"">"
                headercontent += "Sponsor Name:<Label  for """ + ds_header.Tables(0).Rows(0)("vClientName").ToString() + """>" + ds_header.Tables(0).Rows(0)("vClientName").ToString() + "</asp:Label>"
                headercontent += "</td>"
                headercontent += "</tr >"
                headercontent += "<tr style="" "">"
                headercontent += "<td align=""right"" colspan=""4"" >"
                headercontent += "<h4>"
                headercontent += "MEDICAL SCREENING RECORD FORM</h4>"
                headercontent += "</td>"
                headercontent += "</tr>"
                headercontent += "<tr style="" "">"
                headercontent += "<td align=""right"">Project No:</td>"
                headercontent += "<td style=""border: thin solid #000000;"">"
                headercontent += "<Label  for """ + ProjectNo + """>" + ProjectNo + "</asp:Label>"
                headercontent += "</td>"
                If Me.ViewState(IsProjectCT) = True Then
                    headercontent += "<td align=""right"">Site Id:</td>"
                    headercontent += "<td  style=""border: thin solid #000000;"">"
                    headercontent += "<Label  for """ + SiteId + """>" + SiteId + "</asp:Label>"
                    headercontent += "</td>"
                End If

                If Me.chkprotocolno.Checked = False Then
                    If ds_header.Tables(0).Rows(0).Item("ProtocolNo").ToString.Trim().Length > 0 Then
                        headercontent += "<td align=""right"">Protocol No:</td>"
                        headercontent += "<td  style=""border: thin solid #000000;"">"
                        headercontent += "<Label  for """ + ds_header.Tables(0).Rows(0).Item("ProtocolNo").ToString.Trim() + """>" + ds_header.Tables(0).Rows(0).Item("ProtocolNo").ToString.Trim() + "</asp:Label>"
                        headercontent += "</td>"
                    End If
                End If

                headercontent += "</tr>"
                headercontent += "<tr style="" "">"
                If Me.ViewState(IsProjectCT) Then
                    headercontent += "<td align=""right"">Subject No:</td>"
                    headercontent += "<td style=""border: thin solid #000000;"">"
                    headercontent += "<Label  for """ + SubjectNo + """>" + SubjectNo + "</asp:Label>"
                    headercontent += "</td>"

                    If Me.chkinitial.Checked = False Then
                        headercontent += "<td align=""right"">Subject Initials:</td>"
                        headercontent += "<td  style=""border: thin solid #000000;"">"
                        headercontent += "<Label  for """ + SubjectInitial + """>" + SubjectInitial + "</asp:Label>"
                        headercontent += "</td>"
                    End If

                Else
                    headercontent += "<td align=""right"">Subject No:</td>"
                    headercontent += "<td style=""border: thin solid #000000;"">"
                    headercontent += "<Label  for """ + SubjectNo + """>" + SubjectNo + "</asp:Label>"
                    headercontent += "</td>"
                    If Me.chkinitial.Checked = False Then
                        headercontent += "<td align=""right"">Subject Initials:</td>"
                        headercontent += "<td  style=""border: thin solid #000000;"">"
                        headercontent += "<Label  for """ + SubjectInitial + """>" + SubjectInitial + "</asp:Label>"
                        headercontent += "</td>"
                    End If
                End If
                headercontent += "</tr>"
                headercontent += "</table>"
                headercontent += "</td>"

                If Me.ViewState(vs_sponsorlogofilepath).ToString.Trim() <> "" Then
                    headercontent += "<td valign=""middle"">"
                    headercontent += "<img id=ctl00_CPHLAMBDA_ImgsponsorLogo alt=""" + Me.ViewState(vs_sponsorlogofilepath) + """ src=""" + Me.ViewState(vs_sponsorlogofilepath).ToString() + """right"" alt=""lambda"" style=""width:120px; height:120px;""/>"
                    headercontent += "</td>"
                End If

                headercontent += "<td valign=""middle"">"
                headercontent += "<img id=ctl00_CPHLAMBDA_ImgLogo alt=""" + Path.ToString() + """ src=""" + Path.ToString() + """right"" alt=""lambda"" style=""width:120px; height:120px;""/>"
                headercontent += "</td>"
                headercontent += "</tr>"
                headercontent += "</table>"
                headercontent += "</body></html>"
                '=========================================================================
                pdfFont = New System.Drawing.Font("Times New Roman", 12, FontStyle.Bold, GraphicsUnit.Point)

                '======================================htmltopdf======================================
                Dim pdfconverter As HtmlToPdfConverter = New HtmlToPdfConverter()
                pdfconverter.LicenseKey = "dfvo+uv66OPj6vrr6PTq+unr9Ovo9OPj4+P66g=="
                pdfconverter.PdfDocumentOptions.AvoidImageBreak = True
                pdfconverter.PdfDocumentOptions.AvoidTextBreak = False
                pdfconverter.PdfDocumentOptions.PdfPageSize = PdfPageSize.A4
                pdfconverter.PdfDocumentOptions.ShowHeader = True
                pdfconverter.PdfDocumentOptions.ShowFooter = True
                pdfconverter.PdfHeaderOptions.HeaderHeight = 120
                pdfconverter.PdfFooterOptions.FooterHeight = 40
                pdfconverter.HtmlViewerWidth = 662     ''Previous 750,647
                pdfconverter.PdfDocumentOptions.FitWidth = False
                pdfconverter.PdfDocumentOptions.EmbedFonts = True
                pdfconverter.PdfDocumentOptions.JpegCompressionEnabled = True
                pdfconverter.PdfDocumentOptions.JpegCompressionLevel = 0
                pdfconverter.PdfDocumentOptions.PdfCompressionLevel = PdfCompressionLevel.Best
                pdfconverter.PdfDocumentOptions.StretchToFit = True
                pdfconverter.PdfDocumentOptions.LeftMargin = 72
                pdfconverter.PdfDocumentOptions.RightMargin = 27
                pdfconverter.PdfDocumentOptions.TopMargin = 27
                Dim level1TextStyle As String = "font-family:'Times New Roman'; font-size:16px; text-decoration: underline;"
                pdfconverter.TableOfContentsOptions.SetItemStyle(1, level1TextStyle)
                pdfconverter.TableOfContentsOptions.SetItemStyle(2, level1TextStyle)
                pdfconverter.TableOfContentsOptions.SetItemStyle(3, level1TextStyle)
                pdfconverter.TableOfContentsOptions.AutoTocItemsEnabled = False

                Dim level1PageNumberStyle As String = "padding-right:3px; font-family:'Times New Roman'; font-size:16px; text-decoration: underline; font-weight:bold"
                pdfconverter.TableOfContentsOptions.SetPageNumberStyle(1, level1PageNumberStyle)
                pdfconverter.TableOfContentsOptions.SetPageNumberStyle(2, level1PageNumberStyle)
                pdfconverter.TableOfContentsOptions.SetPageNumberStyle(3, level1PageNumberStyle)

                'd2 = pdfconverter.ConvertHtmlToPdfDocumentObject(html1, String.Empty) ' added by prayag for blank page

                pdfconverter.PdfFooterOptions.PageNumberingStartIndex = 0
                pdfconverter.PdfFooterOptions.AddElement(New LineElement(0, 0, pdfconverter.PdfDocumentOptions.PdfPageSize.Width - pdfconverter.PdfDocumentOptions.LeftMargin - pdfconverter.PdfDocumentOptions.RightMargin, 0))
                Dim footerText As New TextElement(0, 3, "*This is an electronically authenticated report.                                            Page &p; of &P;                       ", New Font(New FontFamily("Times New Roman"), 12, GraphicsUnit.Point))
                footerText.TextAlign = HorizontalTextAlign.Right
                footerText.ForeColor = Color.Navy
                footerText.EmbedSysFont = True
                Dim Header1 As New HtmlToPdfElement(headercontent, Nothing)
                Header1.HtmlViewerWidth = 662     ''Previous 750
                Header1.FitWidth = False
                pdfconverter.PdfHeaderOptions.AddElement(Header1)
                pdfconverter.PdfFooterOptions.AddElement(footerText)
                pdfconverter.PdfViewerPreferences.PageLayout = ViewerPageLayout.SinglePage
                pdfconverter.PdfViewerPreferences.PageMode = ViewerPageMode.UseOutlines

                d1 = pdfconverter.ConvertHtmlToPdfDocumentObject(html1, String.Empty)
                BtnGeneratePdf.Enabled = False

                If Me.ddlPrinttype.SelectedValue.ToUpper() = "DRAFT" Then
                    watermarkTextFont = New System.Drawing.Font("Times New Roman", 75, FontStyle.Bold, GraphicsUnit.Point)
                    watermarkTextElement = New TextElement(50, 250, strProfileStatus + " Draft Copy", watermarkTextFont)
                    watermarkTextElement.ForeColor = System.Drawing.Color.Blue
                    watermarkTextElement.Opacity = 20
                    watermarkTextElement.TextAngle = 45
                    For Each PdfPage As Winnovative.PdfPage In d1.Pages
                        PdfPage.AddElement(watermarkTextElement)
                    Next
                End If

                ' added by prayag to check blank page  "Commented By Hiren Rami"
                'If Not GetBlankpage(d1, d2) Then
                '    objCommon.ShowAlert("Error While Removing Blank Page.Please Generate Report Again! ", Me.Page)
                '    Exit Try
                'End If
                ' upto here

                d1.Save(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\RptMerge\" + RptNo + ".pdf")
                d1.AutoCloseAppendedDocs = True
                d1.Close()
            Else
                Return True
            End If
            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "....MsrReport", ex)
            Return False
        End Try
    End Function

    Private Function LabReport(ByVal nSampleID As Integer, ByVal rptNo As String, ByVal foldername As String, ByVal vSubjectId As String) As Boolean
        Dim Dv_Report As New DataView
        Dim dv_LabReport As New DataView
        Dim dv_Revise As New DataView
        Dim eStr As String = ""
        Dim wStr As String = ""
        Dim dr As DataRow
        Dim fsPhoto As FileStream
        Dim br As BinaryReader
        Dim bm As New Bitmap(400, 140)
        Dim g As Graphics
        Dim str As [String] = Nothing
        Dim BarcodeText As String = ""
        Dim xCoOrdinate As Integer = 4
        Dim yCoOrdinate As Integer = 25
        Dim dt_Report As New DataTable
        Dim ds_LabReport As New DataSet
        Dim ds_ReviseReport As New DataSet
        Dim BarcodeImage As New BarcodeGenerator
        Dim strbarcode As String = ""
        Dim Visit As String = ""
        Try
            strbarcode = DateTime.Now.ToString("ddMMyyyyhhmmss")
            wStr += " isnull(nSampleID,'') = " & nSampleID
            If Not objHelp.View_SubjectLabRptDtl(wStr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, ds_LabReport, eStr) Then
                Throw New Exception("Error While Getting Data From View_SubjectLabRptDtl" + eStr)
            End If
            If ds_LabReport.Tables(0).Rows.Count > 0 Then
                ds_LabReport.AcceptChanges()

                Dv_Report = ds_LabReport.Tables(0).DefaultView
                Visit = Dv_Report.ToTable.Rows(0)("vNodeDisplayName").ToString()
                dt_Report = Dv_Report.ToTable()
                If dt_Report.Rows.Count > 0 Then
                    BarcodeImage.Width = 470
                    BarcodeImage.Height = 80
                    BarcodeText = Dv_Report.ToTable.Rows(0)("vSampleID").ToString()
                    g = Graphics.FromImage(bm)
                    g.Clear(Color.White)
                    str = BarcodeImage.DrawCode128(g, BarcodeText, "", xCoOrdinate, yCoOrdinate)
                    If str <> "" Then
                        Throw New Exception("Error While Generating Barcode")
                    End If
                    bm.Save(Server.MapPath("Reports") + "\" + strbarcode + ".jpg", System.Drawing.Imaging.ImageFormat.Jpeg) '  ImageFormat.Jpeg
                    fsPhoto = New FileStream(Server.MapPath("Reports") + "\" + strbarcode + ".jpg", FileMode.Open)
                    br = New BinaryReader(fsPhoto)
                    Dim imgbyte(fsPhoto.Length) As Byte
                    imgbyte = br.ReadBytes(Convert.ToInt32((fsPhoto.Length)))
                    For Each dr In dt_Report.Rows
                        dr("BarCode") = imgbyte
                    Next
                    dt_Report.AcceptChanges()
                    br.Close()
                    fsPhoto.Close()
                    System.IO.File.Delete(Server.MapPath("Reports") + "\" + strbarcode + ".jpg")

                    dv_LabReport = dt_Report.DefaultView
                    dv_LabReport.Sort = "vMedExGroupCode,iseqno"

                    If dv_LabReport.ToTable.Rows.Count > 0 Then
                        rDocument.Load(Server.MapPath("Reports") + "\RptReviewLabReport.rpt")
                    End If
                    rDocument.SetDataSource(dv_LabReport.ToTable)
                    rDocument.SummaryInfo.ReportTitle = "Lab Report  " + "(" + Visit + ")"

                    If Not ExportToPDF(rptNo, , foldername, True) Then
                        Return False
                    End If

                    rptNo = Convert.ToString(rptNo.Split(".")(0)) + "." + Convert.ToString(rptNo.Split(".")(1) + 1)

                    If Not LabSubReport(dv_LabReport.ToTable().Copy(), rptNo, foldername) Then
                        Return False
                    End If

                End If
            End If
            wStr = " vSubjectId = '" + vSubjectId.ToString() + "' AND nsampleid = " + nSampleID.ToString()
            If Not objHelp.View_SampleMedexRangeDtlForRevise(wStr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, ds_ReviseReport, eStr) Then
                Throw New Exception("Error While Getting Data From View_SampleMedexRangeDtlForRevise" + eStr)
            End If

            If ds_ReviseReport.Tables(0).Rows.Count > 0 Then
                Dv_Report = ds_ReviseReport.Tables(0).DefaultView
                dt_Report = Dv_Report.ToTable()
                If dt_Report.Rows.Count > 0 Then
                    BarcodeImage.Width = 470
                    BarcodeImage.Height = 80
                    BarcodeText = Dv_Report.ToTable.Rows(0)("vSampleID").ToString()
                    g = Graphics.FromImage(bm)
                    g.Clear(Color.White)
                    str = BarcodeImage.DrawCode128(g, BarcodeText, "", xCoOrdinate, yCoOrdinate)
                    If str <> "" Then
                        Throw New Exception("Error While Generating Barcode")
                    End If
                    bm.Save(Server.MapPath("Reports") + "\" + strbarcode + ".jpg", System.Drawing.Imaging.ImageFormat.Jpeg) '  ImageFormat.Jpeg
                    fsPhoto = New FileStream(Server.MapPath("Reports") + "\" + strbarcode + ".jpg", FileMode.Open)
                    br = New BinaryReader(fsPhoto)
                    Dim imgbyte(fsPhoto.Length) As Byte
                    imgbyte = br.ReadBytes(Convert.ToInt32((fsPhoto.Length)))
                    For Each dr In dt_Report.Rows
                        dr("BarCode") = imgbyte
                    Next
                    dt_Report.AcceptChanges()
                    br.Close()
                    fsPhoto.Close()
                    System.IO.File.Delete(Server.MapPath("Reports") + "\" + strbarcode + ".jpg")
                    dv_Revise = dt_Report.DefaultView
                    For Each dr_vSampleId As DataRow In dv_Revise.ToTable(True, "vSampleId".Split(",")).Rows
                        dv_Revise = dt_Report.DefaultView
                        dv_Revise.RowFilter = "vSampleId =" & dr_vSampleId("vSampleId")
                        dv_Revise.Sort = "vSampleId,vMedExGroupCode,iseqno"
                        ''***************As per Previous Records***********************

                        rDocument.Load(Server.MapPath("Reports") + "\RptOldLabReport.rpt")
                        Dim dtTemp As DataTable
                        dtTemp = dv_Revise.ToTable
                        For Each drNew As DataRow In dtTemp.Rows
                            drNew("vSampleId") = drNew("vSampleId").ToString.Remove(drNew("vSampleId").ToString.Length - 1)
                        Next
                        dtTemp.AcceptChanges()
                        rDocument.SetDataSource(dtTemp)
                        rDocument.SummaryInfo.ReportTitle = "Revised Lab Report"
                        rptNo = Convert.ToString(rptNo.Split(".")(0)) + "." + Convert.ToString(rptNo.Split(".")(1) + 1)
                        If Not ExportToPDF(rptNo, , foldername, True) Then
                            Return False
                        End If
                    Next
                End If
            End If

            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "....LabReport", ex)
            Return False
        End Try
    End Function

    Private Function LabSubReport(ByVal dt_Subreport As DataTable, ByVal rptNo As String, ByVal foldername As String) As Boolean
        Dim dv_checksubreport As DataView
        Dim dv_checkdeshdata As DataView
        Dim icount As Integer = 0
        Try
            dv_checksubreport = dt_Subreport.Copy().DefaultView
            dv_checksubreport.RowFilter = " vMedexCode in ('02170','02178','02179')"
            If dv_checksubreport.ToTable().Rows.Count > 0 Then
                dv_checkdeshdata = dv_checksubreport.ToTable().DefaultView
                dv_checkdeshdata.RowFilter = " vMedexResult like '%-%'"
                If dv_checkdeshdata.ToTable().Rows.Count > 0 Then
                    For Each dr As DataRow In dv_checkdeshdata.ToTable.Rows
                        If IsNumeric(dr("vMedexResult").ToString().Split("-")(1)) Then
                            If Convert.ToDecimal(dr("vMedexResult").ToString().Split("-")(1)).ToString() < dr("vLowRange") Or Convert.ToDecimal(dr("vMedexResult").ToString().Split("-")(1)).ToString() > dr("vHighRange") Then
                                icount = 1
                                Exit For
                            Else
                                icount = 0
                            End If
                        End If
                    Next
                End If
            Else
                dv_checksubreport = dt_Subreport.Copy().DefaultView
                dv_checksubreport.RowFilter = " Isnull(vMedexResult,'') <> '' OR Isnull(vLowRange,'') <> ''"
                If dv_checksubreport.ToTable.Rows.Count > 0 Then

                    For Each dr As DataRow In dv_checksubreport.ToTable.Rows
                        If IsNumeric(dr("vMedexResult")) AndAlso IsNumeric(dr("vLowRange")) AndAlso IsNumeric(dr("vHighRange")) Then
                            If Convert.ToDecimal(dr("vMedexResult")) < Convert.ToDecimal(dr("vLowRange")) Or Convert.ToDecimal(dr("vMedexResult")) > Convert.ToDecimal(dr("vHighRange")) Then
                                icount = 1
                                Exit For
                            Else
                                icount = 0
                            End If
                        End If
                    Next
                End If
            End If

            If icount = 0 Then
                Return True
            End If
            rDocument.Load(Server.MapPath("Reports") + "\RptReviewLabSubReport.rpt")
            rDocument.SetDataSource(dt_Subreport.Copy())
            rDocument.SummaryInfo.ReportTitle = "Out of Summary Report"
            If Not ExportToPDF(rptNo, , foldername, True) Then
                Return False
            End If

            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "....LabReport", ex)
            Return False
        End Try
    End Function

    Private Function CRFReport(ByVal rptno As String, ByVal SubjectId As String, ByVal foldername As String, ByVal SubjectNo As String, ByVal SubjectInitial As String) As Boolean
        Dim Wstr = "", Wstr_nodeid = "", PrevSubGroupCodes = "", headercontent = "", NodeDisplayName = "", Prev_SubjectId = "", SubjectName = "", NodeIds = "", strProfileStatus = "", SiteId = "", ProjectNo As String = ""
        Dim ds_CRFHdrDtlSubDtl, ds_header As New DataSet
        Dim PlaceHolder_crfPrint As New PlaceHolder
        Dim dt, dt_MedExMst, dt_MedexGroup, dtNodeID, dtPeriod, dtParentActivity, dtMain, dtData, dt_Subject As New DataTable
        Dim dv, dv_MedexGrp, dvMain, dvSort, dvsubject As New DataView
        Dim dr, drGroup As DataRow
        Dim objelement As Object
        Dim CntSubGroup = 0, Nodeid = 0, Index = 0, SubjectIndex = 0, MedIndex = 0, Identifier = 0, ParentNodeId = 0, PreviousParentNodeId = 0, Period = 0, PreviousPeriod As Integer = 0
        Dim PreviousNodeID As Integer = 1
        Dim pdfFont As System.Drawing.Font
        Dim d1 As Document
        Dim watermarkTextFont As System.Drawing.Font
        Dim watermarkTextElement As TextElement
        Dim Project() As String
        'Dim d2 As Document
        Dim DocRemove As String = String.Empty


        Try

            Wstr = "vWorkSpaceId = '" & Me.HProjectId.Value.Trim() & "' And iNodeId in("
            If Me.ViewState(IsProjectLock) AndAlso Me.ddlActivityType.SelectedIndex = 2 Then
                For Each row As GridViewRow In gvwActivity.Rows
                    If row.RowType = DataControlRowType.DataRow Then
                        Wstr_nodeid += row.Cells(GVA_NodeID).Text.ToString() + ","
                    End If
                Next
            Else
                For Each row As GridViewRow In gvwActivity.Rows
                    If row.RowType = DataControlRowType.DataRow Then
                        If CType(row.FindControl("chkSelect"), HtmlInputCheckBox).Checked Then
                            Wstr_nodeid += row.Cells(GVA_NodeID).Text.ToString() + ","
                        End If
                    End If
                Next
            End If

            If Wstr_nodeid.Contains(",") Then
                Wstr_nodeid = Wstr_nodeid.Substring(0, Wstr_nodeid.LastIndexOf(","))
            End If
            Wstr += Wstr_nodeid + ")"

            If SubjectId.Trim() = "" Then

                Wstr += " And vMedExType <> 'Import' "
                Wstr += " order by iPeriod,iNodeNo,iNodeId,vMedExGroupCode,vMedExSubGroupCode,iSeqNo,RepetitionNo"   'For Lambda

                If Not Me.objHelp.View_BlankCRF(Wstr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, ds_CRFHdrDtlSubDtl, eStr_Retu) Then
                    Throw New Exception(eStr_Retu)
                End If
            Else
                Wstr += " ANd cActiveFlag <> 'N' "
                Wstr += " And vSubjectId in ('" + SubjectId + "')"
                Wstr += " Order by iPeriod,iNodeNo,iNodeId,vMedExGroupCode,vMedExSubGroupCode,iSeqNo,View_CRFHdrDtlSubDtl_Print.iRepeatNo"
                Wstr += " OPTION (MAXDOP 1)"

                objHelp.Timeout = -1
                If Not Me.objHelp.View_CRFHdrDtlSubDtl_Print(Wstr, "*,DENSE_RANK() OVER(PARTITION BY nCRFHdrNo,vActivityId,vSubjectId ORDER BY nCRFHdrNo,vActivityId,vSubjectId,iRepeatNo) as [RepetitionNo] ", ds_CRFHdrDtlSubDtl, eStr_Retu) Then
                    Throw New Exception(eStr_Retu)
                End If
            End If

            If ds_CRFHdrDtlSubDtl.Tables(0).Rows.Count > 1 Then

                dvsubject = ds_CRFHdrDtlSubDtl.Tables(0).Copy.DefaultView.ToTable(True, "iParentNodeId,ParentActivityName,ParentNodeNo".Split(",")).DefaultView
                dvsubject.Sort = " iParentNodeId asc"

                If dvsubject.ToTable.Rows.Count = 1 Then
                    If dvsubject.ToTable.Rows(0)("iParentNodeId").ToString() = "1" Then
                        Return True
                    End If
                ElseIf dvsubject.ToTable.Rows.Count = 0 Then
                    Return True
                End If
                dt_Subject = ds_CRFHdrDtlSubDtl.Tables(0).Copy.DefaultView.ToTable(True, "vSubjectId,vSubjectName".Split(","))
                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Table style="" Width:100%; Font -family :'Times New Roman' !important;"">"))
                For Each dr_Subject In dt_Subject.Rows
                    SubjectIndex += 1
                    SubjectId = Convert.ToString(dr_Subject("vSubjectId")).Trim()
                    SubjectName = Convert.ToString(dr_Subject("vSubjectName")).Trim()
                    dtPeriod = ds_CRFHdrDtlSubDtl.Tables(0).Copy.DefaultView.ToTable(True, "iPeriod".Split(","))
                    Period = 0
                    PreviousPeriod = 0
                    For Each drPeriod As DataRow In dtPeriod.Rows
                        Period = drPeriod("iPeriod")
                        PreviousPeriod = drPeriod("iPeriod")
                        dvMain = ds_CRFHdrDtlSubDtl.Tables(0).Copy.DefaultView
                        dvMain.RowFilter = "iPeriod = " + Period.ToString()
                        dvSort = dvMain.ToTable.Copy.DefaultView.ToTable(True, "iParentNodeId,ParentActivityName,ParentNodeNo".Split(",")).DefaultView
                        dvSort.RowFilter = "isnull(iParentNodeId,0) <> 0"
                        dvSort.Sort = "ParentNodeNo asc"
                        dtParentActivity = dvSort.ToTable()
                        ParentNodeId = 0
                        PreviousParentNodeId = 0
                        For Each drParentActivity As DataRow In dtParentActivity.Rows
                            ParentNodeId = drParentActivity("iParentNodeID")
                            If ParentNodeId = 1 Then
                                Continue For
                            End If
                            If ParentNodeId <> PreviousParentNodeId AndAlso ParentNodeId <> 0 Then
                                If ParentNodeId <> 1 Then
                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Tr data-bookmark-enabled=""true"" data-bookmark-level=""1"" data-bookmark-text=""" + Convert.ToString(drParentActivity("ParentActivityName")).Trim() + """ width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #FFB895; page-break-inside:avoid;"">")) '008ecd''redish orange for parent activity
                                    If PreviousParentNodeId = 0 Then
                                        PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle; text-align: center; font-family:'Times New Roman'; font-size:12px; font-weight:bold; "">")) 'white-space: nowrap; 
                                    Else
                                        PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle; text-align: center; font-family:'Times New Roman'; font-size:12px; font-weight:bold; "">")) 'white-space: nowrap; 
                                    End If
                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("&nbsp;"))
                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl(Convert.ToString(drParentActivity("ParentActivityName")).Trim()))
                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Td>"))
                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Tr>"))
                                End If
                            End If
                            PreviousParentNodeId = drParentActivity("iParentNodeID")
                            dvMain.RowFilter = "(iPeriod = " + Period.ToString() + " And iNodeId = " + ParentNodeId.ToString() + ") Or (iPeriod = " + Period.ToString() + " And iParentNodeId = " + ParentNodeId.ToString() + ")"
                            dtMain = dvMain.ToTable().Copy()
                            dvSort = Nothing
                            dvSort = dtMain.Copy.DefaultView.ToTable(True, "iNodeID,vNodeDisplayName,iNodeNo,ParentNodeNo".Split(",")).DefaultView
                            dvSort.Sort = "ParentNodeNo,iNodeNo asc"
                            dtNodeID = dvSort.ToTable()
                            Nodeid = 0
                            PreviousNodeID = 0
                            For Each drNode In dtNodeID.Rows
                                NodeIds += Convert.ToString(drNode("iNodeID")).Trim() + ","
                                Nodeid = drNode("iNodeID")
                                NodeDisplayName = Convert.ToString(drNode("vNodeDisplayName")).Trim()
                                dv_MedexGrp = dtMain.Copy.DefaultView
                                dv_MedexGrp.RowFilter = "iNodeID = " + Nodeid.ToString() ' + " And vSubjectId = '" + SubjectId + "'"
                                Dim dt_Repeatition As DataTable
                                dt_Repeatition = dv_MedexGrp.ToTable(True, "RepetitionNo".Split(","))
                                Dim PreviousRepeatition As Integer = 0
                                For Each drRepeatition As DataRow In dt_Repeatition.Rows
                                    dv_MedexGrp.RowFilter = "RepetitionNo = " + Convert.ToString(drRepeatition("RepetitionNo")).ToString()
                                    dt_MedexGroup = dv_MedexGrp.ToTable(True, "vMedExGroupCode".Split(","))
                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Tr ALIGN=LEFT>"))
                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Td style=""vertical-align:top;"">")) 'white-space: nowrap; 
                                    If PreviousRepeatition <> drRepeatition("RepetitionNo") Then
                                        If (PreviousNodeID <> Nodeid) Or (PreviousNodeID = Nodeid AndAlso PreviousRepeatition <> drRepeatition("RepetitionNo")) Then
                                            PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Table width=""100%"" cellspacing='0' style=""font-family:'Times New Roman' !Important; font-size:12px; border-collapse: collapse !Important;"">")) ''blue line of activity
                                            PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Tr data-bookmark-enabled=""true"" data-bookmark-level=""2""  data-bookmark-text=""" + IIf(drRepeatition("RepetitionNo") > 1, NodeDisplayName + " , Repetition-" + Convert.ToString(drRepeatition("RepetitionNo")), NodeDisplayName) + """ width=""100%"" color:#FFFFFF; ALIGN=LEFT style=""BACKGROUND-COLOR: #008ecd; page-break-inside:avoid;"">")) '008ecd
                                            If ParentNodeId = 1 Then
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle;color:#FFFFFF;  width: 80%;"">")) 'white-space: nowrap; 
                                            Else
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Td style=""vertical-align:middle;color:#FFFFFF;  width: 80%;"">")) 'white-space: nowrap; 
                                            End If
                                            dvMain.RowFilter = "iNodeId = " + Nodeid.ToString()
                                            dtData = dvMain.ToTable()
                                            PlaceHolder_crfPrint.Controls.Add(New LiteralControl("&nbsp;"))
                                            If drRepeatition("RepetitionNo") > 1 Then
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl(NodeDisplayName + ", Repetition: " + Convert.ToString(drRepeatition("RepetitionNo"))))
                                            Else
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl(NodeDisplayName))
                                            End If
                                            If RBLProjecttype.SelectedIndex = 1 Then
                                                If dtData.Rows.Count > 0 Then
                                                    If dtData.Rows(0)("vMedExGroupCDISCValue").ToString() <> "" Then
                                                        PlaceHolder_crfPrint.Controls.Add(GetMedExGroupCDISC(IIf(dtData.Rows(0)("vMedExGroupCDISCValue") Is System.DBNull.Value, " ", dtData.Rows(0)("vMedExGroupCDISCValue")), dtData.Rows(0)("vMedExGroupCode"), dtData.Rows(0)("vMedExSubGroupCode"), dtData.Rows(0)("vMedExGroupCode") + dtData.Rows(0)("vMedExSubGroupCode") + dtData.Rows(0)("vMedExGroupCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + Identifier.ToString()))
                                                    End If
                                                End If
                                            End If
                                            PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Td>"))
                                            If Not Me.Session(S_ScopeNo) = Scope_ClinicalTrial Then
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Td align=""right""  style=""color:#FFFFFF ;width: 20%"">")) ''style=""vertical-align:right;""
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("&nbsp;Period: "))
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl(Period.ToString()))
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Td>"))
                                            End If
                                            PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Tr>")) ''activty row done
                                            PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Table>"))
                                        End If
                                    End If
                                    PreviousRepeatition = drRepeatition("RepetitionNo")
                                    PreviousNodeID = drNode("iNodeID")
                                    Index = 0
                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Table width=""100%"" cellspacing='0' style=""font-family:'Times New Roman' !Important; font-size:12px; border-collapse: collapse !Important;"">")) 'Added on 30-01-2010 to fix the size of display
                                    For Each drGroup In dt_MedexGroup.Rows
                                        Index += 1
                                        dt = New DataTable
                                        dt_MedExMst = New DataTable
                                        dt = dtMain.Copy()
                                        dv = New DataView
                                        dv = dt.DefaultView
                                        dv.RowFilter = "iNodeID = " + Nodeid.ToString() + " And vMedExGroupCode='" & drGroup("vMedExGroupCode").ToString.Trim() & "'" + " And vSubjectId = '" + SubjectId + "' And RepetitionNo = " + Convert.ToString(drRepeatition("RepetitionNo"))
                                        dv.Sort = "iSeqNo asc"
                                        dt_MedExMst = dv.ToTable()
                                        MedIndex = 0
                                        For Each dr In dt_MedExMst.Rows
                                            MedIndex += 1
                                            If PrevSubGroupCodes = "" Or PrevSubGroupCodes <> dr("vMedExSubGroupCode") Then
                                                If Convert.ToString(dr("vMedExSubGroupCode")).Trim() <> "0000" Then 'Added for default SubGroup
                                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Tr width=""100%"" ALIGN=LEFT style=""BACKGROUND-COLOR: #ffcc66; page-break-inside:avoid;"">")) 'ffcc66
                                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Td colspan=""2"" style=""vertical-align:middle; font-family:'Times New Roman' !Important; border: solid 1px gray !important; font-size:12px;"">"))
                                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("&nbsp;"))
                                                    PlaceHolder_crfPrint.Controls.Add(Getlable(dr("vMedExSubGroupDesc").ToString.Trim(), dr("vMedExSubGroupCode") + CntSubGroup.ToString.Trim() + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString()))
                                                    CntSubGroup += 1
                                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Td>"))
                                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Tr>"))
                                                End If
                                            End If
                                            PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Tr ALIGN=LEFT style=""page-break-inside:avoid;"">"))
                                            PrevSubGroupCodes = dr("vMedExSubGroupCode")
                                            If Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "LABEL" Then
                                                Identifier += 1
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Td width=""60%"" style=""  font-family:'Times New Roman' !Important; font-size:12px;  vertical-align:middle; border: solid 1px gray !important; "" ALIGN=LEFT>")) 'border:1px solid gray;
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("&nbsp;"))
                                                PlaceHolder_crfPrint.Controls.Add(GetlableWithHistory(dr("vMedExDesc") & ": ", dr("vMedExGroupCode"), dr("vMedExSubGroupCode"), dr("vMedExGroupCode") + dr("vMedExSubGroupCode") + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + Identifier.ToString()))
                                                If RBLProjecttype.SelectedIndex = 1 Then
                                                    PlaceHolder_crfPrint.Controls.Add(GetCDISC(IIf(dr("vCDISCValues") Is System.DBNull.Value, " ", dr("vCDISCValues")), dr("vMedExGroupCode"), dr("vMedExSubGroupCode"), dr("vMedExGroupCode") + dr("vMedExSubGroupCode") + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + Identifier.ToString()))
                                                End If
                                                If chkDataType.Checked = True Then
                                                    Dim str() As String
                                                    If Not dr("vValidationType") Is System.DBNull.Value AndAlso Convert.ToString(dr("vValidationType")).Trim() <> "" Then
                                                        If Convert.ToString(dr("vMedExType")).ToUpper() = "TEXTBOX" Or Convert.ToString(dr("vMedExType")).ToUpper() = "TEXTAREA" Then
                                                            PlaceMedEx.Controls.Add(New LiteralControl("&nbsp;&nbsp;&nbsp;"))
                                                            str = Convert.ToString(dr("vValidationType")).Split(",")
                                                            If ((str.Length = 2 And str(1) <> "")) Then
                                                                If (Convert.ToString(str(0)).Contains("IN")) Then
                                                                    PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("IN", "I") + " (" + str(1) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                                ElseIf (Convert.ToString(str(0)).Contains("AL")) Then
                                                                    PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("AL", "A") + " (" + str(1) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                                Else
                                                                    PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("AL", "A") + " (" + str(1) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                                End If

                                                            ElseIf ((str(0) = "NU" And str.Length = 3)) Then
                                                                PlaceMedEx.Controls.Add(GetlableForDatatype("[ " + Convert.ToString(str(0)).Replace("NU", "N") + " (" + str(1) + "," + str(2) + ") " + " ]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                            Else
                                                                'PlaceMedEx.Controls.Add(GetlableForDatatype("[" + Convert.ToString(str(0)).Replace("IN", "I") + "]", "ValidationType" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                                            End If

                                                        End If
                                                    End If
                                                End If

                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Td>"))
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Td width=""40%"" style=""vertical-align:middle; font-family:'Times New Roman' !Important; font-size:12px; border: solid 1px gray !important;"" ALIGN=LEFT>")) 'border:1px solid gray;'white-space: nowrap; 
                                            Else
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("<Td colspan=""2"" style="" !important; vertical-align:middle; border:1px solid gray !Important;"" ALIGN=LEFT>"))
                                            End If
                                            If Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "LABEL" And _
                                                        Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "FILE" And _
                                                        Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "RADIO" And _
                                                        Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "CHECKBOX" And _
                                                Convert.ToString(dr("vMedExType")).Trim.ToUpper() <> "COMBOBOX" Then
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("&nbsp;&nbsp;"))
                                            End If
                                            MainIdentifier += 1
                                            objelement = GetObject(dr("vMedExType"), dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString(), dr("vMedExValues"), IIf(dr("vDefaultValue") Is System.DBNull.Value, "", dr("vDefaultValue")), _
                                                                        IIf(dr("vRefTable") Is System.DBNull.Value, "", dr("vRefTable")), _
                                                                        IIf(dr("vRefColumn") Is System.DBNull.Value, "", dr("vRefColumn")))
                                            PlaceHolder_crfPrint.Controls.Add(objelement)
                                            If Not dr("vUOM") Is System.DBNull.Value AndAlso Convert.ToString(dr("vUOM")).Trim() <> "" Then
                                                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("&nbsp;&nbsp;&nbsp;"))
                                                PlaceHolder_crfPrint.Controls.Add(Getlable(dr("vUOM"), "UOM" + dr("vMedExCode") + Nodeid.ToString() + "R" + Index.ToString() + SubjectIndex.ToString() + MedIndex.ToString() + MainIdentifier.ToString()))
                                            End If
                                            PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Td>"))
                                            PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Tr>"))
                                            PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Tr>"))
                                        Next dr
                                    Next drGroup
                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Table>"))
                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Td>"))
                                    PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Tr>"))
                                Next drRepeatition
                            Next drNode
                        Next drParentActivity
                    Next drPeriod
                    Prev_SubjectId = Convert.ToString(dr_Subject("vSubjectId")).Trim()
                Next dr_Subject

                PlaceHolder_crfPrint.Controls.Add(New LiteralControl("</Table>"))

                Dim html1 As String = RenderControl(PlaceHolder_crfPrint)
                ds_header = CType(Me.ViewState(vs_View_getWorkspaceDetailForHdr), DataSet)

                '=====================================Header==========================================
                Dim Path As String = Request.Url.AbsoluteUri.Substring(0, Request.Url.AbsoluteUri.ToString.LastIndexOf("/"))
                Path = Path + "/images/lambda_logo.jpg"

                Project = ds_header.Tables(0).Rows(0)("vProjectNo").ToString().Split(":")
                Dim strLen As Int32 = Project(0).ToString.LastIndexOf("-")
                ProjectNo = Project(0).ToString

                If Me.ViewState(IsProjectCT) AndAlso strLen > 5 Then
                    ProjectNo = Project(0).Substring(0, strLen)
                    strLen = strLen + 1
                    SiteId = Project(0).Substring(strLen)
                End If
                headercontent += "<html><head></head><body>"
                headercontent += "<table style=""margin-top: 2px; margin: auto; border: solid 1px black; width: 100%; font-family:'Times New Roman'; font-size:12px; ""align=""left"">"
                headercontent += "<tr style="" "">"
                headercontent += "<td valign=""top"">"
                headercontent += "<table style=""font-family: 'Times New Roman'; font-size:12px; "">"
                headercontent += "<tr style="" "">"
                headercontent += "<td colspan=""4"">"
                headercontent += "<Label  for """ + ConfigurationManager.AppSettings.Item("Client").ToString() + """>" + ConfigurationManager.AppSettings.Item("Client").ToString() + "</asp:Label>"
                headercontent += "</td>"
                headercontent += "</tr>"
                headercontent += "<tr style="" "">"
                headercontent += "<td colspan=""4"">"
                headercontent += "Sponsor Name:<Label  for """ + ds_header.Tables(0).Rows(0)("vClientName").ToString() + """>" + ds_header.Tables(0).Rows(0)("vClientName").ToString() + "</asp:Label>"
                headercontent += "</td>"
                headercontent += "</tr >"
                headercontent += "<tr style="" "">"
                headercontent += "<td align=""right"" colspan=""4"" >"
                headercontent += "<h4>"
                headercontent += "CASE REPORT FORM</h4>"
                headercontent += "</td>"
                headercontent += "</tr>"
                headercontent += "<tr style="" "">"
                headercontent += "<td align=""right"">Project No:</td>"
                headercontent += "<td style=""border: thin solid #000000;"">"
                headercontent += "<Label  for """ + ProjectNo + """>" + ProjectNo + "</asp:Label>"
                headercontent += "</td>"
                If Me.ViewState(IsProjectCT) = True Then
                    headercontent += "<td align=""right"">Site Id:</td>"
                    headercontent += "<td  style=""border: thin solid #000000;"">"
                    headercontent += "<Label  for """ + SiteId + """>" + SiteId + "</asp:Label>"
                    headercontent += "</td>"
                End If
                If Me.chkprotocolno.Checked = False Then
                    If ds_header.Tables(0).Rows(0).Item("ProtocolNo").ToString.Trim().Length > 0 Then
                        headercontent += "<td align=""right"">Protocol No:</td>"
                        headercontent += "<td  style=""border: thin solid #000000;"">"
                        headercontent += "<Label  for """ + ds_header.Tables(0).Rows(0).Item("ProtocolNo").ToString.Trim() + """>" + ds_header.Tables(0).Rows(0).Item("ProtocolNo").ToString.Trim() + "</asp:Label>"
                        headercontent += "</td>"
                    End If
                End If
                headercontent += "</tr>"
                headercontent += "<tr style="" "">"
                If Me.ViewState(IsProjectCT) Then
                    headercontent += "<td align=""right"">Subject No:</td>"
                    headercontent += "<td style=""border: thin solid #000000;"">"
                    headercontent += "<Label  for """ + SubjectNo + """>" + SubjectNo + "</asp:Label>"
                    headercontent += "</td>"
                    If Me.chkinitial.Checked = False Then
                        headercontent += "<td align=""right"">Subject Initials:</td>"
                        headercontent += "<td  style=""border: thin solid #000000;"">"
                        headercontent += "<Label  for """ + SubjectInitial + """>" + SubjectInitial + "</asp:Label>"
                        headercontent += "</td>"
                    End If
                Else
                    headercontent += "<td align=""right"">Subject No:</td>"
                    headercontent += "<td style=""border: thin solid #000000;"">"
                    headercontent += "<Label  for """ + SubjectNo + """>" + SubjectNo + "</asp:Label>"
                    headercontent += "</td>"
                    If Me.chkinitial.Checked = False Then
                        headercontent += "<td align=""right"">Subject Initials:</td>"
                        headercontent += "<td  style=""border: thin solid #000000;"">"
                        headercontent += "<Label  for """ + SubjectInitial + """>" + SubjectInitial + "</asp:Label>"
                        headercontent += "</td>"
                    End If
                End If
                headercontent += "</tr>"
                headercontent += "</table>"
                headercontent += "</td>"
                If Me.ViewState(vs_sponsorlogofilepath).ToString.Trim() <> "" Then
                    headercontent += "<td valign=""middle"">"
                    headercontent += "<img id=ctl00_CPHLAMBDA_ImgsponsorLogo alt=""" + Me.ViewState(vs_sponsorlogofilepath) + """ src=""" + Me.ViewState(vs_sponsorlogofilepath).ToString() + """right"" alt=""lambda"" style=""width:120px; height:120px;""/>"
                    headercontent += "</td>"
                End If
                headercontent += "<td valign=""middle"">"
                headercontent += "<img id=ctl00_CPHLAMBDA_ImgLogo alt=""" + Path.ToString() + """ src=""" + Path.ToString() + """right"" alt=""lambda"" style=""width:120px; height:120px;""/>"
                headercontent += "</td>"
                headercontent += "</tr>"
                headercontent += "</table>"
                headercontent += "</body></html>"
                '=========================================================================
                pdfFont = New System.Drawing.Font("Times New Roman", 12, FontStyle.Bold, GraphicsUnit.Point)
                '======================================htmltopdf======================================
                Dim pdfconverter As HtmlToPdfConverter = New HtmlToPdfConverter()
                pdfconverter.LicenseKey = "dfvo+uv66OPj6vrr6PTq+unr9Ovo9OPj4+P66g=="
                pdfconverter.PdfDocumentOptions.AvoidImageBreak = True
                pdfconverter.PdfDocumentOptions.AvoidTextBreak = False
                pdfconverter.PdfDocumentOptions.PdfPageSize = PdfPageSize.A4
                pdfconverter.PdfDocumentOptions.ShowHeader = True
                pdfconverter.PdfDocumentOptions.ShowFooter = True
                pdfconverter.PdfHeaderOptions.HeaderHeight = 125
                pdfconverter.PdfFooterOptions.FooterHeight = 42
                pdfconverter.HtmlViewerWidth = 662     ''Previous 750, 647
                pdfconverter.PdfDocumentOptions.FitWidth = False
                pdfconverter.PdfDocumentOptions.JpegCompressionEnabled = True
                pdfconverter.PdfDocumentOptions.JpegCompressionLevel = 0
                pdfconverter.PdfDocumentOptions.PdfCompressionLevel = PdfCompressionLevel.Best
                pdfconverter.PdfDocumentOptions.StretchToFit = True
                pdfconverter.PdfDocumentOptions.LeftMargin = 72
                pdfconverter.PdfDocumentOptions.RightMargin = 27
                pdfconverter.PdfDocumentOptions.TopMargin = 27
                pdfconverter.PdfDocumentOptions.BottomMargin = 5

                Dim level1TextStyle As String = "font-family:'Times New Roman'; font-size:16px; text-decoration: underline;"
                pdfconverter.TableOfContentsOptions.SetItemStyle(1, level1TextStyle)
                pdfconverter.TableOfContentsOptions.SetItemStyle(2, level1TextStyle)
                pdfconverter.TableOfContentsOptions.SetItemStyle(3, level1TextStyle)

                pdfconverter.TableOfContentsOptions.AutoTocItemsEnabled = False

                Dim level1PageNumberStyle As String = "padding-right:3px; font-family:'Times New Roman'; font-size:16px; text-decoration: underline; font-weight:bold"
                pdfconverter.TableOfContentsOptions.SetPageNumberStyle(1, level1PageNumberStyle)
                pdfconverter.TableOfContentsOptions.SetPageNumberStyle(2, level1PageNumberStyle)
                pdfconverter.TableOfContentsOptions.SetPageNumberStyle(3, level1PageNumberStyle)

                'd2 = pdfconverter.ConvertHtmlToPdfDocumentObject(html1, String.Empty) ' added by prayag for blank page

                If hdnSubSelection.Value.Trim() <> "" Then
                    pdfconverter.PdfFooterOptions.AddElement(New TextElement(0, 15, "[Authenticated By:" + CType(Session(VS_AuthenticatedBy), String) + "]", pdfFont))
                    pdfconverter.PdfFooterOptions.AddElement(New TextElement(0, 28, "[Authenticated On:" + CType(Session(VS_AuthenticatedOn), String) + "]", pdfFont))
                End If
                pdfconverter.PdfFooterOptions.PageNumberingStartIndex = 0
                pdfconverter.PdfFooterOptions.AddElement(New LineElement(0, 0, pdfconverter.PdfDocumentOptions.PdfPageSize.Width - pdfconverter.PdfDocumentOptions.LeftMargin - pdfconverter.PdfDocumentOptions.RightMargin, 0))
                Dim footerText As New TextElement(0, 1, "*This is an electronically authenticated report.                                            Page &p; of &P;                       ", New Font(New FontFamily("Times New Roman"), 12, GraphicsUnit.Point))

                footerText.TextAlign = HorizontalTextAlign.Right
                footerText.ForeColor = Color.Navy
                footerText.EmbedSysFont = True
                Dim Header1 As New HtmlToPdfElement(headercontent, Nothing)
                Header1.HtmlViewerWidth = 662     ''Previous 750
                Header1.FitWidth = False
                pdfconverter.PdfHeaderOptions.AddElement(Header1)
                pdfconverter.PdfFooterOptions.AddElement(footerText)

                pdfconverter.PdfViewerPreferences.PageLayout = ViewerPageLayout.SinglePage
                pdfconverter.PdfViewerPreferences.PageMode = ViewerPageMode.UseOutlines

                d1 = pdfconverter.ConvertHtmlToPdfDocumentObject(html1, String.Empty)

                BtnGeneratePdf.Enabled = False

                If Me.ddlPrinttype.SelectedValue.ToUpper() = "DRAFT" Then
                    watermarkTextFont = New System.Drawing.Font("Times New Roman", 75, FontStyle.Bold, GraphicsUnit.Point)
                    watermarkTextElement = New TextElement(50, 250, strProfileStatus + " Draft Copy", watermarkTextFont)
                    watermarkTextElement.ForeColor = System.Drawing.Color.Blue
                    watermarkTextElement.Opacity = 20
                    watermarkTextElement.TextAngle = 45
                    For Each PdfPage As Winnovative.PdfPage In d1.Pages
                        PdfPage.AddElement(watermarkTextElement)
                    Next
                End If

                'If GetBlankpageNew(d1) Then
                '    Dim str As String = "Done"
                'End If
                ' added by prayag to check blank page
                'If Not GetBlankpage(d1, d2) Then
                '    objCommon.ShowAlert("Error While Removing Blank Pages.Please Generate Report Again! ", Me.Page)
                '    Exit Try
                'End If
                ' upto here

                d1.Save(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\RptMerge\" + rptno + ".pdf")
                d1.AutoCloseAppendedDocs = True
                d1.Close()
                '======================================htmltopdf======================================
            End If
            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "....CRFReport", ex)
            Return False

        Finally
            dt.Dispose()
            dv.Dispose()
            dt_MedExMst.Dispose()
            dt_MedexGroup.Dispose()
            dv_MedexGrp.Dispose()
            dtNodeID.Dispose()
            dtPeriod.Dispose()
            dtParentActivity.Dispose()
            dtMain.Dispose()
            dvMain.Dispose()
            dvSort.Dispose()
        End Try
    End Function

    Private Function ProjectSpecificLabRpt(ByVal SubjectId As String, ByVal Nodeid As Integer, ByVal RptNo As String, ByVal foldername As String) As Boolean
        Dim wStr As String = String.Empty
        Dim eStr As String = String.Empty
        Dim ds_SampleDtl As New DataSet
        Dim Sampleid As Integer = 0
        Dim NewRptNo As String

        Try
            wStr = " vWorkSpaceId = '" & Me.HProjectId.Value.Trim() & "' And vSubjectID = '" & SubjectId _
                 & "' AND iNodeID =" & Convert.ToString(Nodeid) & " And cStatusIndi <> 'D' order by nSampleId "
            If Not objHelp.Get_ViewSampleDetail(wStr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, _
                       ds_SampleDtl, eStr) Then
                Throw New Exception("Error While Getting Data From View_Sampledetail" + eStr)
                Return False
            End If

            If ds_SampleDtl.Tables(0).Rows.Count > 0 Then
                For indexSample As Integer = 0 To ds_SampleDtl.Tables(0).Rows.Count - 1
                    Sampleid = ds_SampleDtl.Tables(0).Rows(indexSample)("nSampleID")
                    NewRptNo = RptNo + "." + Convert.ToString(indexSample)
                    If Not LabReport(Sampleid, NewRptNo, foldername, SubjectId) Then
                        Return False
                    End If
                Next
            End If

            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "....ProjectSpecificLabRpt", ex)
            Return False
        End Try
    End Function

#End Region

#Region "Merge PDF"

    Private Function MergePdf(ByVal SubjectNo As String, ByVal foldername As String, ByVal subjectinitials As String) As Boolean
        Dim fInfo As FileInfo = Nothing
        Dim DocumentsArray() As String
        Dim PathforLocal As String = String.Empty
        Dim document1 As Document = New Document()
        Dim document2 As Document = New Document()
        Dim av As Integer = 1
        Dim ileft, itop, ipages, splitchar As Integer
        ileft = 0
        itop = 0
        splitchar = 0
        ipages = 1
        Dim i1 As Integer = 0
        Dim strsub As New List(Of String)

        Try

            If Not Directory.Exists(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + foldername) Then
                Return True
            End If

            DocumentsArray = System.IO.Directory.GetFiles(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\RptMerge")

            If DocumentsArray.Length = 0 Then
                Return True
            End If

            For i = 0 To DocumentsArray.Length - 1
                fInfo = New FileInfo(DocumentsArray(i))
                If fInfo.Exists Then
                    If i = 0 Then
                        document1 = New Document(DocumentsArray(i))
                        document1.LicenseKey = "dfvo+uv66OPj6vrr6PTq+unr9Ovo9OPj4+P66g=="
                    Else
                        document2 = New Document(DocumentsArray(i))
                        document2.LicenseKey = "dfvo+uv66OPj6vrr6PTq+unr9Ovo9OPj4+P66g=="
                        document1.AppendDocument(document2)
                    End If
                End If
            Next i

            document1.ViewerPreferences.PageMode = ViewerPageMode.UseOutlines

            If DocumentsArray.Length > 0 Then
                document1.Save(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\Report\02.pdf")
                If DocumentsArray.Length = 1 Then
                    document1.AutoCloseAppendedDocs = True
                    document1.Close()

                Else
                    document1.AutoCloseAppendedDocs = True
                    document1.Close()
                    document2.AutoCloseAppendedDocs = True
                    document2.Close()

                End If
                For i = 0 To DocumentsArray.Length - 1
                    fInfo = New FileInfo(DocumentsArray(i))
                    If fInfo.Exists Then
                        fInfo.Delete()
                    End If
                Next i
            End If

            If Not Me.CreateTOC(SubjectNo, foldername, subjectinitials) Then
                Return False
            End If

            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "....MergePdf", ex)
            Return False
        End Try
    End Function

#End Region

#Region "Create toc"

    Private Function CreateTOC(ByVal SubjectNo As String, ByVal foldername As String, ByVal Subjectinitial As String) As Boolean
        Dim fInfo As FileInfo = Nothing
        Dim PathforLocal As String = String.Empty
        Dim av As Integer = 1
        Dim ileft, itop, ipages, splitchar As Integer
        ileft = 0
        itop = 0
        splitchar = 0
        ipages = 1
        Dim lst1
        Dim strtitle, strpage, siteid As String
        Dim i1 As Integer = 0
        strtitle = ""
        strpage = ""
        siteid = ""
        Dim c As iTextSharp.text.Chunk = New iTextSharp.text.Chunk
        Dim cPagenumber As iTextSharp.text.Chunk = New iTextSharp.text.Chunk
        Dim cPagenumberTest As iTextSharp.text.Chunk = New iTextSharp.text.Chunk
        Dim cDottedline As iTextSharp.text.Chunk
        Dim strsub As New List(Of String)
        Dim action As iTextSharp.text.pdf.PdfAction
        Dim strcommand As String = ""

        'Dim strdot As String = ".............................................................................................................................................................."
        Try
            If Not Directory.Exists(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim() + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\FinalReport")) Then
                Directory.CreateDirectory(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim() + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\FinalReport"))
            End If

            Dim downloadbytes As Byte() = System.IO.File.ReadAllBytes(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\Report\02.pdf")
            Dim reader As New iTextSharp.text.pdf.PdfReader(downloadbytes)
            Dim lst As List(Of Dictionary(Of String, Object)) = iTextSharp.text.pdf.SimpleBookmark.GetBookmark(reader)
            Dim stamper As iTextSharp.text.pdf.PdfStamper = New iTextSharp.text.pdf.PdfStamper(reader, New FileStream(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\FinalReport\" + SubjectNo + ".pdf", FileMode.Create), "4")
            stamper.Writer.SetPdfVersion(iTextSharp.text.pdf.PdfWriter.PDF_VERSION_1_4)  ''Added By ketan
            stamper.InsertPage(1, reader.GetPageSize(1))

            Dim pagewidth As String = reader.GetPageSize(1).Width
            itop = reader.GetPageSize(1).Height - 27
            Dim canvas As iTextSharp.text.pdf.PdfContentByte = stamper.GetOverContent(1)
            Dim fontpath As String = Server.MapPath("Reports") + "\times.ttf"
            Dim customfont As iTextSharp.text.pdf.BaseFont = iTextSharp.text.pdf.BaseFont.CreateFont(fontpath, iTextSharp.text.pdf.BaseFont.CP1252, iTextSharp.text.pdf.BaseFont.EMBEDDED)
            Dim font1 As iTextSharp.text.Font = New iTextSharp.text.Font(customfont, 12, 1, iTextSharp.text.BaseColor.BLACK)
            Dim font2 As iTextSharp.text.Font = New iTextSharp.text.Font(customfont, 12, 0, iTextSharp.text.BaseColor.BLUE)
            Dim font3 As iTextSharp.text.Font = New iTextSharp.text.Font(customfont, 12, 1, iTextSharp.text.BaseColor.BLUE)
            Dim Whitefont As iTextSharp.text.Font = New iTextSharp.text.Font(customfont, 12, 1, iTextSharp.text.BaseColor.WHITE)
            If Not Me.AddHeader(canvas, stamper, reader, itop, 1, SubjectNo, Subjectinitial) Then
                Return False
            End If

            itop -= 140

            If lst.Count > 0 Then
                c = New iTextSharp.text.Chunk("TABLE OF CONTENTS")
                c.Font = font1
                iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_CENTER, New iTextSharp.text.Phrase(c), pagewidth / 2, itop, 0)
                Dim Hashtable1 As New Dictionary(Of String, Object)
                Hashtable1.Add("Title", "TABLE OF CONTENTS")
                Hashtable1.Add("Page", "1 XYZ 0 685 .00")
                Hashtable1.Add("Action", "GoTo")
                lst.Insert(0, Hashtable1)
            End If

            Dim j2 As Integer = 0
            Dim ipage As Integer = 1
            Dim itopcount As Integer = itop
            If Not Me.PagesCount(lst, c, ileft, pagewidth, itopcount, ipage, reader, font2, font3) Then
                Throw New Exception()
            Else
                j2 = ipage
            End If

            For i As Integer = 0 To lst.Count - 1
                strsub.Clear()
                itop -= 20
                If itop < 72 Then
                    ipages += 1
                    stamper.InsertPage(ipages, reader.GetPageSize(1))
                    canvas = stamper.GetOverContent(ipages)
                    itop = reader.GetPageSize(1).Height - 27
                    If Not Me.AddHeader(canvas, stamper, reader, itop, ipages, SubjectNo, Subjectinitial) Then
                        Return False
                    End If
                    itop -= 160
                Else
                    canvas = stamper.GetOverContent(ipages)
                End If

                ileft = 72
                Dim lst2 = lst(i)
                i1 += 1
                action = New iTextSharp.text.pdf.PdfAction()

                If lst2.TryGetValue("Title", strtitle) Then
                    c = New iTextSharp.text.Chunk(strtitle)
                    c.Font = font3
                    c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                    If c.GetWidthPoint() + ileft > pagewidth - 47 Then
                        If ileft = 82 Then
                            splitchar = 66
                        ElseIf ileft = 92 Then
                            splitchar = 65
                        ElseIf ileft = 102 Then
                            splitchar = 64
                        ElseIf ileft = 72 Then
                            splitchar = 67
                        End If

                        Dim strtemp As String = Convert.ToString(strtitle.Length / splitchar)
                        If strtitle.Length <= splitchar Then
                            strtemp = 0
                        End If
                        For i2 As Integer = 0 To Convert.ToInt16(strtemp.Split(".")(0))
                            If i2 = 0 Then
                                If Convert.ToInt16(strtemp.Split(".")(0)) = 0 Then
                                    strsub.Add(strtitle.Substring(i2 * splitchar, strtitle.Length))
                                Else
                                    strsub.Add(strtitle.Substring(i2 * splitchar, splitchar))
                                End If
                            Else
                                strsub.Add(strtitle.Substring(i2 * splitchar - 1, strtitle.Length - (i2 * splitchar - 1)))
                            End If
                        Next
                    Else
                        strsub.Add(strtitle.Substring(0, strtitle.Length))
                    End If
                End If

                '------------------For Text------------------------------
                action.Put(iTextSharp.text.pdf.PdfName.S, iTextSharp.text.pdf.PdfName.GOTO)
                If lst2.TryGetValue("Page", strpage) Then
                    strpage = strpage.Replace("XYZ", "/XYZ")

                    If strsub(0).ToUpper() = "TABLE OF CONTENTS" Then
                        action.Put(iTextSharp.text.pdf.PdfName.D, New iTextSharp.text.pdf.PdfLiteral("[" + "0" + " " + strpage.Split(" ")(1) + " " + strpage.Split(" ")(2) + " " + strpage.Split(" ")(3) + " " + strpage.Split(" ")(4) + "]"))
                    Else
                        action.Put(iTextSharp.text.pdf.PdfName.D, New iTextSharp.text.pdf.PdfLiteral("[" + Convert.ToInt32(strpage.Split(" ")(0) + j2 - 1).ToString() + " " + strpage.Split(" ")(1) + " " + strpage.Split(" ")(2) + " " + strpage.Split(" ")(3) + " " + strpage.Split(" ")(4) + "]"))
                    End If
                End If

                cDottedline = New iTextSharp.text.Chunk(New iTextSharp.text.pdf.draw.DottedLineSeparator)
                cDottedline.Font = font3
                cDottedline.SetAction(action)
                If strsub.Count = 1 Then
                    '-------------------For Dotted line-------------------------
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cDottedline), ileft, itop, 0)
                    '-----------------------------------------------------------
                Else
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cDottedline), ileft, itop - ((strsub.Count - 1) * 20), 0)
                End If
                For i3 As Integer = 0 To strsub.Count - 1
                    If i3 > 0 Then
                        itop -= 20
                    End If
                    c = New iTextSharp.text.Chunk(strsub(i3))
                    c.Font = font3
                    c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                    c.SetAction(action)
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), ileft, itop, 0)
                Next
                '-----------------------------------------------------------
                '------------------For page number--------------------------
                Dim intPageNo As Integer
                Dim strBlank_PageNo As String
                If lst2.TryGetValue("Page", strpage) Then
                    strpage = strpage.Replace("XYZ", "/XYZ")
                    If strsub(0).ToUpper() <> "TABLE OF CONTENTS" Then
                        'cPagenumber = New iTextSharp.text.Chunk(Convert.ToString(Convert.ToInt32(strpage.Split(" ")(0)) + j2))
                        intPageNo = Convert.ToInt32(strpage.Split(" ")(0)) + j2
                        strBlank_PageNo = "   " & intPageNo
                        cPagenumber = New iTextSharp.text.Chunk(strBlank_PageNo)
                    Else
                        'cPagenumber = New iTextSharp.text.Chunk(Convert.ToString(Convert.ToInt32(strpage.Split(" ")(0))))
                        intPageNo = Convert.ToInt32(strpage.Split(" ")(0))
                        strBlank_PageNo = "   " & intPageNo
                        cPagenumber = New iTextSharp.text.Chunk(strBlank_PageNo)
                    End If
                    cPagenumber.Font = font3
                    cPagenumber.SetBackground(iTextSharp.text.BaseColor.WHITE)
                End If
                cPagenumber.SetAction(action)
                iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cPagenumber), pagewidth - 49, itop, 0)

                Dim intRemoveExtraWidth As Integer = 37
                intRemoveExtraWidth = intRemoveExtraWidth - (intPageNo.ToString().Length * 5)
                cPagenumberTest = New iTextSharp.text.Chunk(New iTextSharp.text.pdf.draw.DottedLineSeparator)
                cPagenumberTest.Font = Whitefont
                cPagenumberTest.SetBackground(iTextSharp.text.BaseColor.WHITE)
                cPagenumberTest.SetAction(action)
                iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cPagenumberTest), pagewidth - intRemoveExtraWidth, itop, 0)
                '-----------------------------------------------------------
                If strsub(0).ToUpper() <> "TABLE OF CONTENTS" Then
                    lst(i)("Page") = Convert.ToInt32(strpage.Split(" ")(0) + j2).ToString() + " " + strpage.Split(" ")(1).ToString() + " " + strpage.Split(" ")(2).ToString() + " " + strpage.Split(" ")(3).ToString() + " " + strpage.Split(" ")(4).ToString()
                End If

                If lst2.TryGetValue("Kids", lst1) Then
                    If Not Recursive1(SubjectNo, Subjectinitial, lst1, itop, ileft, ipages, stamper, reader, canvas, j2, font2, i1) Then
                        Throw New Exception()
                    End If
                End If
            Next

            stamper.Outlines = lst
            reader.ViewerPreferences = iTextSharp.text.pdf.PdfWriter.PageModeUseOutlines

            stamper.Close()
            reader.Close()

            ''Enable if security needs.
            'Dim DocSecurity As Document = New Document(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\Report\" + SubjectNo + "_1" + ".pdf")
            'DocSecurity.LicenseKey = "dfvo+uv66OPj6vrr6PTq+unr9Ovo9OPj4+P66g=="
            'DocSecurity.Security.CanEditContent = False
            'DocSecurity.Save(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\FinalReport\" + SubjectNo + ".pdf")
            'DocSecurity.AutoCloseAppendedDocs = True
            'DocSecurity.Close()

            '====================Set pdf fast web view to yes================
            strcommand = Server.MapPath(ConfigurationManager.AppSettings.Item("QPdfPath").Trim()) + " --linearize " + _
                              """" + Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\FinalReport\" + SubjectNo + ".pdf"" " + _
                               """" + Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\FinalReportLinear\" + SubjectNo + ".pdf"" "

            If Not Directory.Exists(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim() + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\FinalReportLinear")) Then
                Directory.CreateDirectory(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim() + "\" + Me.HProjectId.Value.ToString() + "\" + foldername + "\FinalReportLinear"))
            End If

            System.Diagnostics.Process.Start("CMD", "/C" + strcommand)
            Dim proc As System.Diagnostics.Process = System.Diagnostics.Process.Start("CMD", "/C" + strcommand)
            proc.WaitForExit()
            proc.Close()

            '===========================================================

            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "....CreateTOC", ex)
            Return False
        End Try
    End Function

#End Region

#Region "EXPORT PDF"

    Private Function ExportToPDF(Optional ByVal PDFFileName As String = "", Optional ByVal TranNo As Integer = 0, Optional ByVal folder As String = "", Optional ByVal IsForMerge As Boolean = False) As Boolean
        Dim filepath As String = String.Empty

        Try
            Dim rptOptions As New CrystalDecisions.Shared.ExportOptions()
            Dim pdffprnat As New CrystalDecisions.Shared.PdfFormatOptions()
            pdffprnat.CreateBookmarksFromGroupTree = True
            rptOptions.ExportFormatOptions = pdffprnat
            rptOptions.ExportFormatType = ExportFormatType.PortableDocFormat
            rptOptions.ExportDestinationType = ExportDestinationType.DiskFile

            filepath = ConfigurationManager.AppSettings.Item("uploadfilepath").Trim() + "\" + Me.HProjectId.Value.ToString() + "\" + folder

            If Not IsForMerge = False Then
                filepath += "\RptMerge"
            End If

            If Not System.IO.Directory.Exists(Server.MapPath(filepath)) Then
                Directory.CreateDirectory(Server.MapPath(filepath))
            End If

            Dim dest As New DiskFileDestinationOptions()

            dest.DiskFileName = Server.MapPath(filepath) + "\" + PDFFileName + ".PDF"
            rptOptions.ExportDestinationOptions = dest
            rDocument.Export(rptOptions)
            rDocument.Dispose()
            rDocument.Close()
            Return True
        Catch ex As System.Threading.ThreadAbortException
            Return False
        Catch ex1 As Exception
            Me.ShowErrorMessage(ex1.Message, "Error While ExportToPDF. ", ex1)
            Return False
        End Try

    End Function

#End Region

#Region "DownloadZip"

    Private Function DownloadZip(ByVal strFolderpath As String) As Boolean
        Dim zip As New ZipFile()
        Dim DocumentsArray() As String
        Dim fInfo As FileInfo = Nothing

        Try
            If Not Directory.Exists(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strFolderpath) Then
                Return True
            End If

            DocumentsArray = System.IO.Directory.GetFiles(Server.MapPath(ConfigurationManager.AppSettings.Item("uploadfilepath").Trim()) + "\" + Me.HProjectId.Value.ToString() + "\" + strFolderpath + "\FinalReportLinear")
            If DocumentsArray.Length = 0 Then
                Return True
            End If
            Dim response As System.Web.HttpResponse = System.Web.HttpContext.Current.Response
            zip.AlternateEncodingUsage = ZipOption.AsNecessary
            zip.AddDirectoryByName("Files")
            For i = 0 To DocumentsArray.Length - 1
                fInfo = New FileInfo(DocumentsArray(i))
                If fInfo.Exists Then
                    Dim filePath As String = fInfo.FullName.ToString()
                    zip.AddFile(filePath, "Files")
                End If
            Next i
            response.Clear()
            Dim zipName As String = [String].Format("Zip_{0}.zip", DateTime.Now.ToString("yyyyMMMddHHmmss"))
            response.ContentType = "application/zip"
            response.AddHeader("content-disposition", "attachment; filename=" + zipName)
            zip.Save(response.OutputStream)
            response.Flush()
            response.End()
            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "...........DownloadZip", ex)
            Return False
        Finally

        End Try
    End Function

#End Region

#Region "Radio button events"

    Protected Sub RBLProjecttype_SelectedIndexChanged(sender As Object, e As EventArgs) Handles RBLProjecttype.SelectedIndexChanged, RBLselect.SelectedIndexChanged
        ResetPage()
    End Sub

    Protected Sub btnRearrangeActivity_Click(sender As Object, e As EventArgs) Handles btnRearrangeActivity.Click
        Try
            If Not SequenceActivity() Then
                Me.ShowErrorMessage("Error Whlie Rearranging", "")
                Exit Try
            End If

        Catch ex As Exception
            ShowErrorMessage(ex.Message, ".....btnRearrangeActivity_Click", ex)
        End Try
    End Sub

    Protected Sub btnRearrangeReport_Click(sender As Object, e As EventArgs) Handles btnRearrangeReport.Click
        Try
            If Not SequenceReport() Then
                Me.ShowErrorMessage("Error Whlie Rearranging", "")
                Exit Try
            End If

        Catch ex As Exception
            ShowErrorMessage(ex.Message, ".....btnRearrangeReport_Click", ex)
        End Try
    End Sub

#End Region

#Region "Helper Function"

    Private Function GetReportType(ByRef dt As DataTable) As Boolean
        Dim wStr As String = String.Empty
        Dim Ds_fillReport As New DataSet
        Dim dt_FillReport As New DataTable
        Dim dt_Reports As New DataTable
        Dim dr_Reports As DataRow
        Dim SeqNo As Integer = 0
        Try
            wStr = " vWorkspaceId = '" & Me.HProjectId.Value.Trim() & "'"
            wStr += " And cStatusindi<>'D'"
            If Not objHelp.Get_ViewSampleDetail(wStr, WS_HelpDbTable.DataRetrievalModeEnum.DataTable_WithWhereCondition, _
                                               Ds_fillReport, eStr_Retu) Then
                Throw New Exception(eStr_Retu)
            End If

            If Ds_fillReport.Tables(0).Rows.Count > 0 Then
                dt_FillReport = Ds_fillReport.Tables(0).DefaultView.ToTable(True, "iNodeId,vNodeDisplayName".Split(","))
            End If

            dt_Reports.Columns.Add(New DataColumn("iSeqNo", GetType(Integer)))
            dt_Reports.Columns.Add(New DataColumn("vReportId", GetType(String)))
            dt_Reports.Columns.Add(New DataColumn("iNodeID", GetType(Integer)))
            dt_Reports.Columns.Add(New DataColumn("vReportDesc", GetType(String)))
            dt_Reports.AcceptChanges()

            dr_Reports = dt_Reports.NewRow
            dr_Reports("iSeqNo") = 1
            dr_Reports("iNodeID") = -2
            dr_Reports("vReportId") = "1#-2"
            dr_Reports("vReportDesc") = "MSR Report"
            dt_Reports.Rows.Add(dr_Reports)
            dt_Reports.AcceptChanges()

            dr_Reports = dt_Reports.NewRow
            dr_Reports("iSeqNo") = 2
            dr_Reports("iNodeID") = -1
            dr_Reports("vReportId") = "2#-1"
            dr_Reports("vReportDesc") = "Screening Lab Report"
            dt_Reports.Rows.Add(dr_Reports)
            dt_Reports.AcceptChanges()

            dr_Reports = dt_Reports.NewRow
            dr_Reports("iSeqNo") = 3
            dr_Reports("iNodeID") = 0
            dr_Reports("vReportId") = "3#0"
            dr_Reports("vReportDesc") = "CRF Report"
            dt_Reports.Rows.Add(dr_Reports)
            dt_Reports.AcceptChanges()

            dt_Reports.DefaultView.Sort = "iSeqNo Desc"

            If dt_FillReport.Rows.Count > 0 Then
                SeqNo = Convert.ToInt16(dt_Reports.DefaultView.ToTable.Rows(0)("iSeqNo")) + 1
                For Each dr As DataRow In dt_FillReport.Rows
                    dr_Reports = dt_Reports.NewRow
                    dr_Reports("iSeqNo") = SeqNo
                    dr_Reports("iNodeID") = dr("iNodeID")
                    dr_Reports("vReportId") = Convert.ToString(dr_Reports("iSeqNo")) + "#" + Convert.ToString(dr("iNodeID").ToString())
                    dr_Reports("vReportDesc") = dr("vNodeDisplayName")
                    dt_Reports.Rows.Add(dr_Reports)
                    dt_Reports.AcceptChanges()
                    SeqNo = SeqNo + 1
                Next
            End If
            dt = dt_Reports
            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.ToString(), "....FillReportType()", ex)
            Return False
        End Try
    End Function

    Private Function SequenceReport() As Boolean
        Dim ds_Report As New DataSet, ds_SequenceSample As New DataSet
        Dim dt_Report As New DataTable

        Dim drReport As DataRow, drSeq As DataRow
        Dim wstr As String = String.Empty
        Dim ds_ParentAct As New DataSet
        Dim iNodeNo As Integer = 2
        Try
            If Me.HFGV_Report.Value.ToString() <> "" Then
                ds_Report.Tables.Add(JsonConvert.DeserializeObject(Me.HFGV_Report.Value.Trim(), GetType(System.Data.DataTable)))
                dt_Report = CType(Me.ViewState(vs_reporttype), DataTable)

                If Not dt_Report Is Nothing AndAlso Not ds_Report Is Nothing Then
                    For Each drReport In dt_Report.Rows
                        For Each drSeq In ds_Report.Tables(0).Rows
                            If drReport("iNodeId") = drSeq("iNodeId") Then
                                drReport("iSeqNo") = drSeq("iSeqNo")
                                Exit For
                            End If
                        Next
                        dt_Report.AcceptChanges()
                    Next
                    dt_Report.DefaultView.Sort = "iSeqNo ASC"

                End If
                Me.ViewState(vs_reporttype) = dt_Report.DefaultView.ToTable()

                gvwReportType.DataSource = dt_Report.DefaultView.ToTable()
                gvwReportType.DataBind()
            End If

            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "...SequenceReport()", ex)
            Return False
        End Try
    End Function

    Private Function SequenceActivity() As Boolean
        Dim ds_Activity As New DataSet, ds_SequenceSample As New DataSet
        Dim dt_WorkspaceNodeDetail As New DataTable
        Dim drActivity As DataRow, drSeq As DataRow
        Dim wstr As String = String.Empty
        Dim ds_ParentAct As New DataSet
        Dim iNodeNo As Integer = 2

        Try
            If Me.HFGV_Activity.Value.ToString() <> "" Then
                ds_Activity.Tables.Add(JsonConvert.DeserializeObject(Me.HFGV_Activity.Value.Trim(), GetType(System.Data.DataTable)))

                dt_WorkspaceNodeDetail = CType(Me.ViewState(VS_Activity), DataTable)

                If Not dt_WorkspaceNodeDetail Is Nothing AndAlso Not ds_Activity Is Nothing Then
                    For Each drActivity In dt_WorkspaceNodeDetail.Rows
                        For Each drSeq In ds_Activity.Tables(0).Rows
                            If drActivity("iNodeId") = drSeq("iNodeId") Then
                                drActivity("iNodeNo") = drSeq("iNodeNo")
                                Exit For
                            End If
                        Next
                        dt_WorkspaceNodeDetail.AcceptChanges()
                    Next
                    dt_WorkspaceNodeDetail.DefaultView.Sort = "iNodeNo ASC"
                End If
                Me.ViewState(VS_Activity) = dt_WorkspaceNodeDetail.DefaultView.ToTable()
                gvwActivity.DataSource = dt_WorkspaceNodeDetail.DefaultView.ToTable()
                gvwActivity.DataBind()
            End If
            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "...SequenceActivity()", ex)
            Return False
        End Try
    End Function

    Private Function RenderControl(control As Control) As String

        Dim sb As New StringBuilder()
        Dim sw As New StringWriter(sb)
        Dim writer As New HtmlTextWriter(sw)

        control.RenderControl(writer)
        Return sb.ToString()
    End Function

    Private Function Recursive1(ByVal subjectno As String, ByVal subjectinitial As String, ByVal list1 As IList(Of Dictionary(Of String, Object)), ByRef itop As Integer, ByRef ileft As Integer, ByRef ipages As Integer, ByVal stamper As iTextSharp.text.pdf.PdfStamper, ByVal reader As iTextSharp.text.pdf.PdfReader, ByVal canvas As iTextSharp.text.pdf.PdfContentByte, ByRef j1 As Integer, ByRef font2 As iTextSharp.text.Font, Optional ByRef i1 As Integer = 0) As Boolean
        Dim lst1, lst2
        Dim strsub As New List(Of String)
        Dim strtitle As String = ""
        Dim strpage As String = ""
        Dim splitchar As Integer = 0
        Dim c As iTextSharp.text.Chunk
        Dim action As iTextSharp.text.pdf.PdfAction
        Dim pagewidth As String = reader.GetPageSize(ipages).Width
        Dim cPagenumber As iTextSharp.text.Chunk = New iTextSharp.text.Chunk
        Dim cPagenumberTest As iTextSharp.text.Chunk = New iTextSharp.text.Chunk
        Dim cDottedline As iTextSharp.text.Chunk
        'Dim strdot As String = "..........................................................................................................................................................."
        Try
            ileft += 10
            For i As Integer = 0 To list1.Count - 1
                strsub.Clear()
                itop -= 20
                i1 += 1
                If itop < 72 Then
                    ipages += 1

                    stamper.InsertPage(ipages, reader.GetPageSize(1))
                    canvas = stamper.GetOverContent(ipages)
                    itop = reader.GetPageSize(1).Height - 27

                    If Not Me.AddHeader(canvas, stamper, reader, itop, ipages, subjectno, subjectinitial) Then
                        Return False
                    End If
                    itop -= 160
                Else
                    canvas = stamper.GetOverContent(ipages)
                End If
                lst1 = list1(i)

                If lst1.TryGetValue("Title", strtitle) Then
                    c = New iTextSharp.text.Chunk(strtitle)
                    c.Font = font2
                    If c.GetWidthPoint() + ileft > pagewidth - 47 Then
                        If ileft = 82 Then
                            splitchar = 66
                        ElseIf ileft = 92 Then
                            splitchar = 65
                        ElseIf ileft = 102 Then
                            splitchar = 64
                        End If
                        Dim strtemp As String = Convert.ToString(strtitle.Length / splitchar)
                        If strtitle.Length <= splitchar Then
                            strtemp = 0
                        End If
                        For i2 As Integer = 0 To Convert.ToInt16(strtemp.Split(".")(0))
                            If i2 = 0 Then
                                If Convert.ToInt16(strtemp.Split(".")(0)) = 0 Then
                                    strsub.Add(strtitle.Substring(i2 * splitchar, strtitle.Length))
                                Else
                                    strsub.Add(strtitle.Substring(i2 * splitchar, splitchar))
                                End If
                            Else
                                strsub.Add(strtitle.Substring(i2 * splitchar, strtitle.Length - (i2 * splitchar)))
                            End If
                        Next
                    Else
                        strsub.Add(strtitle.Substring(0, strtitle.Length))
                    End If
                End If
                action = New iTextSharp.text.pdf.PdfAction()
                action.Put(iTextSharp.text.pdf.PdfName.S, iTextSharp.text.pdf.PdfName.GOTO)
                '-----------------------Added by nipun khant-----------------------------------
                If lst1.TryGetValue("Page", strpage) Then
                    strpage = strpage.Replace("XYZ", "/XYZ")
                    action.Put(iTextSharp.text.pdf.PdfName.D, New iTextSharp.text.pdf.PdfLiteral("[" + Convert.ToInt32(strpage.Split(" ")(0) + j1 - 1).ToString() + " " + strpage.Split(" ")(1) + " " + strpage.Split(" ")(2) + " " + strpage.Split(" ")(3) + " " + strpage.Split(" ")(4) + "]"))

                End If
                'cDottedline = New iTextSharp.text.Chunk(strdot)
                cDottedline = New iTextSharp.text.Chunk(New iTextSharp.text.pdf.draw.DottedLineSeparator)
                cDottedline.Font = font2
                cDottedline.SetAction(action)
                If strsub.Count = 1 Then
                    '-------------------For Dotted line-------------------------
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cDottedline), ileft, itop, 0)
                    '-----------------------------------------------------------
                Else
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cDottedline), ileft, itop - ((strsub.Count - 1) * 20), 0)
                End If
                For i3 As Integer = 0 To strsub.Count - 1
                    If i3 > 0 Then
                        itop -= 20
                    End If
                    c = New iTextSharp.text.Chunk(strsub(i3))
                    c.Font = font2
                    c.SetAction(action)
                    c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), ileft, itop, 0)

                Next

                Dim intPageNo As Integer
                Dim strBlank_PageNo As String
                If lst1.TryGetValue("Page", strpage) Then
                    strpage = strpage.Replace("XYZ", "/XYZ")
                    'cPagenumber = New iTextSharp.text.Chunk(Convert.ToString(Convert.ToInt32(strpage.Split(" ")(0)) + j1))
                    intPageNo = Convert.ToInt32(strpage.Split(" ")(0)) + j1
                    strBlank_PageNo = "   " & intPageNo
                    cPagenumber = New iTextSharp.text.Chunk(strBlank_PageNo)
                    cPagenumber.Font = font2
                    cPagenumber.SetBackground(iTextSharp.text.BaseColor.WHITE)
                End If
                cPagenumber.SetAction(action)
                iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cPagenumber), pagewidth - 49, itop, 0)

                Dim intRemoveExtraWidth As Integer = 37
                intRemoveExtraWidth = intRemoveExtraWidth - (intPageNo.ToString().Length * 5)
                cPagenumberTest = New iTextSharp.text.Chunk(New iTextSharp.text.pdf.draw.DottedLineSeparator)
                cPagenumberTest.Font.Color = iTextSharp.text.BaseColor.WHITE
                cPagenumberTest.SetBackground(iTextSharp.text.BaseColor.WHITE)
                cPagenumberTest.SetAction(action)
                iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cPagenumberTest), pagewidth - intRemoveExtraWidth, itop, 0)

                list1(i)("Page") = Convert.ToInt32(strpage.Split(" ")(0) + j1).ToString() + " " + strpage.Split(" ")(1).ToString() + " " + strpage.Split(" ")(2).ToString() + " " + strpage.Split(" ")(3).ToString() + " " + strpage.Split(" ")(4).ToString()
                If lst1.TryGetValue("Kids", lst2) Then
                    If Not Recursive2(subjectno, subjectinitial, lst2, itop, ileft, ipages, stamper, reader, canvas, j1, font2, i1) Then
                        Return False
                    End If
                End If
            Next

            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "Error While Recursive function. ", ex)
            Return False
        End Try
    End Function

    Private Function Recursive2(ByVal subjectno As String, ByVal subjectinitial As String, ByVal list1 As IList(Of Dictionary(Of String, Object)), ByRef itop As Integer, ByVal ileft As Integer, ByRef ipages As Integer, ByVal stamper As iTextSharp.text.pdf.PdfStamper, ByVal reader As iTextSharp.text.pdf.PdfReader, ByVal canvas As iTextSharp.text.pdf.PdfContentByte, ByRef j1 As Integer, ByRef font2 As iTextSharp.text.Font, Optional ByRef i1 As Integer = 0) As Boolean
        Dim lst1, lst2
        Dim strsub As New List(Of String)
        Dim strtitle As String = ""
        Dim strpage As String = ""
        Dim splitchar As Integer = 0
        Dim c As iTextSharp.text.Chunk
        Dim action As iTextSharp.text.pdf.PdfAction
        Dim pagewidth As String = reader.GetPageSize(ipages).Width
        Dim cPagenumber As iTextSharp.text.Chunk = New iTextSharp.text.Chunk
        Dim cPagenumberTest As iTextSharp.text.Chunk = New iTextSharp.text.Chunk
        Dim cDottedline As iTextSharp.text.Chunk
        'Dim strdot As String = "........................................................................................................................................................"
        Try
            ileft += 10
            For i As Integer = 0 To list1.Count - 1
                strsub.Clear()
                itop -= 20
                i1 += 1
                If itop < 72 Then
                    ipages += 1
                    stamper.InsertPage(ipages, reader.GetPageSize(1))
                    canvas = stamper.GetOverContent(ipages)
                    itop = reader.GetPageSize(1).Height - 27
                    If Not Me.AddHeader(canvas, stamper, reader, itop, ipages, subjectno, subjectinitial) Then
                        Return False
                    End If
                    itop -= 160
                Else
                    canvas = stamper.GetOverContent(ipages)
                End If
                lst1 = list1(i)

                If lst1.TryGetValue("Title", strtitle) Then
                    c = New iTextSharp.text.Chunk(strtitle)
                    c.Font = font2
                    If c.GetWidthPoint() + ileft > pagewidth - 47 Then
                        If ileft = 82 Then
                            splitchar = 66
                        ElseIf ileft = 92 Then
                            splitchar = 65
                        ElseIf ileft = 102 Then
                            splitchar = 64
                        End If
                        Dim strtemp As String = Convert.ToString(strtitle.Length / splitchar)
                        If strtitle.Length <= splitchar Then
                            strtemp = 0
                        End If
                        For i2 As Integer = 0 To Convert.ToInt16(strtemp.Split(".")(0))
                            If i2 = 0 Then
                                If Convert.ToInt16(strtemp.Split(".")(0)) = 0 Then
                                    strsub.Add(strtitle.Substring(i2 * splitchar, strtitle.Length))
                                Else
                                    strsub.Add(strtitle.Substring(i2 * splitchar, splitchar))
                                End If
                            Else
                                strsub.Add(strtitle.Substring(i2 * splitchar, strtitle.Length - (i2 * splitchar)))
                            End If
                        Next
                    Else
                        strsub.Add(strtitle.Substring(0, strtitle.Length))
                    End If
                End If
                action = New iTextSharp.text.pdf.PdfAction()
                action.Put(iTextSharp.text.pdf.PdfName.S, iTextSharp.text.pdf.PdfName.GOTO)
                '-----------------------Added by nipun khant-----------------------------------
                If lst1.TryGetValue("Page", strpage) Then
                    strpage = strpage.Replace("XYZ", "/XYZ")
                    action.Put(iTextSharp.text.pdf.PdfName.D, New iTextSharp.text.pdf.PdfLiteral("[" + Convert.ToInt32(strpage.Split(" ")(0) + j1 - 1).ToString() + " " + strpage.Split(" ")(1) + " " + strpage.Split(" ")(2) + " " + strpage.Split(" ")(3) + " " + strpage.Split(" ")(4) + "]"))

                End If
                'cDottedline = New iTextSharp.text.Chunk(strdot)
                cDottedline = New iTextSharp.text.Chunk(New iTextSharp.text.pdf.draw.DottedLineSeparator)
                cDottedline.Font = font2
                cDottedline.SetAction(action)
                If strsub.Count = 1 Then
                    '-------------------For Dotted line-------------------------
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cDottedline), ileft, itop, 0)
                    '-----------------------------------------------------------
                Else
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cDottedline), ileft, itop - ((strsub.Count - 1) * 20), 0)
                End If
                For i3 As Integer = 0 To strsub.Count - 1
                    If i3 > 0 Then
                        itop -= 20
                    End If
                    c = New iTextSharp.text.Chunk(strsub(i3))
                    c.Font = font2
                    c.SetAction(action)
                    c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), ileft, itop, 0)
                Next

                Dim intPageNo As Integer
                Dim strBlank_PageNo As String
                If lst1.TryGetValue("Page", strpage) Then
                    strpage = strpage.Replace("XYZ", "/XYZ")
                    'cPagenumber = New iTextSharp.text.Chunk(Convert.ToString(Convert.ToInt32(strpage.Split(" ")(0)) + j1))
                    intPageNo = Convert.ToInt32(strpage.Split(" ")(0)) + j1
                    strBlank_PageNo = "   " & intPageNo
                    cPagenumber = New iTextSharp.text.Chunk(strBlank_PageNo)
                    cPagenumber.Font = font2
                    cPagenumber.SetBackground(iTextSharp.text.BaseColor.WHITE)
                End If
                cPagenumber.SetAction(action)
                iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cPagenumber), pagewidth - 49, itop, 0)

                Dim intRemoveExtraWidth As Integer = 37
                intRemoveExtraWidth = intRemoveExtraWidth - (intPageNo.ToString().Length * 5)
                cPagenumberTest = New iTextSharp.text.Chunk(New iTextSharp.text.pdf.draw.DottedLineSeparator)
                cPagenumberTest.Font.Color = iTextSharp.text.BaseColor.WHITE
                cPagenumberTest.SetBackground(iTextSharp.text.BaseColor.WHITE)
                cPagenumberTest.SetAction(action)
                iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(cPagenumberTest), pagewidth - intRemoveExtraWidth, itop, 0)

                list1(i)("Page") = Convert.ToInt32(strpage.Split(" ")(0) + j1).ToString() + " " + strpage.Split(" ")(1).ToString() + " " + strpage.Split(" ")(2).ToString() + " " + strpage.Split(" ")(3).ToString() + " " + strpage.Split(" ")(4).ToString()
                If lst1.TryGetValue("Kids", lst2) Then
                    Return Recursive2(subjectno, subjectinitial, lst2, itop, ileft, ipages, stamper, reader, canvas, j1, font2, i1)
                End If
            Next

            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "Error While Recursive function. ", ex)
            Return False
        End Try
    End Function

    Private Function recursiveforpdf(ByVal list1 As IList(Of Dictionary(Of String, Object)), ByVal c As iTextSharp.text.Chunk, ByRef ileft As Integer, ByRef pagewidth As String, ByRef itop As Integer, ByRef ipage As Integer, ByRef reader As iTextSharp.text.pdf.PdfReader, ByRef font2 As iTextSharp.text.Font) As Boolean
        Dim lst1, lst2
        Dim strsub As New List(Of String)
        Dim strtitle As String = ""
        Dim splitchar As Integer = 0

        Try
            ileft += 10
            For i As Integer = 0 To list1.Count - 1
                strsub.Clear()
                itop -= 20
                If itop < 72 Then
                    ipage += 1
                    itop = reader.GetPageSize(1).Height - 27
                    itop -= 160
                End If
                lst1 = list1(i)
                If lst1.TryGetValue("Title", strtitle) Then
                    c = New iTextSharp.text.Chunk(strtitle)
                    c.Font = font2
                    If c.GetWidthPoint() + ileft > pagewidth - 47 Then
                        If ileft = 82 Then
                            splitchar = 66
                        ElseIf ileft = 92 Then
                            splitchar = 65
                        ElseIf ileft = 102 Then
                            splitchar = 64
                            'ElseIf ileft = 62 Then ' added by prayag
                            '    splitchar = 63
                        End If
                        Dim strtemp As String = Convert.ToString(strtitle.Length / splitchar)

                        If strtitle.Length <= splitchar Then
                            strtemp = 0
                        End If

                        For i2 As Integer = 0 To Convert.ToInt16(strtemp.Split(".")(0))
                            If i2 = 0 Then
                                If Convert.ToInt16(strtemp.Split(".")(0)) = 0 Then
                                    strsub.Add(strtitle.Substring(i2 * splitchar, strtitle.Length))
                                Else
                                    strsub.Add(strtitle.Substring(i2 * splitchar, splitchar))
                                End If
                            Else
                                itop -= 20
                                strsub.Add(strtitle.Substring(i2 * splitchar - 1, strtitle.Length - (i2 * splitchar - 1)))
                            End If
                        Next
                    Else
                        strsub.Add(strtitle.Substring(0, strtitle.Length))
                    End If
                End If
                If lst1.TryGetValue("Kids", lst2) Then
                    If Not recursiveforpdf1(lst2, c, ileft, pagewidth, itop, ipage, reader, font2) Then
                        Return False
                    End If
                End If
            Next
            Return True
        Catch ex As Exception
            Return False
        End Try

    End Function

    Private Function recursiveforpdf1(ByVal list1 As IList(Of Dictionary(Of String, Object)), ByVal c As iTextSharp.text.Chunk, ByVal ileft As Integer, ByRef pagewidth As String, ByRef itop As Integer, ByRef ipage As Integer, ByRef reader As iTextSharp.text.pdf.PdfReader, ByRef font2 As iTextSharp.text.Font) As Boolean
        Dim lst1, lst2
        Dim strsub As New List(Of String)
        Dim strtitle As String = ""
        Dim splitchar As Integer = 0

        Try
            ileft += 10
            For i As Integer = 0 To list1.Count - 1
                strsub.Clear()
                itop -= 20
                If itop < 72 Then
                    ipage += 1
                    itop = reader.GetPageSize(1).Height - 27
                    itop -= 160
                End If
                lst1 = list1(i)
                If lst1.TryGetValue("Title", strtitle) Then
                    c = New iTextSharp.text.Chunk(strtitle)
                    c.Font = font2
                    If c.GetWidthPoint() + ileft > pagewidth - 47 Then
                        If ileft = 82 Then
                            splitchar = 66
                        ElseIf ileft = 92 Then
                            splitchar = 65
                        ElseIf ileft = 102 Then
                            splitchar = 64
                            'ElseIf ileft = 72 Then ' added by prayag
                            '    splitchar = 63
                        End If
                        Dim strtemp As String = Convert.ToString(strtitle.Length / splitchar)
                        If strtitle.Length <= splitchar Then
                            strtemp = 0
                        End If
                        For i2 As Integer = 0 To Convert.ToInt16(strtemp.Split(".")(0))
                            If i2 = 0 Then
                                If Convert.ToInt16(strtemp.Split(".")(0)) = 0 Then
                                    strsub.Add(strtitle.Substring(i2 * splitchar, strtitle.Length))
                                Else
                                    strsub.Add(strtitle.Substring(i2 * splitchar, splitchar))
                                End If
                            Else
                                itop -= 20
                                strsub.Add(strtitle.Substring(i2 * splitchar - 1, strtitle.Length - (i2 * splitchar - 1)))
                            End If
                        Next
                    Else
                        strsub.Add(strtitle.Substring(0, strtitle.Length))
                    End If
                End If
                If lst1.TryGetValue("Kids", lst2) Then
                    Return recursiveforpdf(lst2, c, ileft, pagewidth, itop, ipage, reader, font2)
                End If
            Next
            Return True
        Catch ex As Exception
            Return False
        End Try

    End Function

    Private Function PagesCount(ByVal lst As IList(Of Dictionary(Of String, Object)), ByVal c As iTextSharp.text.Chunk, ByRef ileft As Integer, ByRef pagewidth As String, ByRef itop As Integer, ByRef ipage As Integer, ByRef reader As iTextSharp.text.pdf.PdfReader, ByRef font2 As iTextSharp.text.Font, ByRef font3 As iTextSharp.text.Font) As Boolean
        Dim lstpages1
        Dim strtitle As String = ""
        Dim splitchar As Integer = 0
        Dim strsub As New List(Of String)
       
        Try

            For i As Integer = 0 To lst.Count - 1
                strsub.Clear()
                itop -= 20
                If itop < 72 Then
                    ipage += 1
                    itop = reader.GetPageSize(1).Height - 27
                    itop -= 160
                End If
                ileft = 72
                Dim lstpages2 = lst(i)
                If lstpages2.TryGetValue("Title", strtitle) Then
                    c = New iTextSharp.text.Chunk(strtitle)
                    c.Font = font3
                    If c.GetWidthPoint() + ileft > pagewidth - 47 Then
                        If ileft = 82 Then
                            splitchar = 66
                        ElseIf ileft = 92 Then
                            splitchar = 65
                        ElseIf ileft = 102 Then
                            splitchar = 64
                        ElseIf ileft = 72 Then
                            splitchar = 67
                            'ElseIf ileft = 52 Then ' added by prayag
                            '    splitchar = 63
                        End If
                        Dim strtemp As String = Convert.ToString(strtitle.Length / splitchar)
                        If strtitle.Length <= splitchar Then
                            strtemp = 0
                        End If
                        For i2 As Integer = 0 To Convert.ToInt16(strtemp.Split(".")(0))
                            If i2 = 0 Then
                                If Convert.ToInt16(strtemp.Split(".")(0)) = 0 Then
                                    strsub.Add(strtitle.Substring(i2 * splitchar, strtitle.Length))
                                Else
                                    strsub.Add(strtitle.Substring(i2 * splitchar, splitchar))
                                End If
                            Else
                                itop -= 20
                                strsub.Add(strtitle.Substring(i2 * splitchar - 1, strtitle.Length - (i2 * splitchar - 1)))
                            End If
                        Next
                    Else
                        strsub.Add(strtitle.Substring(0, strtitle.Length))
                    End If
                End If
                If lstpages2.TryGetValue("Kids", lstpages1) Then
                    If Not recursiveforpdf(lstpages1, c, ileft, pagewidth, itop, ipage, reader, font2) Then
                        Throw New Exception()
                    End If
                End If
            Next
            Return True
        Catch ex As Exception
            Return False
        End Try
    End Function

    Private Function AddHeader(canvas As iTextSharp.text.pdf.PdfContentByte, stamper As iTextSharp.text.pdf.PdfStamper, reader As iTextSharp.text.pdf.PdfReader, itop As Integer, iPages As Integer, ByVal subjectno As String, ByVal subjectinitial As String) As Boolean
        Dim ds_header As New DataSet
        Dim Project(), Projectno, SiteId As String
        SiteId = ""
        Dim c As iTextSharp.text.Chunk
        Dim contentwidth As Integer = 0
        Try
            Dim fontpath As String = Server.MapPath("Reports") + "\times.ttf"
            Dim customfont As iTextSharp.text.pdf.BaseFont = iTextSharp.text.pdf.BaseFont.CreateFont(fontpath, iTextSharp.text.pdf.BaseFont.CP1252, iTextSharp.text.pdf.BaseFont.EMBEDDED)
            Dim font1 As iTextSharp.text.Font = New iTextSharp.text.Font(customfont, 12, 1, iTextSharp.text.BaseColor.BLACK)
            Dim font4 As iTextSharp.text.Font = New iTextSharp.text.Font(customfont, 12, 0, iTextSharp.text.BaseColor.BLACK)
            ds_header = CType(Me.ViewState(vs_View_getWorkspaceDetailForHdr), DataSet)
            Project = ds_header.Tables(0).Rows(0)("vProjectNo").ToString().Split(":")
            Dim strLen As Int32 = Project(0).ToString.LastIndexOf("-")
            Projectno = Project(0).ToString
            If Me.ViewState(IsProjectCT) AndAlso strLen > 5 Then
                Projectno = Project(0).Substring(0, strLen)
                strLen = strLen + 1
                SiteId = Project(0).Substring(strLen)
            End If
            Dim cb As iTextSharp.text.pdf.PdfContentByte = stamper.GetOverContent(iPages)
            cb.Rectangle(72, reader.GetPageSize(1).Height - 150, reader.GetPageSize(1).Width - 102, 115.0F)
            cb.SetLineWidth(0.5F)
            cb.Stroke()

            c = New iTextSharp.text.Chunk(System.Configuration.ConfigurationManager.AppSettings("Client"))
            c.Font = font4
            c.SetBackground(iTextSharp.text.BaseColor.WHITE)
            iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), 75, itop - 20, 0)

            c = New iTextSharp.text.Chunk("Sponsor Name: " + ds_header.Tables(0).Rows(0)("vClientName").ToString())
            c.SetBackground(iTextSharp.text.BaseColor.WHITE)
            c.Font = font4
            iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), 75, itop - 40, 0)
            c = New iTextSharp.text.Chunk("TABLE OF CONTENTS")
            c.Font = font1
            c.SetBackground(iTextSharp.text.BaseColor.WHITE)
            iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), 75, itop - 60, 0)

            If Me.chkprotocolno.Checked = False Then
                If ds_header.Tables(0).Rows(0).Item("ProtocolNo").ToString.Trim().Length > 0 Then
                    contentwidth += c.GetWidthPoint() + 70
                    c = New iTextSharp.text.Chunk("Protocol No:")
                    c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                    c.Font = font4
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), 10 + contentwidth, itop - 60, 0)
                    contentwidth += c.GetWidthPoint()
                    c = New iTextSharp.text.Chunk(ds_header.Tables(0).Rows(0)("Protocolno").ToString())
                    c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                    c.Font = font4
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), contentwidth + 10, itop - 60, 0)
                    cb = stamper.GetOverContent(iPages)
                    cb.Rectangle(contentwidth + 10, reader.GetPageSize(1).Height - 90, c.GetWidthPoint() + 5, 15.0F)
                    cb.Stroke()
                End If
            End If

            c = New iTextSharp.text.Chunk("Project No:")
            c.SetBackground(iTextSharp.text.BaseColor.WHITE)
            c.Font = font4
            iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), 75, itop - 90, 0)
            contentwidth = c.GetWidthPoint()
            c = New iTextSharp.text.Chunk(Projectno)
            c.SetBackground(iTextSharp.text.BaseColor.WHITE)
            c.Font = font4
            iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), 75 + contentwidth + 5, itop - 90, 0)
            cb = stamper.GetOverContent(iPages)
            cb.Rectangle(80 + contentwidth, reader.GetPageSize(1).Height - 120, c.GetWidthPoint() + 10, 15.0F)
            cb.Stroke()
            contentwidth = contentwidth + c.GetWidthPoint() + 100

            If Me.ViewState(IsProjectCT) = True Then
                If SiteId.Trim() <> "" Then
                    c = New iTextSharp.text.Chunk("Site Id:")
                    c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                    c.Font = font4
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), 10 + contentwidth, itop - 90, 0)
                    contentwidth += c.GetWidthPoint()
                    If SiteId.Trim() = "" Then
                        SiteId = "_"
                    End If
                    c = New iTextSharp.text.Chunk(SiteId)
                    c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                    c.Font = font4
                    iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), contentwidth + 15, itop - 90, 0)
                    cb = stamper.GetOverContent(iPages)
                    cb.Rectangle(contentwidth + 15, reader.GetPageSize(1).Height - 120, c.GetWidthPoint() + 10, 15.0F)
                    cb.Stroke()
                    contentwidth = contentwidth + c.GetWidthPoint() + 20
                End If
            End If



            If Me.ddlActivityType.SelectedIndex = 2 Then
                c = New iTextSharp.text.Chunk("Subject No:")
                c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                c.Font = font4
                iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), 75, itop - 110, 0)
                contentwidth = c.GetWidthPoint()
                If Me.hdnSubSelection.Value.Trim() = "" Then
                    c = New iTextSharp.text.Chunk("_")
                Else
                    c = New iTextSharp.text.Chunk(subjectno)
                End If
                c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                c.Font = font4
                iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), 75 + contentwidth + 5, itop - 110, 0)
                cb = stamper.GetOverContent(iPages)
                cb.Rectangle(80 + contentwidth, reader.GetPageSize(1).Height - 140, c.GetWidthPoint() + 10, 15.0F)
                cb.Stroke()
                contentwidth = 80 + contentwidth + c.GetWidthPoint() + 10
            End If
            If Me.chkinitial.Checked = False AndAlso Me.ddlActivityType.SelectedIndex = 2 Then
                c = New iTextSharp.text.Chunk("Subject Initials:")
                c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                c.Font = font4
                iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), 10 + contentwidth, itop - 110, 0)
                contentwidth += c.GetWidthPoint()
                If subjectinitial.Trim() = "" Then
                    c = New iTextSharp.text.Chunk("_")
                Else
                    c = New iTextSharp.text.Chunk(subjectinitial)
                End If
                c.SetBackground(iTextSharp.text.BaseColor.WHITE)
                c.Font = font4
                iTextSharp.text.pdf.ColumnText.ShowTextAligned(canvas, iTextSharp.text.Element.ALIGN_LEFT, New iTextSharp.text.Phrase(c), contentwidth + 15, itop - 110, 0)
                cb = stamper.GetOverContent(iPages)
                cb.Rectangle(contentwidth + 15, reader.GetPageSize(1).Height - 140, c.GetWidthPoint() + 10, 15.0F)
                cb.Stroke()
            End If
            cb = stamper.GetOverContent(iPages)
            Dim Path As String = Request.Url.AbsoluteUri.Substring(0, Request.Url.AbsoluteUri.ToString.LastIndexOf("/"))
            Path = Path + "/images/lambda_logo.jpg"
            Dim img As iTextSharp.text.Image = New iTextSharp.text.Jpeg(New Uri(Path))
            cb.AddImage(img, 90.0F, 0, 0, 90.0F, 470, itop - 115)

            If Me.ViewState(vs_sponsorlogofilepath).ToString.Trim() <> "" Then
                cb = stamper.GetOverContent(iPages)
                Dim imglogo As iTextSharp.text.Image = New iTextSharp.text.Jpeg(New Uri(Me.ViewState(vs_sponsorlogofilepath).ToString.Trim()))
                cb.AddImage(imglogo, 90.0F, 0, 0, 90.0F, 380, itop - 115)
            End If

            Return True
        Catch ex As Exception
            Me.ShowErrorMessage(ex.Message, "....AddHeader", ex)
            Return False
        End Try
    End Function

    Public Overrides Sub VerifyRenderingInServerForm(control As Control)
        ' Verifies that the control is rendered

    End Sub

#End Region

#Region "ResetPage"

    Private Sub ResetPage()
        Me.lblSubjectName.Text = ""
        Me.lblSubjectNo.Text = ""
        Me.txtproject.Text = ""
        Me.HFHeaderLabel.Value = ""
        Me.HFHeaderPDF.Value = "."
        Me.HProjectId.Value = ""
        Me.hdnLock.Value = False
        Me.ddlSubject.Items.Clear()
        Me.ddlPeriod.Items.Clear()
        Me.divActivity.Style.Add("Display", "none")
        Me.divReport.Style.Add("Display", "none")
        Me.dvheadershow.Style.Add("display", "none")
        Me.gvwActivity.DataSource = Nothing
        Me.gvwActivity.DataBind()
        Me.gvwReportType.DataSource = Nothing
        Me.gvwReportType.DataBind()
        Me.ddlActivityType.Enabled = False
        Me.ddlPrinttype.Enabled = True
        Me.ddlPrinttype.SelectedIndex = 0
        Me.ddlActivityType.SelectedIndex = 0
        Me.BtnGeneratePdf.Style.Add("Display", "none")
        Me.lockdtl.Style.Add("Display", "none")
        Me.ViewState.Clear()
        Me.chkDataType.Checked = False
        Me.chkSubactivityWise.Checked = False

        If RBLselect.SelectedValue = "0" Then
            Me.chkSubactivityWise.Style.Add("display", "block")
        Else
            Me.chkSubactivityWise.Style.Add("display", "none")
            chkSubactivityWise.Checked = False
        End If
    End Sub

#End Region

#Region "Error Handler"

    Private Sub ShowErrorMessage(ByVal exMessage As String, ByVal eStr As String)
        CType(Me.Master.FindControl("lblerrormsg"), Label).Text = exMessage + "<BR> " + eStr
        objCommon.WriteError(Server, Request, Session, exMessage + "<BR> " + eStr)
    End Sub

    Private Sub ShowErrorMessage(ByVal exMessage As String, ByVal eStr As String, ByVal ex As Exception)
        CType(Me.Master.FindControl("lblerrormsg"), Label).Text = exMessage + "<BR> " + eStr
        objCommon.WriteError(Server, Request, Session, ex, exMessage + "<BR> " + eStr)
    End Sub

#End Region

#Region "Wrap String"
    Public Function WrapString(ByVal str As String, ByVal numOfChar As Long) As String
        Dim newStr As String = ""
        Dim nCount As Long
        Dim bolContinue As Boolean = False
        Do While Len(str)
            Dim strFindText As String = Left$(str, numOfChar)
            'If (strFindText.IndexOf(" ") > -1) Then
            'newStr = newStr + strFindText
            'bolContinue = True
            'Else
            'If bolContinue = True Then
            '    newStr = newStr + Left$(str, numOfChar)
            'Else
            '    newStr = newStr + " " + Left$(str, numOfChar)
            'End If
            'bolContinue = False

            'newStr = newStr + " " + Left$(str, numOfChar)
            'End If
            newStr = newStr + " " + Left$(str, numOfChar)
            str = Mid$(str, numOfChar + 1)
            nCount = nCount + 1
        Loop
        Return newStr.Trim()
    End Function
#End Region

End Class
